Search.setIndex({"alltitles": {"Accessing and Modifying Bits": [[13, "accessing-and-modifying-bits"]], "Adding Gates": [[2, "adding-gates"]], "Adding noise one by one": [[7, "adding-noise-one-by-one"]], "Adding noise to all gates of the same type": [[7, "adding-noise-to-all-gates-of-the-same-type"]], "Amplitude": [[14, "amplitude"]], "Append": [[2, "append"]], "Available operations": [[0, "available-operations"]], "Barrier": [[12, "barrier"]], "Behaviour of include files": [[4, "behaviour-of-include-files"]], "BitString": [[13, "bitstring"]], "Bitwise Operators": [[13, "bitwise-operators"]], "Blocks of Instructions": [[12, "blocks-of-instructions"]], "Bond Dimension": [[14, "bond-dimension"]], "Building noise channels": [[7, "building-noise-channels"]], "Building the Hamiltonian": [[3, "building-the-hamiltonian"]], "Check job status": [[10, "check-job-status"]], "Circuits": [[2, null]], "Circuits & Instructions in MIMIQ": [[2, "circuits-instructions-in-mimiq"]], "Cloud Service": [[10, "cloud-service"]], "Composite Gates": [[12, "composite-gates"]], "Composition: Control, Power, Inverse, Parallel": [[16, "composition-control-power-inverse-parallel"]], "Concatenation and Repetition": [[13, "concatenation-and-repetition"]], "Conclusion": [[6, "conclusion"]], "Conditional logic": [[8, "conditional-logic"]], "Connect to remote service": [[19, "connect-to-remote-service"]], "Connecting to server for sending jobs": [[10, "connecting-to-server-for-sending-jobs"]], "Construct basic circuit": [[19, "construct-basic-circuit"]], "Constructors": [[13, "constructors"]], "Contents": [[1, "contents"], [2, "contents"], [3, "contents"], [4, "contents"], [6, "contents"], [7, "contents"], [8, "contents"], [11, "contents"], [12, "contents"], [13, "contents"], [14, "contents"], [16, "contents"], [19, "contents"]], "Control": [[16, "control"]], "Conversion and Manipulation Methods": [[13, "conversion-and-manipulation-methods"]], "Creating Repeated Operations": [[12, "creating-repeated-operations"]], "Creating a circuit": [[2, "creating-a-circuit"]], "Credentials": [[10, "credentials"]], "Custom Gates": [[16, "custom-gates"]], "Decompose": [[2, "decompose"]], "Defining Symbolic Operations": [[15, "defining-symbolic-operations"]], "Defining Symbols": [[15, "defining-symbols"]], "Details": [[16, null]], "Detector operation.": [[0, "detector-operation"]], "Diffusion": [[12, "diffusion"]], "Documentation Content": [[18, "documentation-content"]], "Entanglement": [[14, "entanglement"]], "Evolution with noise": [[7, "evolution-with-noise"]], "Example: Error Correction Code Block": [[12, "example-error-correction-code-block"]], "Example: Ising Hamiltonian Expectation Value (Energy)": [[17, "example-ising-hamiltonian-expectation-value-energy"]], "Example: Simulate a GHZ circuit": [[19, "example-simulate-a-ghz-circuit"]], "Execute OpenQASM file in MIMIQ": [[4, "execute-openqasm-file-in-mimiq"]], "Execute Stim file on MIMIQ": [[4, "execute-stim-file-on-mimiq"]], "Execute circuit": [[19, "execute-circuit"]], "Execution": [[10, "execution"]], "Execution on MIMIQ": [[10, null]], "Expectation value": [[14, "expectation-value"]], "Exploring the Documentation": [[18, "exploring-the-documentation"]], "Export Protobuf files from MIMIQ": [[4, "export-protobuf-files-from-mimiq"]], "Extract information of unitary gates": [[16, "extract-information-of-unitary-gates"]], "Fidelity and Error Estimates": [[11, "fidelity-and-error-estimates"]], "Format of Results": [[10, "format-of-results"]], "Gate Declaration & Gate Calls": [[12, "gate-declaration-gate-calls"]], "Generalized gates": [[16, "generalized-gates"]], "Get inputs": [[10, "get-inputs"]], "Getting results (Cloud server)": [[10, "getting-results-cloud-server"]], "Getting results (Python session)": [[10, "getting-results-python-session"]], "Hamiltonian": [[3, "hamiltonian"]], "Hamiltonians and Time Evolution": [[3, null]], "How to add noise": [[7, "how-to-add-noise"]], "How to use measurements": [[8, "how-to-use-measurements"]], "How to use operators": [[8, "how-to-use-operators"]], "How to use the Documentation": [[18, "how-to-use-the-documentation"]], "If statements": [[8, "if-statements"]], "Import Protobuf file to MIMIQ": [[4, "import-protobuf-file-to-mimiq"]], "Import and export circuits": [[4, null]], "Important Links": [[18, "important-links"]], "Indices and tables": [[1, "indices-and-tables"]], "Insert": [[2, "insert"]], "Install and load MIMIQ": [[19, "install-and-load-mimiq"]], "Installation": [[6, null]], "Installing MIMIQ Circuits": [[6, "installing-mimiq-circuits"]], "Installing Optional Features": [[6, "installing-optional-features"]], "Introduction": [[1, null]], "Inverse": [[16, "inverse"]], "Ising Model": [[3, "ising-model"]], "Job Management": [[10, "job-management"]], "Jupyter Kernel Setup": [[6, "jupyter-kernel-setup"]], "Kraus operators": [[7, "kraus-operators"]], "List all jobs": [[10, "list-all-jobs"]], "MIMIQ Documentation": [[18, null]], "MIMIQ\u2019s advantage": [[18, "mimiq-s-advantage"]], "Manipulating the Z-register": [[17, "manipulating-the-z-register"]], "Manual": [[5, null]], "Mathematical background": [[7, "mathematical-background"], [16, "mathematical-background"]], "Mathematical definition": [[8, "mathematical-definition"], [8, "id6"], [14, "mathematical-definition"], [14, "id2"], [14, "id4"], [14, "id6"]], "Matrix": [[16, "matrix"]], "Matrix-Product States (MPS)": [[11, "matrix-product-states-mps"]], "Measure": [[8, "measure"]], "Measure, add noise, and extract information": [[19, "measure-add-noise-and-extract-information"]], "Measure-Reset": [[8, "measure-reset"]], "Measuring the Energy": [[3, "measuring-the-energy"]], "More about composite gates": [[12, "more-about-composite-gates"]], "Multi-qubit gates": [[16, "multi-qubit-gates"]], "Noisy simulations on MIMIQ": [[7, null]], "Non-unitary Operations": [[8, null]], "Number of targets": [[16, "number-of-targets"]], "OpenQASM": [[4, "openqasm"]], "OpenQASM and Stim": [[19, "openqasm-and-stim"]], "Operators": [[8, "operators"]], "Operators available in MIMIQ": [[8, "operators-available-in-mimiq"]], "Overview": [[9, null], [10, "overview"]], "Parallel": [[16, "parallel"]], "Pauli String": [[12, "pauli-string"]], "Phase Gradient": [[12, "phase-gradient"]], "Plotting results": [[10, "plotting-results"]], "Polynomial Oracle": [[12, "polynomial-oracle"]], "Power": [[16, "power"]], "Prerequisites": [[6, "prerequisites"]], "Protobuf": [[4, "protobuf"]], "Quantum Fourier Transform": [[12, "quantum-fourier-transform"]], "Quick Start": [[1, "quick-start"], [19, null]], "Registers: quantum/classical/Z-register": [[2, "registers-quantum-classical-z-register"]], "Relations between OpenQASM registers and MIMIQ indices": [[4, "relations-between-openqasm-registers-and-mimiq-indices"]], "Repeated Operations": [[12, "repeated-operations"]], "Reset": [[8, "reset"]], "Results": [[10, "results"]], "Running a noisy circuit": [[7, "running-a-noisy-circuit"]], "Saving and loading results": [[10, "saving-and-loading-results"]], "Schmidt Rank": [[14, "schmidt-rank"]], "Simulating Circuits": [[11, null]], "Simulating Time Evolution": [[3, "simulating-time-evolution"]], "Simulating the Ising Model": [[3, "simulating-the-ising-model"]], "Simulation Methods": [[18, "simulation-methods"]], "Simulator Backends": [[11, "simulator-backends"]], "Single-qubit gates": [[16, "single-qubit-gates"]], "Single-qubit parametric gates": [[16, "single-qubit-parametric-gates"]], "Special Operations": [[12, null]], "Special Topics": [[13, null]], "State Vector": [[11, "state-vector"]], "State vector and probability": [[16, "state-vector-and-probability"]], "Statistical Operations": [[14, null]], "Step 1: Create a Virtual Environment": [[6, "step-1-create-a-virtual-environment"]], "Step 2: Activate the Virtual Environment": [[6, "step-2-activate-the-virtual-environment"]], "Step 3: Install MIMIQ Circuits": [[6, "step-3-install-mimiq-circuits"]], "Step 4: Verify the Installation": [[6, "step-4-verify-the-installation"]], "Stim": [[4, "stim"]], "Storing information in the Z-register": [[17, "storing-information-in-the-z-register"]], "Substituting Symbols with Values": [[15, "substituting-symbols-with-values"]], "Summary of noise functionality": [[7, "summary-of-noise-functionality"]], "Symbolic Operations in MIMIQ": [[15, null]], "Terms of Service": [[10, "terms-of-service"]], "Tokens": [[10, "tokens"]], "Two qubit gates": [[16, "two-qubit-gates"]], "Two-qubit parametric gates": [[16, "two-qubit-parametric-gates"]], "Understanding Sampling": [[11, "understanding-sampling"]], "Unitary Gates": [[16, null]], "Unitary gates in MIMIQ.": [[16, "unitary-gates-in-mimiq"]], "Unitary transformation": [[16, "unitary-transformation"]], "Usage on MIMIQ": [[14, "usage-on-mimiq"], [14, "id3"], [14, "id5"], [14, "id7"]], "Useful Job Management Features": [[10, "useful-job-management-features"]], "User Management": [[10, "user-management"]], "Using BitString in MIMIQ Operations": [[13, "using-bitstring-in-mimiq-operations"]], "Visualizing circuits": [[2, "visualizing-circuits"]], "Von Neumann Entropy": [[14, "von-neumann-entropy"]], "What can you do with the Z-register?": [[17, "what-can-you-do-with-the-z-register"]], "What is MIMIQ": [[18, "what-is-mimiq"]], "What is a circuit and what are instructions": [[2, "what-is-a-circuit-and-what-are-instructions"]], "What is the Z-register?": [[17, "what-is-the-z-register"]], "When Symbolic Operations Can Be Useful": [[15, "when-symbolic-operations-can-be-useful"]], "When to Use Blocks vs Gate Declarations": [[12, "when-to-use-blocks-vs-gate-declarations"]], "Working with Blocks": [[12, "working-with-blocks"]], "Z-register Operations": [[17, null]], "contents": [[10, "contents"], [15, "contents"]], "details": [[4, null]], "mimiqcircuits package": [[0, null]], "push": [[2, "push"]], "push specifics": [[2, "push-specifics"]]}, "docnames": ["apidocs/mimiqcircuits", "index", "manual/circuits", "manual/hamiltonian", "manual/import_export", "manual/index", "manual/installation", "manual/noise", "manual/non_unitary_ops", "manual/overview", "manual/remote_execution", "manual/simulation", "manual/special_ops", "manual/special_topics", "manual/statistical_ops", "manual/symbolic_ops", "manual/unitary_gates", "manual/zops", "mimiq_documentation", "quick_start"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["apidocs/mimiqcircuits.rst", "index.rst", "manual/circuits.rst", "manual/hamiltonian.rst", "manual/import_export.rst", "manual/index.rst", "manual/installation.rst", "manual/noise.rst", "manual/non_unitary_ops.rst", "manual/overview.rst", "manual/remote_execution.rst", "manual/simulation.rst", "manual/special_ops.rst", "manual/special_topics.rst", "manual/statistical_ops.rst", "manual/symbolic_ops.rst", "manual/unitary_gates.rst", "manual/zops.rst", "mimiq_documentation.rst", "quick_start.rst"], "indexentries": {"abstractannotation (class in mimiqcircuits)": [[0, "mimiqcircuits.AbstractAnnotation", false]], "abstractmeasurement (class in mimiqcircuits)": [[0, "mimiqcircuits.AbstractMeasurement", false]], "abstractoperator (class in mimiqcircuits)": [[0, "mimiqcircuits.AbstractOperator", false]], "add (class in mimiqcircuits)": [[0, "mimiqcircuits.Add", false]], "add_noise() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.add_noise", false]], "add_noise_to_gate_parallel() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.add_noise_to_gate_parallel", false]], "add_noise_to_gate_single() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.add_noise_to_gate_single", false]], "add_terms() (mimiqcircuits.hamiltonian method)": [[0, "mimiqcircuits.Hamiltonian.add_terms", false]], "amplitude (class in mimiqcircuits)": [[0, "mimiqcircuits.Amplitude", false]], "amplitudedamping (class in mimiqcircuits)": [[0, "mimiqcircuits.AmplitudeDamping", false]], "append() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.append", false]], "asciicanvas (class in mimiqcircuits)": [[0, "mimiqcircuits.AsciiCanvas", false]], "asciicircuit (class in mimiqcircuits)": [[0, "mimiqcircuits.AsciiCircuit", false]], "asciiwidth() (mimiqcircuits.barrier method)": [[0, "mimiqcircuits.Barrier.asciiwidth", false]], "asciiwidth() (mimiqcircuits.expectationvalue method)": [[0, "mimiqcircuits.ExpectationValue.asciiwidth", false]], "asciiwidth() (mimiqcircuits.ifstatement method)": [[0, "mimiqcircuits.IfStatement.asciiwidth", false]], "asciiwidth() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.asciiwidth", false]], "asciiwidth() (mimiqcircuits.operation method)": [[0, "mimiqcircuits.Operation.asciiwidth", false]], "asciiwidth() (mimiqcircuits.paulistring method)": [[0, "mimiqcircuits.PauliString.asciiwidth", false]], "asciiwidth() (mimiqcircuits.reset method)": [[0, "mimiqcircuits.Reset.asciiwidth", false]], "barrier (class in mimiqcircuits)": [[0, "mimiqcircuits.Barrier", false]], "bits (mimiqcircuits.bitstring property)": [[0, "mimiqcircuits.BitString.bits", false]], "bits (mimiqcircuits.instruction property)": [[0, "mimiqcircuits.Instruction.bits", false]], "bitstring (class in mimiqcircuits)": [[0, "mimiqcircuits.BitString", false]], "bitstring (mimiqcircuits.ifstatement property)": [[0, "mimiqcircuits.IfStatement.bitstring", false]], "block (class in mimiqcircuits)": [[0, "mimiqcircuits.Block", false]], "blockid() (mimiqcircuits.block method)": [[0, "mimiqcircuits.Block.blockid", false]], "bonddim (class in mimiqcircuits)": [[0, "mimiqcircuits.BondDim", false]], "circuit (class in mimiqcircuits)": [[0, "mimiqcircuits.Circuit", false]], "control (class in mimiqcircuits)": [[0, "mimiqcircuits.Control", false]], "control() (in module mimiqcircuits)": [[0, "mimiqcircuits.control", false]], "control() (mimiqcircuits.barrier method)": [[0, "mimiqcircuits.Barrier.control", false]], "control() (mimiqcircuits.bonddim method)": [[0, "mimiqcircuits.BondDim.control", false]], "control() (mimiqcircuits.control method)": [[0, "mimiqcircuits.Control.control", false]], "control() (mimiqcircuits.gate method)": [[0, "mimiqcircuits.Gate.control", false]], "control() (mimiqcircuits.ifstatement method)": [[0, "mimiqcircuits.IfStatement.control", false]], "control() (mimiqcircuits.inverse method)": [[0, "mimiqcircuits.Inverse.control", false]], "control() (mimiqcircuits.lazyexpr method)": [[0, "mimiqcircuits.LazyExpr.control", false]], "control() (mimiqcircuits.measure method)": [[0, "mimiqcircuits.Measure.control", false]], "control() (mimiqcircuits.measurereset method)": [[0, "mimiqcircuits.MeasureReset.control", false]], "control() (mimiqcircuits.measureresetx method)": [[0, "mimiqcircuits.MeasureResetX.control", false]], "control() (mimiqcircuits.measureresety method)": [[0, "mimiqcircuits.MeasureResetY.control", false]], "control() (mimiqcircuits.measurex method)": [[0, "mimiqcircuits.MeasureX.control", false]], "control() (mimiqcircuits.measurexx method)": [[0, "mimiqcircuits.MeasureXX.control", false]], "control() (mimiqcircuits.measurey method)": [[0, "mimiqcircuits.MeasureY.control", false]], "control() (mimiqcircuits.measureyy method)": [[0, "mimiqcircuits.MeasureYY.control", false]], "control() (mimiqcircuits.measurezz method)": [[0, "mimiqcircuits.MeasureZZ.control", false]], "control() (mimiqcircuits.parallel method)": [[0, "mimiqcircuits.Parallel.control", false]], "control() (mimiqcircuits.power method)": [[0, "mimiqcircuits.Power.control", false]], "control() (mimiqcircuits.repeat method)": [[0, "mimiqcircuits.Repeat.control", false]], "control() (mimiqcircuits.reset method)": [[0, "mimiqcircuits.Reset.control", false]], "control() (mimiqcircuits.resetx method)": [[0, "mimiqcircuits.ResetX.control", false]], "control() (mimiqcircuits.resety method)": [[0, "mimiqcircuits.ResetY.control", false]], "control() (mimiqcircuits.schmidtrank method)": [[0, "mimiqcircuits.SchmidtRank.control", false]], "control() (mimiqcircuits.vonneumannentropy method)": [[0, "mimiqcircuits.VonNeumannEntropy.control", false]], "convert_to_numeric() (mimiqcircuits.gateu method)": [[0, "mimiqcircuits.GateU.convert_to_numeric", false]], "copy() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.copy", false]], "copy() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.copy", false]], "copy() (mimiqcircuits.operation method)": [[0, "mimiqcircuits.Operation.copy", false]], "copy() (mimiqcircuits.repeat method)": [[0, "mimiqcircuits.Repeat.copy", false]], "cregsizes (mimiqcircuits.expectationvalue property)": [[0, "mimiqcircuits.ExpectationValue.cregsizes", false]], "cregsizes (mimiqcircuits.operation property)": [[0, "mimiqcircuits.Operation.cregsizes", false]], "cumprobabilities() (mimiqcircuits.krauschannel method)": [[0, "mimiqcircuits.krauschannel.cumprobabilities", false]], "decompose() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.decompose", false]], "decompose() (mimiqcircuits.gatecall method)": [[0, "mimiqcircuits.GateCall.decompose", false]], "decompose() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.decompose", false]], "decompose() (mimiqcircuits.operation method)": [[0, "mimiqcircuits.Operation.decompose", false]], "decompose() (mimiqcircuits.power method)": [[0, "mimiqcircuits.Power.decompose", false]], "deepcopy() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.deepcopy", false]], "deepcopy() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.deepcopy", false]], "deepcopy() (mimiqcircuits.operation method)": [[0, "mimiqcircuits.Operation.deepcopy", false]], "deepcopy() (mimiqcircuits.repeat method)": [[0, "mimiqcircuits.Repeat.deepcopy", false]], "delay (class in mimiqcircuits)": [[0, "mimiqcircuits.Delay", false]], "depolarizing (class in mimiqcircuits)": [[0, "mimiqcircuits.Depolarizing", false]], "depolarizing1 (class in mimiqcircuits)": [[0, "mimiqcircuits.Depolarizing1", false]], "depolarizing2 (class in mimiqcircuits)": [[0, "mimiqcircuits.Depolarizing2", false]], "depth() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.depth", false]], "detector (class in mimiqcircuits)": [[0, "mimiqcircuits.Detector", false]], "diagonalop (class in mimiqcircuits)": [[0, "mimiqcircuits.DiagonalOp", false]], "diffusion (class in mimiqcircuits)": [[0, "mimiqcircuits.Diffusion", false]], "draw() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.draw", false]], "draw_barrier() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.draw_barrier", false]], "draw_box() (mimiqcircuits.asciicanvas method)": [[0, "mimiqcircuits.AsciiCanvas.draw_box", false]], "draw_control() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.draw_control", false]], "draw_double_hline() (mimiqcircuits.asciicanvas method)": [[0, "mimiqcircuits.AsciiCanvas.draw_double_hline", false]], "draw_double_vline() (mimiqcircuits.asciicanvas method)": [[0, "mimiqcircuits.AsciiCanvas.draw_double_vline", false]], "draw_empty() (mimiqcircuits.asciicanvas method)": [[0, "mimiqcircuits.AsciiCanvas.draw_empty", false]], "draw_fill() (mimiqcircuits.asciicanvas method)": [[0, "mimiqcircuits.AsciiCanvas.draw_fill", false]], "draw_hline() (mimiqcircuits.asciicanvas method)": [[0, "mimiqcircuits.AsciiCanvas.draw_hline", false]], "draw_ifstatement() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.draw_ifstatement", false]], "draw_instruction() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.draw_instruction", false]], "draw_operation() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.draw_operation", false]], "draw_parallel() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.draw_parallel", false]], "draw_paulistring() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.draw_paulistring", false]], "draw_reset() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.draw_reset", false]], "draw_text() (mimiqcircuits.asciicanvas method)": [[0, "mimiqcircuits.AsciiCanvas.draw_text", false]], "draw_vline() (mimiqcircuits.asciicanvas method)": [[0, "mimiqcircuits.AsciiCanvas.draw_vline", false]], "draw_vtext() (mimiqcircuits.asciicanvas method)": [[0, "mimiqcircuits.AsciiCanvas.draw_vtext", false]], "draw_wires() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.draw_wires", false]], "emplace() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.emplace", false]], "empty() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.empty", false]], "evaluate() (mimiqcircuits.abstractoperator method)": [[0, "mimiqcircuits.AbstractOperator.evaluate", false]], "evaluate() (mimiqcircuits.amplitudedamping method)": [[0, "mimiqcircuits.AmplitudeDamping.evaluate", false]], "evaluate() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.evaluate", false]], "evaluate() (mimiqcircuits.control method)": [[0, "mimiqcircuits.Control.evaluate", false]], "evaluate() (mimiqcircuits.depolarizing method)": [[0, "mimiqcircuits.Depolarizing.evaluate", false]], "evaluate() (mimiqcircuits.expectationvalue method)": [[0, "mimiqcircuits.ExpectationValue.evaluate", false]], "evaluate() (mimiqcircuits.gate method)": [[0, "mimiqcircuits.Gate.evaluate", false]], "evaluate() (mimiqcircuits.gatecall method)": [[0, "mimiqcircuits.GateCall.evaluate", false]], "evaluate() (mimiqcircuits.gatecustom method)": [[0, "mimiqcircuits.GateCustom.evaluate", false]], "evaluate() (mimiqcircuits.gaternz method)": [[0, "mimiqcircuits.GateRNZ.evaluate", false]], "evaluate() (mimiqcircuits.generalizedamplitudedamping method)": [[0, "mimiqcircuits.GeneralizedAmplitudeDamping.evaluate", false]], "evaluate() (mimiqcircuits.hamiltonian method)": [[0, "mimiqcircuits.Hamiltonian.evaluate", false]], "evaluate() (mimiqcircuits.ifstatement method)": [[0, "mimiqcircuits.IfStatement.evaluate", false]], "evaluate() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.evaluate", false]], "evaluate() (mimiqcircuits.inverse method)": [[0, "mimiqcircuits.Inverse.evaluate", false]], "evaluate() (mimiqcircuits.kraus method)": [[0, "mimiqcircuits.Kraus.evaluate", false]], "evaluate() (mimiqcircuits.mixedunitary method)": [[0, "mimiqcircuits.MixedUnitary.evaluate", false]], "evaluate() (mimiqcircuits.operation method)": [[0, "mimiqcircuits.Operation.evaluate", false]], "evaluate() (mimiqcircuits.parallel method)": [[0, "mimiqcircuits.Parallel.evaluate", false]], "evaluate() (mimiqcircuits.paulinoise method)": [[0, "mimiqcircuits.PauliNoise.evaluate", false]], "evaluate() (mimiqcircuits.paulistring method)": [[0, "mimiqcircuits.PauliString.evaluate", false]], "evaluate() (mimiqcircuits.paulix method)": [[0, "mimiqcircuits.PauliX.evaluate", false]], "evaluate() (mimiqcircuits.pauliy method)": [[0, "mimiqcircuits.PauliY.evaluate", false]], "evaluate() (mimiqcircuits.pauliz method)": [[0, "mimiqcircuits.PauliZ.evaluate", false]], "evaluate() (mimiqcircuits.phaseamplitudedamping method)": [[0, "mimiqcircuits.PhaseAmplitudeDamping.evaluate", false]], "evaluate() (mimiqcircuits.power method)": [[0, "mimiqcircuits.Power.evaluate", false]], "evaluate() (mimiqcircuits.repeat method)": [[0, "mimiqcircuits.Repeat.evaluate", false]], "evaluate() (mimiqcircuits.rescaledgate method)": [[0, "mimiqcircuits.RescaledGate.evaluate", false]], "evaluate() (mimiqcircuits.rpauli method)": [[0, "mimiqcircuits.RPauli.evaluate", false]], "evaluate() (mimiqcircuits.thermalnoise method)": [[0, "mimiqcircuits.ThermalNoise.evaluate", false]], "expectationvalue (class in mimiqcircuits)": [[0, "mimiqcircuits.ExpectationValue", false]], "exponent (mimiqcircuits.power property)": [[0, "mimiqcircuits.Power.exponent", false]], "format_with_targets() (mimiqcircuits.add method)": [[0, "mimiqcircuits.Add.format_with_targets", false]], "format_with_targets() (mimiqcircuits.block method)": [[0, "mimiqcircuits.Block.format_with_targets", false]], "format_with_targets() (mimiqcircuits.multiply method)": [[0, "mimiqcircuits.Multiply.format_with_targets", false]], "format_with_targets() (mimiqcircuits.pow method)": [[0, "mimiqcircuits.Pow.format_with_targets", false]], "format_with_targets() (mimiqcircuits.repeat method)": [[0, "mimiqcircuits.Repeat.format_with_targets", false]], "from_string() (mimiqcircuits.paulistring class method)": [[0, "mimiqcircuits.PauliString.from_string", false]], "fromfunction() (mimiqcircuits.bitstring static method)": [[0, "mimiqcircuits.BitString.fromfunction", false]], "fromint() (mimiqcircuits.bitstring static method)": [[0, "mimiqcircuits.BitString.fromint", false]], "fromnonzeros() (mimiqcircuits.bitstring static method)": [[0, "mimiqcircuits.BitString.fromnonzeros", false]], "fromstring() (mimiqcircuits.bitstring static method)": [[0, "mimiqcircuits.BitString.fromstring", false]], "gate (class in mimiqcircuits)": [[0, "mimiqcircuits.Gate", false]], "gatec3x() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateC3X", false]], "gatecall (class in mimiqcircuits)": [[0, "mimiqcircuits.GateCall", false]], "gateccp() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCCP", false]], "gateccx() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCCX", false]], "gatech() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCH", false]], "gatecp() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCP", false]], "gatecrx() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCRX", false]], "gatecry() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCRY", false]], "gatecrz() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCRZ", false]], "gatecs() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCS", false]], "gatecsdg() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCSDG", false]], "gatecswap() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCSWAP", false]], "gatecsx() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCSX", false]], "gatecsxdg() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCSXDG", false]], "gatecu() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCU", false]], "gatecustom (class in mimiqcircuits)": [[0, "mimiqcircuits.GateCustom", false]], "gatecx() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCX", false]], "gatecy() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCY", false]], "gatecz() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateCZ", false]], "gatedcx (class in mimiqcircuits)": [[0, "mimiqcircuits.GateDCX", false]], "gatedecl (class in mimiqcircuits)": [[0, "mimiqcircuits.GateDecl", false]], "gatedecl() (in module mimiqcircuits)": [[0, "mimiqcircuits.gatedecl", false]], "gateecr (class in mimiqcircuits)": [[0, "mimiqcircuits.GateECR", false]], "gateh (class in mimiqcircuits)": [[0, "mimiqcircuits.GateH", false]], "gatehxy (class in mimiqcircuits)": [[0, "mimiqcircuits.GateHXY", false]], "gatehxz (class in mimiqcircuits)": [[0, "mimiqcircuits.GateHXZ", false]], "gatehyz (class in mimiqcircuits)": [[0, "mimiqcircuits.GateHYZ", false]], "gateid (class in mimiqcircuits)": [[0, "mimiqcircuits.GateID", false]], "gateiswap (class in mimiqcircuits)": [[0, "mimiqcircuits.GateISWAP", false]], "gatep (class in mimiqcircuits)": [[0, "mimiqcircuits.GateP", false]], "gater (class in mimiqcircuits)": [[0, "mimiqcircuits.GateR", false]], "gaternz (class in mimiqcircuits)": [[0, "mimiqcircuits.GateRNZ", false]], "gaterx (class in mimiqcircuits)": [[0, "mimiqcircuits.GateRX", false]], "gaterxx (class in mimiqcircuits)": [[0, "mimiqcircuits.GateRXX", false]], "gatery (class in mimiqcircuits)": [[0, "mimiqcircuits.GateRY", false]], "gateryy (class in mimiqcircuits)": [[0, "mimiqcircuits.GateRYY", false]], "gaterz (class in mimiqcircuits)": [[0, "mimiqcircuits.GateRZ", false]], "gaterzx (class in mimiqcircuits)": [[0, "mimiqcircuits.GateRZX", false]], "gaterzz (class in mimiqcircuits)": [[0, "mimiqcircuits.GateRZZ", false]], "gates (class in mimiqcircuits)": [[0, "mimiqcircuits.GATES", false]], "gates() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateS", false]], "gatesdg() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateSDG", false]], "gateswap (class in mimiqcircuits)": [[0, "mimiqcircuits.GateSWAP", false]], "gatesx() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateSX", false]], "gatesxdg() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateSXDG", false]], "gatesy (class in mimiqcircuits)": [[0, "mimiqcircuits.GateSY", false]], "gatesydg (class in mimiqcircuits)": [[0, "mimiqcircuits.GateSYDG", false]], "gatet() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateT", false]], "gatetdg() (in module mimiqcircuits)": [[0, "mimiqcircuits.GateTDG", false]], "gateu (class in mimiqcircuits)": [[0, "mimiqcircuits.GateU", false]], "gateu1 (class in mimiqcircuits)": [[0, "mimiqcircuits.GateU1", false]], "gateu2 (class in mimiqcircuits)": [[0, "mimiqcircuits.GateU2", false]], "gateu3 (class in mimiqcircuits)": [[0, "mimiqcircuits.GateU3", false]], "gatex (class in mimiqcircuits)": [[0, "mimiqcircuits.GateX", false]], "gatexxminusyy (class in mimiqcircuits)": [[0, "mimiqcircuits.GateXXminusYY", false]], "gatexxplusyy (class in mimiqcircuits)": [[0, "mimiqcircuits.GateXXplusYY", false]], "gatey (class in mimiqcircuits)": [[0, "mimiqcircuits.GateY", false]], "gatez (class in mimiqcircuits)": [[0, "mimiqcircuits.GateZ", false]], "generalizedamplitudedamping (class in mimiqcircuits)": [[0, "mimiqcircuits.GeneralizedAmplitudeDamping", false]], "get_bit_row() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.get_bit_row", false]], "get_bits() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.get_bits", false]], "get_bitstring() (mimiqcircuits.ifstatement method)": [[0, "mimiqcircuits.IfStatement.get_bitstring", false]], "get_coefficient() (mimiqcircuits.hamiltonianterm method)": [[0, "mimiqcircuits.HamiltonianTerm.get_coefficient", false]], "get_cols() (mimiqcircuits.asciicanvas method)": [[0, "mimiqcircuits.AsciiCanvas.get_cols", false]], "get_current_col() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.get_current_col", false]], "get_notes() (mimiqcircuits.detector method)": [[0, "mimiqcircuits.Detector.get_notes", false]], "get_notes() (mimiqcircuits.observableinclude method)": [[0, "mimiqcircuits.ObservableInclude.get_notes", false]], "get_notes() (mimiqcircuits.qubitcoordinates method)": [[0, "mimiqcircuits.QubitCoordinates.get_notes", false]], "get_notes() (mimiqcircuits.shiftcoordinates method)": [[0, "mimiqcircuits.ShiftCoordinates.get_notes", false]], "get_notes() (mimiqcircuits.tick method)": [[0, "mimiqcircuits.Tick.get_notes", false]], "get_on_qubits() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.get_on_qubits", false]], "get_operation() (mimiqcircuits.control method)": [[0, "mimiqcircuits.Control.get_operation", false]], "get_operation() (mimiqcircuits.expectationvalue method)": [[0, "mimiqcircuits.ExpectationValue.get_operation", false]], "get_operation() (mimiqcircuits.hamiltonianterm method)": [[0, "mimiqcircuits.HamiltonianTerm.get_operation", false]], "get_operation() (mimiqcircuits.ifstatement method)": [[0, "mimiqcircuits.IfStatement.get_operation", false]], "get_operation() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.get_operation", false]], "get_operation() (mimiqcircuits.measure method)": [[0, "mimiqcircuits.Measure.get_operation", false]], "get_operation() (mimiqcircuits.measurereset method)": [[0, "mimiqcircuits.MeasureReset.get_operation", false]], "get_operation() (mimiqcircuits.measureresetx method)": [[0, "mimiqcircuits.MeasureResetX.get_operation", false]], "get_operation() (mimiqcircuits.measureresety method)": [[0, "mimiqcircuits.MeasureResetY.get_operation", false]], "get_operation() (mimiqcircuits.measurex method)": [[0, "mimiqcircuits.MeasureX.get_operation", false]], "get_operation() (mimiqcircuits.measurexx method)": [[0, "mimiqcircuits.MeasureXX.get_operation", false]], "get_operation() (mimiqcircuits.measurey method)": [[0, "mimiqcircuits.MeasureY.get_operation", false]], "get_operation() (mimiqcircuits.measureyy method)": [[0, "mimiqcircuits.MeasureYY.get_operation", false]], "get_operation() (mimiqcircuits.measurezz method)": [[0, "mimiqcircuits.MeasureZZ.get_operation", false]], "get_operation() (mimiqcircuits.not method)": [[0, "mimiqcircuits.Not.get_operation", false]], "get_operation() (mimiqcircuits.operation method)": [[0, "mimiqcircuits.Operation.get_operation", false]], "get_operation() (mimiqcircuits.parallel method)": [[0, "mimiqcircuits.Parallel.get_operation", false]], "get_operation() (mimiqcircuits.repeat method)": [[0, "mimiqcircuits.Repeat.get_operation", false]], "get_operation() (mimiqcircuits.rescaledgate method)": [[0, "mimiqcircuits.RescaledGate.get_operation", false]], "get_param() (mimiqcircuits.rescaledgate method)": [[0, "mimiqcircuits.RescaledGate.get_param", false]], "get_qubit_row() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.get_qubit_row", false]], "get_qubits() (mimiqcircuits.hamiltonianterm method)": [[0, "mimiqcircuits.HamiltonianTerm.get_qubits", false]], "get_qubits() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.get_qubits", false]], "get_rows() (mimiqcircuits.asciicanvas method)": [[0, "mimiqcircuits.AsciiCanvas.get_rows", false]], "get_scale() (mimiqcircuits.rescaledgate method)": [[0, "mimiqcircuits.RescaledGate.get_scale", false]], "get_zvars() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.get_zvars", false]], "get_zvars_row() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.get_zvars_row", false]], "getparam() (mimiqcircuits.operation method)": [[0, "mimiqcircuits.Operation.getparam", false]], "getparam() (mimiqcircuits.repeat method)": [[0, "mimiqcircuits.Repeat.getparam", false]], "getparams() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.getparams", false]], "getparams() (mimiqcircuits.control method)": [[0, "mimiqcircuits.Control.getparams", false]], "getparams() (mimiqcircuits.expectationvalue method)": [[0, "mimiqcircuits.ExpectationValue.getparams", false]], "getparams() (mimiqcircuits.ifstatement method)": [[0, "mimiqcircuits.IfStatement.getparams", false]], "getparams() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.getparams", false]], "getparams() (mimiqcircuits.inverse method)": [[0, "mimiqcircuits.Inverse.getparams", false]], "getparams() (mimiqcircuits.operation method)": [[0, "mimiqcircuits.Operation.getparams", false]], "getparams() (mimiqcircuits.power method)": [[0, "mimiqcircuits.Power.getparams", false]], "getparams() (mimiqcircuits.repeat method)": [[0, "mimiqcircuits.Repeat.getparams", false]], "gettypekey() (mimiqcircuits.control method)": [[0, "mimiqcircuits.Control.gettypekey", false]], "gettypekey() (mimiqcircuits.gate method)": [[0, "mimiqcircuits.Gate.gettypekey", false]], "gettypekey() (mimiqcircuits.inverse method)": [[0, "mimiqcircuits.Inverse.gettypekey", false]], "gettypekey() (mimiqcircuits.parallel method)": [[0, "mimiqcircuits.Parallel.gettypekey", false]], "gettypekey() (mimiqcircuits.power method)": [[0, "mimiqcircuits.Power.gettypekey", false]], "hamiltonian (class in mimiqcircuits)": [[0, "mimiqcircuits.Hamiltonian", false]], "hamiltonianterm (class in mimiqcircuits)": [[0, "mimiqcircuits.HamiltonianTerm", false]], "histogram() (mimiqcircuits.qcsresults method)": [[0, "mimiqcircuits.QCSResults.histogram", false]], "histzvars() (mimiqcircuits.qcsresults method)": [[0, "mimiqcircuits.QCSResults.histzvars", false]], "ifstatement (class in mimiqcircuits)": [[0, "mimiqcircuits.IfStatement", false]], "insert() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.insert", false]], "instruction (class in mimiqcircuits)": [[0, "mimiqcircuits.Instruction", false]], "inverse (class in mimiqcircuits)": [[0, "mimiqcircuits.Inverse", false]], "inverse() (in module mimiqcircuits)": [[0, "mimiqcircuits.inverse", false]], "inverse() (mimiqcircuits.abstractoperator method)": [[0, "mimiqcircuits.AbstractOperator.inverse", false]], "inverse() (mimiqcircuits.amplitude method)": [[0, "mimiqcircuits.Amplitude.inverse", false]], "inverse() (mimiqcircuits.barrier method)": [[0, "mimiqcircuits.Barrier.inverse", false]], "inverse() (mimiqcircuits.bonddim method)": [[0, "mimiqcircuits.BondDim.inverse", false]], "inverse() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.inverse", false]], "inverse() (mimiqcircuits.control method)": [[0, "mimiqcircuits.Control.inverse", false]], "inverse() (mimiqcircuits.delay method)": [[0, "mimiqcircuits.Delay.inverse", false]], "inverse() (mimiqcircuits.expectationvalue method)": [[0, "mimiqcircuits.ExpectationValue.inverse", false]], "inverse() (mimiqcircuits.gate method)": [[0, "mimiqcircuits.Gate.inverse", false]], "inverse() (mimiqcircuits.gatecustom method)": [[0, "mimiqcircuits.GateCustom.inverse", false]], "inverse() (mimiqcircuits.gateecr method)": [[0, "mimiqcircuits.GateECR.inverse", false]], "inverse() (mimiqcircuits.gateh method)": [[0, "mimiqcircuits.GateH.inverse", false]], "inverse() (mimiqcircuits.gatehxy method)": [[0, "mimiqcircuits.GateHXY.inverse", false]], "inverse() (mimiqcircuits.gatehyz method)": [[0, "mimiqcircuits.GateHYZ.inverse", false]], "inverse() (mimiqcircuits.gateid method)": [[0, "mimiqcircuits.GateID.inverse", false]], "inverse() (mimiqcircuits.gatep method)": [[0, "mimiqcircuits.GateP.inverse", false]], "inverse() (mimiqcircuits.gater method)": [[0, "mimiqcircuits.GateR.inverse", false]], "inverse() (mimiqcircuits.gaternz method)": [[0, "mimiqcircuits.GateRNZ.inverse", false]], "inverse() (mimiqcircuits.gaterx method)": [[0, "mimiqcircuits.GateRX.inverse", false]], "inverse() (mimiqcircuits.gaterxx method)": [[0, "mimiqcircuits.GateRXX.inverse", false]], "inverse() (mimiqcircuits.gatery method)": [[0, "mimiqcircuits.GateRY.inverse", false]], "inverse() (mimiqcircuits.gateryy method)": [[0, "mimiqcircuits.GateRYY.inverse", false]], "inverse() (mimiqcircuits.gaterz method)": [[0, "mimiqcircuits.GateRZ.inverse", false]], "inverse() (mimiqcircuits.gaterzx method)": [[0, "mimiqcircuits.GateRZX.inverse", false]], "inverse() (mimiqcircuits.gaterzz method)": [[0, "mimiqcircuits.GateRZZ.inverse", false]], "inverse() (mimiqcircuits.gateswap method)": [[0, "mimiqcircuits.GateSWAP.inverse", false]], "inverse() (mimiqcircuits.gatesy method)": [[0, "mimiqcircuits.GateSY.inverse", false]], "inverse() (mimiqcircuits.gatesydg method)": [[0, "mimiqcircuits.GateSYDG.inverse", false]], "inverse() (mimiqcircuits.gateu method)": [[0, "mimiqcircuits.GateU.inverse", false]], "inverse() (mimiqcircuits.gateu1 method)": [[0, "mimiqcircuits.GateU1.inverse", false]], "inverse() (mimiqcircuits.gateu2 method)": [[0, "mimiqcircuits.GateU2.inverse", false]], "inverse() (mimiqcircuits.gateu3 method)": [[0, "mimiqcircuits.GateU3.inverse", false]], "inverse() (mimiqcircuits.gatex method)": [[0, "mimiqcircuits.GateX.inverse", false]], "inverse() (mimiqcircuits.gatexxminusyy method)": [[0, "mimiqcircuits.GateXXminusYY.inverse", false]], "inverse() (mimiqcircuits.gatexxplusyy method)": [[0, "mimiqcircuits.GateXXplusYY.inverse", false]], "inverse() (mimiqcircuits.gatey method)": [[0, "mimiqcircuits.GateY.inverse", false]], "inverse() (mimiqcircuits.gatez method)": [[0, "mimiqcircuits.GateZ.inverse", false]], "inverse() (mimiqcircuits.ifstatement method)": [[0, "mimiqcircuits.IfStatement.inverse", false]], "inverse() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.inverse", false]], "inverse() (mimiqcircuits.inverse method)": [[0, "mimiqcircuits.Inverse.inverse", false]], "inverse() (mimiqcircuits.krauschannel method)": [[0, "mimiqcircuits.krauschannel.inverse", false]], "inverse() (mimiqcircuits.lazyexpr method)": [[0, "mimiqcircuits.LazyExpr.inverse", false]], "inverse() (mimiqcircuits.measure method)": [[0, "mimiqcircuits.Measure.inverse", false]], "inverse() (mimiqcircuits.measurereset method)": [[0, "mimiqcircuits.MeasureReset.inverse", false]], "inverse() (mimiqcircuits.measureresetx method)": [[0, "mimiqcircuits.MeasureResetX.inverse", false]], "inverse() (mimiqcircuits.measureresety method)": [[0, "mimiqcircuits.MeasureResetY.inverse", false]], "inverse() (mimiqcircuits.measurex method)": [[0, "mimiqcircuits.MeasureX.inverse", false]], "inverse() (mimiqcircuits.measurexx method)": [[0, "mimiqcircuits.MeasureXX.inverse", false]], "inverse() (mimiqcircuits.measurey method)": [[0, "mimiqcircuits.MeasureY.inverse", false]], "inverse() (mimiqcircuits.measureyy method)": [[0, "mimiqcircuits.MeasureYY.inverse", false]], "inverse() (mimiqcircuits.measurezz method)": [[0, "mimiqcircuits.MeasureZZ.inverse", false]], "inverse() (mimiqcircuits.not method)": [[0, "mimiqcircuits.Not.inverse", false]], "inverse() (mimiqcircuits.parallel method)": [[0, "mimiqcircuits.Parallel.inverse", false]], "inverse() (mimiqcircuits.paulistring method)": [[0, "mimiqcircuits.PauliString.inverse", false]], "inverse() (mimiqcircuits.polynomialoracle method)": [[0, "mimiqcircuits.PolynomialOracle.inverse", false]], "inverse() (mimiqcircuits.pow method)": [[0, "mimiqcircuits.Pow.inverse", false]], "inverse() (mimiqcircuits.power method)": [[0, "mimiqcircuits.Power.inverse", false]], "inverse() (mimiqcircuits.repeat method)": [[0, "mimiqcircuits.Repeat.inverse", false]], "inverse() (mimiqcircuits.reset method)": [[0, "mimiqcircuits.Reset.inverse", false]], "inverse() (mimiqcircuits.resetx method)": [[0, "mimiqcircuits.ResetX.inverse", false]], "inverse() (mimiqcircuits.resety method)": [[0, "mimiqcircuits.ResetY.inverse", false]], "inverse() (mimiqcircuits.schmidtrank method)": [[0, "mimiqcircuits.SchmidtRank.inverse", false]], "inverse() (mimiqcircuits.vonneumannentropy method)": [[0, "mimiqcircuits.VonNeumannEntropy.inverse", false]], "is_identity() (mimiqcircuits.paulistring method)": [[0, "mimiqcircuits.PauliString.is_identity", false]], "is_symbolic() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.is_symbolic", false]], "is_symbolic() (mimiqcircuits.operation method)": [[0, "mimiqcircuits.Operation.is_symbolic", false]], "is_unitary() (mimiqcircuits.gatecustom static method)": [[0, "mimiqcircuits.GateCustom.is_unitary", false]], "is_valid_power_of_2() (mimiqcircuits.operator static method)": [[0, "mimiqcircuits.Operator.is_valid_power_of_2", false]], "iscptp() (mimiqcircuits.krauschannel class method)": [[0, "mimiqcircuits.krauschannel.isCPTP", false]], "isidentity() (mimiqcircuits.gateid method)": [[0, "mimiqcircuits.GateID.isidentity", false]], "isidentity() (mimiqcircuits.gaterx method)": [[0, "mimiqcircuits.GateRX.isidentity", false]], "isidentity() (mimiqcircuits.gatery method)": [[0, "mimiqcircuits.GateRY.isidentity", false]], "isidentity() (mimiqcircuits.gaterz method)": [[0, "mimiqcircuits.GateRZ.isidentity", false]], "isidentity() (mimiqcircuits.operation method)": [[0, "mimiqcircuits.Operation.isidentity", false]], "isidentity() (mimiqcircuits.paulistring method)": [[0, "mimiqcircuits.PauliString.isidentity", false]], "isidentity() (mimiqcircuits.rpauli method)": [[0, "mimiqcircuits.RPauli.isidentity", false]], "ismixedunitary() (mimiqcircuits.depolarizing class method)": [[0, "mimiqcircuits.Depolarizing.ismixedunitary", false]], "ismixedunitary() (mimiqcircuits.krauschannel class method)": [[0, "mimiqcircuits.krauschannel.ismixedunitary", false]], "ismixedunitary() (mimiqcircuits.mixedunitary class method)": [[0, "mimiqcircuits.MixedUnitary.ismixedunitary", false]], "ismixedunitary() (mimiqcircuits.paulinoise class method)": [[0, "mimiqcircuits.PauliNoise.ismixedunitary", false]], "ismixedunitary() (mimiqcircuits.paulix static method)": [[0, "mimiqcircuits.PauliX.ismixedunitary", false]], "ismixedunitary() (mimiqcircuits.pauliy static method)": [[0, "mimiqcircuits.PauliY.ismixedunitary", false]], "ismixedunitary() (mimiqcircuits.pauliz static method)": [[0, "mimiqcircuits.PauliZ.ismixedunitary", false]], "isopalias() (mimiqcircuits.gatesy method)": [[0, "mimiqcircuits.GateSY.isopalias", false]], "isopalias() (mimiqcircuits.gatesydg method)": [[0, "mimiqcircuits.GateSYDG.isopalias", false]], "isopalias() (mimiqcircuits.inverse method)": [[0, "mimiqcircuits.Inverse.isopalias", false]], "isopalias() (mimiqcircuits.operation method)": [[0, "mimiqcircuits.Operation.isopalias", false]], "isopalias() (mimiqcircuits.power method)": [[0, "mimiqcircuits.Power.isopalias", false]], "isunitary() (mimiqcircuits.abstractoperator static method)": [[0, "mimiqcircuits.AbstractOperator.isunitary", false]], "isunitary() (mimiqcircuits.amplitude static method)": [[0, "mimiqcircuits.Amplitude.isunitary", false]], "isunitary() (mimiqcircuits.barrier static method)": [[0, "mimiqcircuits.Barrier.isunitary", false]], "isunitary() (mimiqcircuits.bonddim static method)": [[0, "mimiqcircuits.BondDim.isunitary", false]], "isunitary() (mimiqcircuits.expectationvalue static method)": [[0, "mimiqcircuits.ExpectationValue.isunitary", false]], "isunitary() (mimiqcircuits.gate static method)": [[0, "mimiqcircuits.Gate.isunitary", false]], "isunitary() (mimiqcircuits.operation class method)": [[0, "mimiqcircuits.Operation.isunitary", false]], "isunitary() (mimiqcircuits.rpauli method)": [[0, "mimiqcircuits.RPauli.isunitary", false]], "isunitary() (mimiqcircuits.schmidtrank static method)": [[0, "mimiqcircuits.SchmidtRank.isunitary", false]], "isunitary() (mimiqcircuits.vonneumannentropy static method)": [[0, "mimiqcircuits.VonNeumannEntropy.isunitary", false]], "iswrapper() (mimiqcircuits.abstractmeasurement method)": [[0, "mimiqcircuits.AbstractMeasurement.iswrapper", false]], "iswrapper() (mimiqcircuits.abstractoperator method)": [[0, "mimiqcircuits.AbstractOperator.iswrapper", false]], "iswrapper() (mimiqcircuits.add method)": [[0, "mimiqcircuits.Add.iswrapper", false]], "iswrapper() (mimiqcircuits.amplitude method)": [[0, "mimiqcircuits.Amplitude.iswrapper", false]], "iswrapper() (mimiqcircuits.amplitudedamping method)": [[0, "mimiqcircuits.AmplitudeDamping.iswrapper", false]], "iswrapper() (mimiqcircuits.barrier method)": [[0, "mimiqcircuits.Barrier.iswrapper", false]], "iswrapper() (mimiqcircuits.block method)": [[0, "mimiqcircuits.Block.iswrapper", false]], "iswrapper() (mimiqcircuits.bonddim method)": [[0, "mimiqcircuits.BondDim.iswrapper", false]], "iswrapper() (mimiqcircuits.control method)": [[0, "mimiqcircuits.Control.iswrapper", false]], "iswrapper() (mimiqcircuits.depolarizing method)": [[0, "mimiqcircuits.Depolarizing.iswrapper", false]], "iswrapper() (mimiqcircuits.detector method)": [[0, "mimiqcircuits.Detector.iswrapper", false]], "iswrapper() (mimiqcircuits.expectationvalue method)": [[0, "mimiqcircuits.ExpectationValue.iswrapper", false]], "iswrapper() (mimiqcircuits.gate method)": [[0, "mimiqcircuits.Gate.iswrapper", false]], "iswrapper() (mimiqcircuits.generalizedamplitudedamping method)": [[0, "mimiqcircuits.GeneralizedAmplitudeDamping.iswrapper", false]], "iswrapper() (mimiqcircuits.ifstatement method)": [[0, "mimiqcircuits.IfStatement.iswrapper", false]], "iswrapper() (mimiqcircuits.inverse method)": [[0, "mimiqcircuits.Inverse.iswrapper", false]], "iswrapper() (mimiqcircuits.krauschannel method)": [[0, "mimiqcircuits.krauschannel.iswrapper", false]], "iswrapper() (mimiqcircuits.measure method)": [[0, "mimiqcircuits.Measure.iswrapper", false]], "iswrapper() (mimiqcircuits.measurereset method)": [[0, "mimiqcircuits.MeasureReset.iswrapper", false]], "iswrapper() (mimiqcircuits.measureresetx method)": [[0, "mimiqcircuits.MeasureResetX.iswrapper", false]], "iswrapper() (mimiqcircuits.measureresety method)": [[0, "mimiqcircuits.MeasureResetY.iswrapper", false]], "iswrapper() (mimiqcircuits.measurex method)": [[0, "mimiqcircuits.MeasureX.iswrapper", false]], "iswrapper() (mimiqcircuits.measurexx method)": [[0, "mimiqcircuits.MeasureXX.iswrapper", false]], "iswrapper() (mimiqcircuits.measurey method)": [[0, "mimiqcircuits.MeasureY.iswrapper", false]], "iswrapper() (mimiqcircuits.measureyy method)": [[0, "mimiqcircuits.MeasureYY.iswrapper", false]], "iswrapper() (mimiqcircuits.measurezz method)": [[0, "mimiqcircuits.MeasureZZ.iswrapper", false]], "iswrapper() (mimiqcircuits.multiply method)": [[0, "mimiqcircuits.Multiply.iswrapper", false]], "iswrapper() (mimiqcircuits.not method)": [[0, "mimiqcircuits.Not.iswrapper", false]], "iswrapper() (mimiqcircuits.observableinclude method)": [[0, "mimiqcircuits.ObservableInclude.iswrapper", false]], "iswrapper() (mimiqcircuits.operation method)": [[0, "mimiqcircuits.Operation.iswrapper", false]], "iswrapper() (mimiqcircuits.operator method)": [[0, "mimiqcircuits.Operator.iswrapper", false]], "iswrapper() (mimiqcircuits.parallel method)": [[0, "mimiqcircuits.Parallel.iswrapper", false]], "iswrapper() (mimiqcircuits.paulinoise method)": [[0, "mimiqcircuits.PauliNoise.iswrapper", false]], "iswrapper() (mimiqcircuits.pow method)": [[0, "mimiqcircuits.Pow.iswrapper", false]], "iswrapper() (mimiqcircuits.power method)": [[0, "mimiqcircuits.Power.iswrapper", false]], "iswrapper() (mimiqcircuits.qubitcoordinates method)": [[0, "mimiqcircuits.QubitCoordinates.iswrapper", false]], "iswrapper() (mimiqcircuits.repeat method)": [[0, "mimiqcircuits.Repeat.iswrapper", false]], "iswrapper() (mimiqcircuits.reset method)": [[0, "mimiqcircuits.Reset.iswrapper", false]], "iswrapper() (mimiqcircuits.resetx method)": [[0, "mimiqcircuits.ResetX.iswrapper", false]], "iswrapper() (mimiqcircuits.resety method)": [[0, "mimiqcircuits.ResetY.iswrapper", false]], "iswrapper() (mimiqcircuits.rpauli method)": [[0, "mimiqcircuits.RPauli.iswrapper", false]], "iswrapper() (mimiqcircuits.schmidtrank method)": [[0, "mimiqcircuits.SchmidtRank.iswrapper", false]], "iswrapper() (mimiqcircuits.shiftcoordinates method)": [[0, "mimiqcircuits.ShiftCoordinates.iswrapper", false]], "iswrapper() (mimiqcircuits.tick method)": [[0, "mimiqcircuits.Tick.iswrapper", false]], "iswrapper() (mimiqcircuits.vonneumannentropy method)": [[0, "mimiqcircuits.VonNeumannEntropy.iswrapper", false]], "kraus (class in mimiqcircuits)": [[0, "mimiqcircuits.Kraus", false]], "krauschannel (class in mimiqcircuits)": [[0, "mimiqcircuits.krauschannel", false]], "krausmatrices() (mimiqcircuits.amplitudedamping method)": [[0, "mimiqcircuits.AmplitudeDamping.krausmatrices", false]], "krausmatrices() (mimiqcircuits.depolarizing method)": [[0, "mimiqcircuits.Depolarizing.krausmatrices", false]], "krausmatrices() (mimiqcircuits.generalizedamplitudedamping method)": [[0, "mimiqcircuits.GeneralizedAmplitudeDamping.krausmatrices", false]], "krausmatrices() (mimiqcircuits.krauschannel method)": [[0, "mimiqcircuits.krauschannel.krausmatrices", false]], "krausmatrices() (mimiqcircuits.mixedunitary method)": [[0, "mimiqcircuits.MixedUnitary.krausmatrices", false]], "krausmatrices() (mimiqcircuits.paulinoise method)": [[0, "mimiqcircuits.PauliNoise.krausmatrices", false]], "krausmatrices() (mimiqcircuits.paulix method)": [[0, "mimiqcircuits.PauliX.krausmatrices", false]], "krausmatrices() (mimiqcircuits.pauliy method)": [[0, "mimiqcircuits.PauliY.krausmatrices", false]], "krausmatrices() (mimiqcircuits.pauliz method)": [[0, "mimiqcircuits.PauliZ.krausmatrices", false]], "krausmatrices() (mimiqcircuits.phaseamplitudedamping method)": [[0, "mimiqcircuits.PhaseAmplitudeDamping.krausmatrices", false]], "krausmatrices() (mimiqcircuits.projectivenoise method)": [[0, "mimiqcircuits.ProjectiveNoise.krausmatrices", false]], "krausmatrices() (mimiqcircuits.thermalnoise method)": [[0, "mimiqcircuits.ThermalNoise.krausmatrices", false]], "krausoperators() (mimiqcircuits.amplitudedamping method)": [[0, "mimiqcircuits.AmplitudeDamping.krausoperators", false]], "krausoperators() (mimiqcircuits.depolarizing method)": [[0, "mimiqcircuits.Depolarizing.krausoperators", false]], "krausoperators() (mimiqcircuits.generalizedamplitudedamping method)": [[0, "mimiqcircuits.GeneralizedAmplitudeDamping.krausoperators", false]], "krausoperators() (mimiqcircuits.kraus method)": [[0, "mimiqcircuits.Kraus.krausoperators", false]], "krausoperators() (mimiqcircuits.krauschannel method)": [[0, "mimiqcircuits.krauschannel.krausoperators", false]], "krausoperators() (mimiqcircuits.mixedunitary method)": [[0, "mimiqcircuits.MixedUnitary.krausoperators", false]], "krausoperators() (mimiqcircuits.paulinoise method)": [[0, "mimiqcircuits.PauliNoise.krausoperators", false]], "krausoperators() (mimiqcircuits.paulix method)": [[0, "mimiqcircuits.PauliX.krausoperators", false]], "krausoperators() (mimiqcircuits.pauliy method)": [[0, "mimiqcircuits.PauliY.krausoperators", false]], "krausoperators() (mimiqcircuits.pauliz method)": [[0, "mimiqcircuits.PauliZ.krausoperators", false]], "krausoperators() (mimiqcircuits.phaseamplitudedamping method)": [[0, "mimiqcircuits.PhaseAmplitudeDamping.krausoperators", false]], "krausoperators() (mimiqcircuits.projectivenoisex method)": [[0, "mimiqcircuits.ProjectiveNoiseX.krausoperators", false]], "krausoperators() (mimiqcircuits.projectivenoisey method)": [[0, "mimiqcircuits.ProjectiveNoiseY.krausoperators", false]], "krausoperators() (mimiqcircuits.projectivenoisez method)": [[0, "mimiqcircuits.ProjectiveNoiseZ.krausoperators", false]], "krausoperators() (mimiqcircuits.reset method)": [[0, "mimiqcircuits.Reset.krausoperators", false]], "krausoperators() (mimiqcircuits.thermalnoise method)": [[0, "mimiqcircuits.ThermalNoise.krausoperators", false]], "lazyarg (class in mimiqcircuits)": [[0, "mimiqcircuits.LazyArg", false]], "lazyexpr (class in mimiqcircuits)": [[0, "mimiqcircuits.LazyExpr", false]], "list() (mimiqcircuits.gates static method)": [[0, "mimiqcircuits.GATES.list", false]], "listvars() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.listvars", false]], "listvars() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.listvars", false]], "listvars() (mimiqcircuits.operation method)": [[0, "mimiqcircuits.Operation.listvars", false]], "loadproto() (mimiqcircuits.circuit static method)": [[0, "mimiqcircuits.Circuit.loadproto", false]], "loadproto() (mimiqcircuits.hamiltonian static method)": [[0, "mimiqcircuits.Hamiltonian.loadproto", false]], "loadproto() (mimiqcircuits.qcsresults static method)": [[0, "mimiqcircuits.QCSResults.loadproto", false]], "matrix() (mimiqcircuits.abstractoperator method)": [[0, "mimiqcircuits.AbstractOperator.matrix", false]], "matrix() (mimiqcircuits.gatecall method)": [[0, "mimiqcircuits.GateCall.matrix", false]], "matrix() (mimiqcircuits.gaternz method)": [[0, "mimiqcircuits.GateRNZ.matrix", false]], "matrix() (mimiqcircuits.hamiltonian method)": [[0, "mimiqcircuits.Hamiltonian.matrix", false]], "matrix() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.matrix", false]], "matrix() (mimiqcircuits.rpauli method)": [[0, "mimiqcircuits.RPauli.matrix", false]], "matrix() (mimiqcircuits.thermalnoise static method)": [[0, "mimiqcircuits.ThermalNoise.matrix", false]], "measure (class in mimiqcircuits)": [[0, "mimiqcircuits.Measure", false]], "measurereset (class in mimiqcircuits)": [[0, "mimiqcircuits.MeasureReset", false]], "measureresetx (class in mimiqcircuits)": [[0, "mimiqcircuits.MeasureResetX", false]], "measureresety (class in mimiqcircuits)": [[0, "mimiqcircuits.MeasureResetY", false]], "measureresetz (class in mimiqcircuits)": [[0, "mimiqcircuits.MeasureResetZ", false]], "measurex (class in mimiqcircuits)": [[0, "mimiqcircuits.MeasureX", false]], "measurexx (class in mimiqcircuits)": [[0, "mimiqcircuits.MeasureXX", false]], "measurey (class in mimiqcircuits)": [[0, "mimiqcircuits.MeasureY", false]], "measureyy (class in mimiqcircuits)": [[0, "mimiqcircuits.MeasureYY", false]], "measurez (class in mimiqcircuits)": [[0, "mimiqcircuits.MeasureZ", false]], "measurezz (class in mimiqcircuits)": [[0, "mimiqcircuits.MeasureZZ", false]], "mimiqcircuits": [[0, "module-mimiqcircuits", false]], "mimiqconnection (class in mimiqcircuits)": [[0, "mimiqcircuits.MimiqConnection", false]], "mixedunitary (class in mimiqcircuits)": [[0, "mimiqcircuits.MixedUnitary", false]], "module": [[0, "module-mimiqcircuits", false]], "multiply (class in mimiqcircuits)": [[0, "mimiqcircuits.Multiply", false]], "name (mimiqcircuits.operation property)": [[0, "mimiqcircuits.Operation.name", false]], "name (mimiqcircuits.phasegradient attribute)": [[0, "mimiqcircuits.PhaseGradient.name", false]], "name (mimiqcircuits.qft attribute)": [[0, "mimiqcircuits.QFT.name", false]], "nonzeros() (mimiqcircuits.bitstring method)": [[0, "mimiqcircuits.BitString.nonzeros", false]], "not (class in mimiqcircuits)": [[0, "mimiqcircuits.Not", false]], "num_bits (mimiqcircuits.gatedecl property)": [[0, "mimiqcircuits.GateDecl.num_bits", false]], "num_bits (mimiqcircuits.operation property)": [[0, "mimiqcircuits.Operation.num_bits", false]], "num_bits() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.num_bits", false]], "num_bits() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.num_bits", false]], "num_controls (mimiqcircuits.control attribute)": [[0, "mimiqcircuits.Control.num_controls", false]], "num_controls (mimiqcircuits.control property)": [[0, "id0", false]], "num_cregs (mimiqcircuits.operation property)": [[0, "mimiqcircuits.Operation.num_cregs", false]], "num_qregs (mimiqcircuits.operation property)": [[0, "mimiqcircuits.Operation.num_qregs", false]], "num_qubits (mimiqcircuits.bonddim property)": [[0, "mimiqcircuits.BondDim.num_qubits", false]], "num_qubits (mimiqcircuits.depolarizing property)": [[0, "mimiqcircuits.Depolarizing.num_qubits", false]], "num_qubits (mimiqcircuits.diffusion attribute)": [[0, "mimiqcircuits.Diffusion.num_qubits", false]], "num_qubits (mimiqcircuits.gatecustom property)": [[0, "mimiqcircuits.GateCustom.num_qubits", false]], "num_qubits (mimiqcircuits.gatedecl property)": [[0, "mimiqcircuits.GateDecl.num_qubits", false]], "num_qubits (mimiqcircuits.generalizedamplitudedamping property)": [[0, "mimiqcircuits.GeneralizedAmplitudeDamping.num_qubits", false]], "num_qubits (mimiqcircuits.operation property)": [[0, "mimiqcircuits.Operation.num_qubits", false]], "num_qubits (mimiqcircuits.paulinoise property)": [[0, "mimiqcircuits.PauliNoise.num_qubits", false]], "num_qubits (mimiqcircuits.paulistring property)": [[0, "mimiqcircuits.PauliString.num_qubits", false]], "num_qubits (mimiqcircuits.phasegradient attribute)": [[0, "mimiqcircuits.PhaseGradient.num_qubits", false]], "num_qubits (mimiqcircuits.qft attribute)": [[0, "mimiqcircuits.QFT.num_qubits", false]], "num_qubits (mimiqcircuits.schmidtrank property)": [[0, "mimiqcircuits.SchmidtRank.num_qubits", false]], "num_qubits (mimiqcircuits.sigmaminus property)": [[0, "mimiqcircuits.SigmaMinus.num_qubits", false]], "num_qubits (mimiqcircuits.sigmaplus property)": [[0, "mimiqcircuits.SigmaPlus.num_qubits", false]], "num_qubits (mimiqcircuits.vonneumannentropy property)": [[0, "mimiqcircuits.VonNeumannEntropy.num_qubits", false]], "num_qubits() (mimiqcircuits.bitstring method)": [[0, "mimiqcircuits.BitString.num_qubits", false]], "num_qubits() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.num_qubits", false]], "num_qubits() (mimiqcircuits.hamiltonian method)": [[0, "mimiqcircuits.Hamiltonian.num_qubits", false]], "num_qubits() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.num_qubits", false]], "num_repeats (mimiqcircuits.parallel property)": [[0, "mimiqcircuits.Parallel.num_repeats", false]], "num_targets (mimiqcircuits.control property)": [[0, "mimiqcircuits.Control.num_targets", false]], "num_terms() (mimiqcircuits.hamiltonian method)": [[0, "mimiqcircuits.Hamiltonian.num_terms", false]], "num_zvars (mimiqcircuits.gatedecl property)": [[0, "mimiqcircuits.GateDecl.num_zvars", false]], "num_zvars (mimiqcircuits.operation property)": [[0, "mimiqcircuits.Operation.num_zvars", false]], "num_zvars() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.num_zvars", false]], "num_zvars() (mimiqcircuits.instruction method)": [[0, "mimiqcircuits.Instruction.num_zvars", false]], "numparams() (mimiqcircuits.krauschannel method)": [[0, "mimiqcircuits.krauschannel.numparams", false]], "numparams() (mimiqcircuits.operation method)": [[0, "mimiqcircuits.Operation.numparams", false]], "observableinclude (class in mimiqcircuits)": [[0, "mimiqcircuits.ObservableInclude", false]], "op (mimiqcircuits.control attribute)": [[0, "mimiqcircuits.Control.op", false]], "op (mimiqcircuits.control property)": [[0, "id1", false]], "op (mimiqcircuits.ifstatement property)": [[0, "mimiqcircuits.IfStatement.op", false]], "op (mimiqcircuits.parallel property)": [[0, "mimiqcircuits.Parallel.op", false]], "op (mimiqcircuits.power property)": [[0, "mimiqcircuits.Power.op", false]], "operation (class in mimiqcircuits)": [[0, "mimiqcircuits.Operation", false]], "operation (mimiqcircuits.instruction property)": [[0, "mimiqcircuits.Instruction.operation", false]], "operator (class in mimiqcircuits)": [[0, "mimiqcircuits.Operator", false]], "opname (mimiqcircuits.amplitudedamping property)": [[0, "mimiqcircuits.AmplitudeDamping.opname", false]], "opname() (mimiqcircuits.abstractoperator method)": [[0, "mimiqcircuits.AbstractOperator.opname", false]], "opname() (mimiqcircuits.detector static method)": [[0, "mimiqcircuits.Detector.opname", false]], "opname() (mimiqcircuits.expectationvalue method)": [[0, "mimiqcircuits.ExpectationValue.opname", false]], "opname() (mimiqcircuits.observableinclude static method)": [[0, "mimiqcircuits.ObservableInclude.opname", false]], "opname() (mimiqcircuits.operator method)": [[0, "mimiqcircuits.Operator.opname", false]], "opname() (mimiqcircuits.projectivenoisex method)": [[0, "mimiqcircuits.ProjectiveNoiseX.opname", false]], "opname() (mimiqcircuits.projectivenoisey method)": [[0, "mimiqcircuits.ProjectiveNoiseY.opname", false]], "opname() (mimiqcircuits.projectivenoisez method)": [[0, "mimiqcircuits.ProjectiveNoiseZ.opname", false]], "opname() (mimiqcircuits.qubitcoordinates static method)": [[0, "mimiqcircuits.QubitCoordinates.opname", false]], "opname() (mimiqcircuits.shiftcoordinates static method)": [[0, "mimiqcircuits.ShiftCoordinates.opname", false]], "opname() (mimiqcircuits.tick static method)": [[0, "mimiqcircuits.Tick.opname", false]], "opsquared() (mimiqcircuits.diagonalop method)": [[0, "mimiqcircuits.DiagonalOp.opsquared", false]], "opsquared() (mimiqcircuits.operator method)": [[0, "mimiqcircuits.Operator.opsquared", false]], "opsquared() (mimiqcircuits.projector0 method)": [[0, "mimiqcircuits.Projector0.opsquared", false]], "opsquared() (mimiqcircuits.projector00 method)": [[0, "mimiqcircuits.Projector00.opsquared", false]], "opsquared() (mimiqcircuits.projector01 method)": [[0, "mimiqcircuits.Projector01.opsquared", false]], "opsquared() (mimiqcircuits.projector1 method)": [[0, "mimiqcircuits.Projector1.opsquared", false]], "opsquared() (mimiqcircuits.projector10 method)": [[0, "mimiqcircuits.Projector10.opsquared", false]], "opsquared() (mimiqcircuits.projector11 method)": [[0, "mimiqcircuits.Projector11.opsquared", false]], "opsquared() (mimiqcircuits.projectorx0 method)": [[0, "mimiqcircuits.ProjectorX0.opsquared", false]], "opsquared() (mimiqcircuits.projectorx1 method)": [[0, "mimiqcircuits.ProjectorX1.opsquared", false]], "opsquared() (mimiqcircuits.projectory0 method)": [[0, "mimiqcircuits.ProjectorY0.opsquared", false]], "opsquared() (mimiqcircuits.projectory1 method)": [[0, "mimiqcircuits.ProjectorY1.opsquared", false]], "opsquared() (mimiqcircuits.sigmaminus method)": [[0, "mimiqcircuits.SigmaMinus.opsquared", false]], "opsquared() (mimiqcircuits.sigmaplus method)": [[0, "mimiqcircuits.SigmaPlus.opsquared", false]], "parallel (class in mimiqcircuits)": [[0, "mimiqcircuits.Parallel", false]], "parallel() (in module mimiqcircuits)": [[0, "mimiqcircuits.parallel", false]], "parallel() (mimiqcircuits.control method)": [[0, "mimiqcircuits.Control.parallel", false]], "parallel() (mimiqcircuits.gate method)": [[0, "mimiqcircuits.Gate.parallel", false]], "parallel() (mimiqcircuits.inverse method)": [[0, "mimiqcircuits.Inverse.parallel", false]], "parallel() (mimiqcircuits.lazyexpr method)": [[0, "mimiqcircuits.LazyExpr.parallel", false]], "parallel() (mimiqcircuits.parallel method)": [[0, "mimiqcircuits.Parallel.parallel", false]], "parallel() (mimiqcircuits.power method)": [[0, "mimiqcircuits.Power.parallel", false]], "parallel() (mimiqcircuits.repeat method)": [[0, "mimiqcircuits.Repeat.parallel", false]], "parnames (mimiqcircuits.amplitudedamping property)": [[0, "mimiqcircuits.AmplitudeDamping.parnames", false]], "parnames (mimiqcircuits.bonddim property)": [[0, "mimiqcircuits.BondDim.parnames", false]], "parnames (mimiqcircuits.depolarizing property)": [[0, "mimiqcircuits.Depolarizing.parnames", false]], "parnames (mimiqcircuits.diagonalop property)": [[0, "mimiqcircuits.DiagonalOp.parnames", false]], "parnames (mimiqcircuits.generalizedamplitudedamping property)": [[0, "mimiqcircuits.GeneralizedAmplitudeDamping.parnames", false]], "parnames (mimiqcircuits.operation property)": [[0, "mimiqcircuits.Operation.parnames", false]], "parnames (mimiqcircuits.operator property)": [[0, "mimiqcircuits.Operator.parnames", false]], "parnames (mimiqcircuits.paulinoise property)": [[0, "mimiqcircuits.PauliNoise.parnames", false]], "parnames (mimiqcircuits.paulistring property)": [[0, "mimiqcircuits.PauliString.parnames", false]], "parnames (mimiqcircuits.phaseamplitudedamping property)": [[0, "mimiqcircuits.PhaseAmplitudeDamping.parnames", false]], "parnames (mimiqcircuits.projector0 property)": [[0, "mimiqcircuits.Projector0.parnames", false]], "parnames (mimiqcircuits.projector00 property)": [[0, "mimiqcircuits.Projector00.parnames", false]], "parnames (mimiqcircuits.projector01 property)": [[0, "mimiqcircuits.Projector01.parnames", false]], "parnames (mimiqcircuits.projector1 property)": [[0, "mimiqcircuits.Projector1.parnames", false]], "parnames (mimiqcircuits.projector10 property)": [[0, "mimiqcircuits.Projector10.parnames", false]], "parnames (mimiqcircuits.projector11 property)": [[0, "mimiqcircuits.Projector11.parnames", false]], "parnames (mimiqcircuits.projectorx0 property)": [[0, "mimiqcircuits.ProjectorX0.parnames", false]], "parnames (mimiqcircuits.projectorx1 property)": [[0, "mimiqcircuits.ProjectorX1.parnames", false]], "parnames (mimiqcircuits.projectory0 property)": [[0, "mimiqcircuits.ProjectorY0.parnames", false]], "parnames (mimiqcircuits.projectory1 property)": [[0, "mimiqcircuits.ProjectorY1.parnames", false]], "parnames (mimiqcircuits.schmidtrank property)": [[0, "mimiqcircuits.SchmidtRank.parnames", false]], "parnames (mimiqcircuits.sigmaminus property)": [[0, "mimiqcircuits.SigmaMinus.parnames", false]], "parnames (mimiqcircuits.sigmaplus property)": [[0, "mimiqcircuits.SigmaPlus.parnames", false]], "parnames (mimiqcircuits.thermalnoise property)": [[0, "mimiqcircuits.ThermalNoise.parnames", false]], "parnames (mimiqcircuits.vonneumannentropy property)": [[0, "mimiqcircuits.VonNeumannEntropy.parnames", false]], "paulinoise (class in mimiqcircuits)": [[0, "mimiqcircuits.PauliNoise", false]], "paulistring (class in mimiqcircuits)": [[0, "mimiqcircuits.PauliString", false]], "paulix (class in mimiqcircuits)": [[0, "mimiqcircuits.PauliX", false]], "pauliy (class in mimiqcircuits)": [[0, "mimiqcircuits.PauliY", false]], "pauliz (class in mimiqcircuits)": [[0, "mimiqcircuits.PauliZ", false]], "phaseamplitudedamping (class in mimiqcircuits)": [[0, "mimiqcircuits.PhaseAmplitudeDamping", false]], "phasegradient (class in mimiqcircuits)": [[0, "mimiqcircuits.PhaseGradient", false]], "polynomialoracle (class in mimiqcircuits)": [[0, "mimiqcircuits.PolynomialOracle", false]], "pow (class in mimiqcircuits)": [[0, "mimiqcircuits.Pow", false]], "power (class in mimiqcircuits)": [[0, "mimiqcircuits.Power", false]], "power() (in module mimiqcircuits)": [[0, "mimiqcircuits.power", false]], "power() (mimiqcircuits.abstractoperator method)": [[0, "mimiqcircuits.AbstractOperator.power", false]], "power() (mimiqcircuits.barrier method)": [[0, "mimiqcircuits.Barrier.power", false]], "power() (mimiqcircuits.bonddim method)": [[0, "mimiqcircuits.BondDim.power", false]], "power() (mimiqcircuits.control method)": [[0, "mimiqcircuits.Control.power", false]], "power() (mimiqcircuits.delay method)": [[0, "mimiqcircuits.Delay.power", false]], "power() (mimiqcircuits.expectationvalue method)": [[0, "mimiqcircuits.ExpectationValue.power", false]], "power() (mimiqcircuits.gate method)": [[0, "mimiqcircuits.Gate.power", false]], "power() (mimiqcircuits.gaternz method)": [[0, "mimiqcircuits.GateRNZ.power", false]], "power() (mimiqcircuits.ifstatement method)": [[0, "mimiqcircuits.IfStatement.power", false]], "power() (mimiqcircuits.inverse method)": [[0, "mimiqcircuits.Inverse.power", false]], "power() (mimiqcircuits.krauschannel method)": [[0, "mimiqcircuits.krauschannel.power", false]], "power() (mimiqcircuits.lazyexpr method)": [[0, "mimiqcircuits.LazyExpr.power", false]], "power() (mimiqcircuits.measure method)": [[0, "mimiqcircuits.Measure.power", false]], "power() (mimiqcircuits.measurereset method)": [[0, "mimiqcircuits.MeasureReset.power", false]], "power() (mimiqcircuits.measureresetx method)": [[0, "mimiqcircuits.MeasureResetX.power", false]], "power() (mimiqcircuits.measureresety method)": [[0, "mimiqcircuits.MeasureResetY.power", false]], "power() (mimiqcircuits.measurex method)": [[0, "mimiqcircuits.MeasureX.power", false]], "power() (mimiqcircuits.measurexx method)": [[0, "mimiqcircuits.MeasureXX.power", false]], "power() (mimiqcircuits.measurey method)": [[0, "mimiqcircuits.MeasureY.power", false]], "power() (mimiqcircuits.measureyy method)": [[0, "mimiqcircuits.MeasureYY.power", false]], "power() (mimiqcircuits.measurezz method)": [[0, "mimiqcircuits.MeasureZZ.power", false]], "power() (mimiqcircuits.parallel method)": [[0, "mimiqcircuits.Parallel.power", false]], "power() (mimiqcircuits.power method)": [[0, "mimiqcircuits.Power.power", false]], "power() (mimiqcircuits.repeat method)": [[0, "mimiqcircuits.Repeat.power", false]], "power() (mimiqcircuits.reset method)": [[0, "mimiqcircuits.Reset.power", false]], "power() (mimiqcircuits.resetx method)": [[0, "mimiqcircuits.ResetX.power", false]], "power() (mimiqcircuits.resety method)": [[0, "mimiqcircuits.ResetY.power", false]], "power() (mimiqcircuits.schmidtrank method)": [[0, "mimiqcircuits.SchmidtRank.power", false]], "power() (mimiqcircuits.vonneumannentropy method)": [[0, "mimiqcircuits.VonNeumannEntropy.power", false]], "pretty_print() (mimiqcircuits.gatecustom method)": [[0, "mimiqcircuits.GateCustom.pretty_print", false]], "pretty_print() (mimiqcircuits.operator method)": [[0, "mimiqcircuits.Operator.pretty_print", false]], "probabilities() (mimiqcircuits.depolarizing method)": [[0, "mimiqcircuits.Depolarizing.probabilities", false]], "probabilities() (mimiqcircuits.krauschannel method)": [[0, "mimiqcircuits.krauschannel.probabilities", false]], "probabilities() (mimiqcircuits.mixedunitary method)": [[0, "mimiqcircuits.MixedUnitary.probabilities", false]], "probabilities() (mimiqcircuits.paulinoise method)": [[0, "mimiqcircuits.PauliNoise.probabilities", false]], "probabilities() (mimiqcircuits.paulix method)": [[0, "mimiqcircuits.PauliX.probabilities", false]], "probabilities() (mimiqcircuits.pauliy method)": [[0, "mimiqcircuits.PauliY.probabilities", false]], "probabilities() (mimiqcircuits.pauliz method)": [[0, "mimiqcircuits.PauliZ.probabilities", false]], "projectivenoise (class in mimiqcircuits)": [[0, "mimiqcircuits.ProjectiveNoise", false]], "projectivenoisex (class in mimiqcircuits)": [[0, "mimiqcircuits.ProjectiveNoiseX", false]], "projectivenoisey (class in mimiqcircuits)": [[0, "mimiqcircuits.ProjectiveNoiseY", false]], "projectivenoisez (class in mimiqcircuits)": [[0, "mimiqcircuits.ProjectiveNoiseZ", false]], "projector0 (class in mimiqcircuits)": [[0, "mimiqcircuits.Projector0", false]], "projector00 (class in mimiqcircuits)": [[0, "mimiqcircuits.Projector00", false]], "projector01 (class in mimiqcircuits)": [[0, "mimiqcircuits.Projector01", false]], "projector1 (class in mimiqcircuits)": [[0, "mimiqcircuits.Projector1", false]], "projector10 (class in mimiqcircuits)": [[0, "mimiqcircuits.Projector10", false]], "projector11 (class in mimiqcircuits)": [[0, "mimiqcircuits.Projector11", false]], "projectorx0 (class in mimiqcircuits)": [[0, "mimiqcircuits.ProjectorX0", false]], "projectorx1 (class in mimiqcircuits)": [[0, "mimiqcircuits.ProjectorX1", false]], "projectory0 (class in mimiqcircuits)": [[0, "mimiqcircuits.ProjectorY0", false]], "projectory1 (class in mimiqcircuits)": [[0, "mimiqcircuits.ProjectorY1", false]], "projectorz0 (class in mimiqcircuits)": [[0, "mimiqcircuits.ProjectorZ0", false]], "projectorz1 (class in mimiqcircuits)": [[0, "mimiqcircuits.ProjectorZ1", false]], "push() (mimiqcircuits.block method)": [[0, "mimiqcircuits.Block.push", false]], "push() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.push", false]], "push() (mimiqcircuits.hamiltonian method)": [[0, "mimiqcircuits.Hamiltonian.push", false]], "push_expval() (in module mimiqcircuits)": [[0, "mimiqcircuits.push_expval", false]], "push_expval() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.push_expval", false]], "push_lietrotter() (in module mimiqcircuits)": [[0, "mimiqcircuits.push_lietrotter", false]], "push_lietrotter() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.push_lietrotter", false]], "push_line() (mimiqcircuits.asciicanvas method)": [[0, "mimiqcircuits.AsciiCanvas.push_line", false]], "push_suzukitrotter() (in module mimiqcircuits)": [[0, "mimiqcircuits.push_suzukitrotter", false]], "push_suzukitrotter() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.push_suzukitrotter", false]], "push_yoshidatrotter() (in module mimiqcircuits)": [[0, "mimiqcircuits.push_yoshidatrotter", false]], "push_yoshidatrotter() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.push_yoshidatrotter", false]], "qcsresults (class in mimiqcircuits)": [[0, "mimiqcircuits.QCSResults", false]], "qft (class in mimiqcircuits)": [[0, "mimiqcircuits.QFT", false]], "qregsizes (mimiqcircuits.expectationvalue property)": [[0, "mimiqcircuits.ExpectationValue.qregsizes", false]], "qregsizes (mimiqcircuits.operation property)": [[0, "mimiqcircuits.Operation.qregsizes", false]], "qregsizes (mimiqcircuits.phasegradient attribute)": [[0, "mimiqcircuits.PhaseGradient.qregsizes", false]], "qregsizes (mimiqcircuits.qft attribute)": [[0, "mimiqcircuits.QFT.qregsizes", false]], "qubitcoordinates (class in mimiqcircuits)": [[0, "mimiqcircuits.QubitCoordinates", false]], "qubits (mimiqcircuits.instruction property)": [[0, "mimiqcircuits.Instruction.qubits", false]], "remove() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.remove", false]], "repeat (class in mimiqcircuits)": [[0, "mimiqcircuits.Repeat", false]], "repeat() (in module mimiqcircuits)": [[0, "mimiqcircuits.repeat", false]], "repeat() (mimiqcircuits.gate method)": [[0, "mimiqcircuits.Gate.repeat", false]], "rescale() (mimiqcircuits.diagonalop method)": [[0, "mimiqcircuits.DiagonalOp.rescale", false]], "rescale() (mimiqcircuits.operator method)": [[0, "mimiqcircuits.Operator.rescale", false]], "rescale() (mimiqcircuits.projector0 method)": [[0, "mimiqcircuits.Projector0.rescale", false]], "rescale() (mimiqcircuits.projector00 method)": [[0, "mimiqcircuits.Projector00.rescale", false]], "rescale() (mimiqcircuits.projector01 method)": [[0, "mimiqcircuits.Projector01.rescale", false]], "rescale() (mimiqcircuits.projector1 method)": [[0, "mimiqcircuits.Projector1.rescale", false]], "rescale() (mimiqcircuits.projector10 method)": [[0, "mimiqcircuits.Projector10.rescale", false]], "rescale() (mimiqcircuits.projector11 method)": [[0, "mimiqcircuits.Projector11.rescale", false]], "rescale() (mimiqcircuits.projectorx0 method)": [[0, "mimiqcircuits.ProjectorX0.rescale", false]], "rescale() (mimiqcircuits.projectorx1 method)": [[0, "mimiqcircuits.ProjectorX1.rescale", false]], "rescale() (mimiqcircuits.projectory0 method)": [[0, "mimiqcircuits.ProjectorY0.rescale", false]], "rescale() (mimiqcircuits.projectory1 method)": [[0, "mimiqcircuits.ProjectorY1.rescale", false]], "rescale() (mimiqcircuits.rescaledgate method)": [[0, "mimiqcircuits.RescaledGate.rescale", false]], "rescale() (mimiqcircuits.sigmaminus method)": [[0, "mimiqcircuits.SigmaMinus.rescale", false]], "rescale() (mimiqcircuits.sigmaplus method)": [[0, "mimiqcircuits.SigmaPlus.rescale", false]], "rescale_in_place() (mimiqcircuits.rescaledgate method)": [[0, "mimiqcircuits.RescaledGate.rescale_in_place", false]], "rescale_inplace() (mimiqcircuits.diagonalop method)": [[0, "mimiqcircuits.DiagonalOp.rescale_inplace", false]], "rescale_inplace() (mimiqcircuits.operator method)": [[0, "mimiqcircuits.Operator.rescale_inplace", false]], "rescale_inplace() (mimiqcircuits.projector0 method)": [[0, "mimiqcircuits.Projector0.rescale_inplace", false]], "rescale_inplace() (mimiqcircuits.projector00 method)": [[0, "mimiqcircuits.Projector00.rescale_inplace", false]], "rescale_inplace() (mimiqcircuits.projector01 method)": [[0, "mimiqcircuits.Projector01.rescale_inplace", false]], "rescale_inplace() (mimiqcircuits.projector1 method)": [[0, "mimiqcircuits.Projector1.rescale_inplace", false]], "rescale_inplace() (mimiqcircuits.projector10 method)": [[0, "mimiqcircuits.Projector10.rescale_inplace", false]], "rescale_inplace() (mimiqcircuits.projector11 method)": [[0, "mimiqcircuits.Projector11.rescale_inplace", false]], "rescale_inplace() (mimiqcircuits.projectorx0 method)": [[0, "mimiqcircuits.ProjectorX0.rescale_inplace", false]], "rescale_inplace() (mimiqcircuits.projectorx1 method)": [[0, "mimiqcircuits.ProjectorX1.rescale_inplace", false]], "rescale_inplace() (mimiqcircuits.projectory0 method)": [[0, "mimiqcircuits.ProjectorY0.rescale_inplace", false]], "rescale_inplace() (mimiqcircuits.projectory1 method)": [[0, "mimiqcircuits.ProjectorY1.rescale_inplace", false]], "rescale_inplace() (mimiqcircuits.sigmaminus method)": [[0, "mimiqcircuits.SigmaMinus.rescale_inplace", false]], "rescaledgate (class in mimiqcircuits)": [[0, "mimiqcircuits.RescaledGate", false]], "reset (class in mimiqcircuits)": [[0, "mimiqcircuits.Reset", false]], "reset() (mimiqcircuits.asciicanvas method)": [[0, "mimiqcircuits.AsciiCanvas.reset", false]], "reset() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.reset", false]], "resetx (class in mimiqcircuits)": [[0, "mimiqcircuits.ResetX", false]], "resety (class in mimiqcircuits)": [[0, "mimiqcircuits.ResetY", false]], "resetz (class in mimiqcircuits)": [[0, "mimiqcircuits.ResetZ", false]], "rpauli (class in mimiqcircuits)": [[0, "mimiqcircuits.RPauli", false]], "sample_mixedunitaries() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.sample_mixedunitaries", false]], "saveproto() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.saveproto", false]], "saveproto() (mimiqcircuits.hamiltonian method)": [[0, "mimiqcircuits.Hamiltonian.saveproto", false]], "saveproto() (mimiqcircuits.qcsresults method)": [[0, "mimiqcircuits.QCSResults.saveproto", false]], "schmidtrank (class in mimiqcircuits)": [[0, "mimiqcircuits.SchmidtRank", false]], "set_current_col() (mimiqcircuits.asciicircuit method)": [[0, "mimiqcircuits.AsciiCircuit.set_current_col", false]], "shiftcoordinates (class in mimiqcircuits)": [[0, "mimiqcircuits.ShiftCoordinates", false]], "sigmaminus (class in mimiqcircuits)": [[0, "mimiqcircuits.SigmaMinus", false]], "sigmaplus (class in mimiqcircuits)": [[0, "mimiqcircuits.SigmaPlus", false]], "specify_operations() (mimiqcircuits.circuit method)": [[0, "mimiqcircuits.Circuit.specify_operations", false]], "squaredkrausoperators() (mimiqcircuits.krauschannel method)": [[0, "mimiqcircuits.krauschannel.squaredkrausoperators", false]], "thermalnoise (class in mimiqcircuits)": [[0, "mimiqcircuits.ThermalNoise", false]], "tick (class in mimiqcircuits)": [[0, "mimiqcircuits.Tick", false]], "to01() (mimiqcircuits.bitstring method)": [[0, "mimiqcircuits.BitString.to01", false]], "toindex() (mimiqcircuits.bitstring method)": [[0, "mimiqcircuits.BitString.toindex", false]], "tointeger() (mimiqcircuits.bitstring method)": [[0, "mimiqcircuits.BitString.tointeger", false]], "unitarygates() (mimiqcircuits.depolarizing method)": [[0, "mimiqcircuits.Depolarizing.unitarygates", false]], "unitarygates() (mimiqcircuits.krauschannel method)": [[0, "mimiqcircuits.krauschannel.unitarygates", false]], "unitarygates() (mimiqcircuits.mixedunitary method)": [[0, "mimiqcircuits.MixedUnitary.unitarygates", false]], "unitarygates() (mimiqcircuits.paulinoise method)": [[0, "mimiqcircuits.PauliNoise.unitarygates", false]], "unitarygates() (mimiqcircuits.paulix method)": [[0, "mimiqcircuits.PauliX.unitarygates", false]], "unitarygates() (mimiqcircuits.pauliy method)": [[0, "mimiqcircuits.PauliY.unitarygates", false]], "unitarygates() (mimiqcircuits.pauliz method)": [[0, "mimiqcircuits.PauliZ.unitarygates", false]], "unitarymatrices() (mimiqcircuits.depolarizing method)": [[0, "mimiqcircuits.Depolarizing.unitarymatrices", false]], "unitarymatrices() (mimiqcircuits.krauschannel method)": [[0, "mimiqcircuits.krauschannel.unitarymatrices", false]], "unitarymatrices() (mimiqcircuits.mixedunitary method)": [[0, "mimiqcircuits.MixedUnitary.unitarymatrices", false]], "unitarymatrices() (mimiqcircuits.paulinoise method)": [[0, "mimiqcircuits.PauliNoise.unitarymatrices", false]], "unitarymatrices() (mimiqcircuits.paulix method)": [[0, "mimiqcircuits.PauliX.unitarymatrices", false]], "unitarymatrices() (mimiqcircuits.pauliy method)": [[0, "mimiqcircuits.PauliY.unitarymatrices", false]], "unitarymatrices() (mimiqcircuits.pauliz method)": [[0, "mimiqcircuits.PauliZ.unitarymatrices", false]], "unwrapped_matrix() (mimiqcircuits.paulistring method)": [[0, "mimiqcircuits.PauliString.unwrapped_matrix", false]], "unwrappedcumprobabilities() (mimiqcircuits.krauschannel method)": [[0, "mimiqcircuits.krauschannel.unwrappedcumprobabilities", false]], "unwrappedkrausmatrices() (mimiqcircuits.kraus method)": [[0, "mimiqcircuits.Kraus.unwrappedkrausmatrices", false]], "unwrappedkrausmatrices() (mimiqcircuits.krauschannel method)": [[0, "mimiqcircuits.krauschannel.unwrappedkrausmatrices", false]], "unwrappedkrausmatrices() (mimiqcircuits.mixedunitary method)": [[0, "mimiqcircuits.MixedUnitary.unwrappedkrausmatrices", false]], "unwrappedkrausmatrices() (mimiqcircuits.paulinoise method)": [[0, "mimiqcircuits.PauliNoise.unwrappedkrausmatrices", false]], "unwrappedmatrix() (mimiqcircuits.abstractoperator method)": [[0, "mimiqcircuits.AbstractOperator.unwrappedmatrix", false]], "unwrappedmatrix() (mimiqcircuits.operator method)": [[0, "mimiqcircuits.Operator.unwrappedmatrix", false]], "unwrappedunitarymatrices() (mimiqcircuits.krauschannel method)": [[0, "mimiqcircuits.krauschannel.unwrappedunitarymatrices", false]], "vonneumannentropy (class in mimiqcircuits)": [[0, "mimiqcircuits.VonNeumannEntropy", false]], "zeros() (mimiqcircuits.bitstring method)": [[0, "mimiqcircuits.BitString.zeros", false]], "zregsizes (mimiqcircuits.amplitude property)": [[0, "mimiqcircuits.Amplitude.zregsizes", false]], "zregsizes (mimiqcircuits.expectationvalue property)": [[0, "mimiqcircuits.ExpectationValue.zregsizes", false]], "zregsizes (mimiqcircuits.operation property)": [[0, "mimiqcircuits.Operation.zregsizes", false]], "zvars (mimiqcircuits.instruction property)": [[0, "mimiqcircuits.Instruction.zvars", false]]}, "objects": {"": [[0, 0, 0, "-", "mimiqcircuits"]], "mimiqcircuits": [[0, 1, 1, "", "AbstractAnnotation"], [0, 1, 1, "", "AbstractMeasurement"], [0, 1, 1, "", "AbstractOperator"], [0, 1, 1, "", "Add"], [0, 1, 1, "", "Amplitude"], [0, 1, 1, "", "AmplitudeDamping"], [0, 1, 1, "", "AsciiCanvas"], [0, 1, 1, "", "AsciiCircuit"], [0, 1, 1, "", "Barrier"], [0, 1, 1, "", "BitString"], [0, 1, 1, "", "Block"], [0, 1, 1, "", "BondDim"], [0, 1, 1, "", "Circuit"], [0, 1, 1, "", "Control"], [0, 1, 1, "", "Delay"], [0, 1, 1, "", "Depolarizing"], [0, 1, 1, "", "Depolarizing1"], [0, 1, 1, "", "Depolarizing2"], [0, 1, 1, "", "Detector"], [0, 1, 1, "", "DiagonalOp"], [0, 1, 1, "", "Diffusion"], [0, 1, 1, "", "ExpectationValue"], [0, 1, 1, "", "GATES"], [0, 1, 1, "", "Gate"], [0, 5, 1, "", "GateC3X"], [0, 5, 1, "", "GateCCP"], [0, 5, 1, "", "GateCCX"], [0, 5, 1, "", "GateCH"], [0, 5, 1, "", "GateCP"], [0, 5, 1, "", "GateCRX"], [0, 5, 1, "", "GateCRY"], [0, 5, 1, "", "GateCRZ"], [0, 5, 1, "", "GateCS"], [0, 5, 1, "", "GateCSDG"], [0, 5, 1, "", "GateCSWAP"], [0, 5, 1, "", "GateCSX"], [0, 5, 1, "", "GateCSXDG"], [0, 5, 1, "", "GateCU"], [0, 5, 1, "", "GateCX"], [0, 5, 1, "", "GateCY"], [0, 5, 1, "", "GateCZ"], [0, 1, 1, "", "GateCall"], [0, 1, 1, "", "GateCustom"], [0, 1, 1, "", "GateDCX"], [0, 1, 1, "", "GateDecl"], [0, 1, 1, "", "GateECR"], [0, 1, 1, "", "GateH"], [0, 1, 1, "", "GateHXY"], [0, 1, 1, "", "GateHXZ"], [0, 1, 1, "", "GateHYZ"], [0, 1, 1, "", "GateID"], [0, 1, 1, "", "GateISWAP"], [0, 1, 1, "", "GateP"], [0, 1, 1, "", "GateR"], [0, 1, 1, "", "GateRNZ"], [0, 1, 1, "", "GateRX"], [0, 1, 1, "", "GateRXX"], [0, 1, 1, "", "GateRY"], [0, 1, 1, "", "GateRYY"], [0, 1, 1, "", "GateRZ"], [0, 1, 1, "", "GateRZX"], [0, 1, 1, "", "GateRZZ"], [0, 5, 1, "", "GateS"], [0, 5, 1, "", "GateSDG"], [0, 1, 1, "", "GateSWAP"], [0, 5, 1, "", "GateSX"], [0, 5, 1, "", "GateSXDG"], [0, 1, 1, "", "GateSY"], [0, 1, 1, "", "GateSYDG"], [0, 5, 1, "", "GateT"], [0, 5, 1, "", "GateTDG"], [0, 1, 1, "", "GateU"], [0, 1, 1, "", "GateU1"], [0, 1, 1, "", "GateU2"], [0, 1, 1, "", "GateU3"], [0, 1, 1, "", "GateX"], [0, 1, 1, "", "GateXXminusYY"], [0, 1, 1, "", "GateXXplusYY"], [0, 1, 1, "", "GateY"], [0, 1, 1, "", "GateZ"], [0, 1, 1, "", "GeneralizedAmplitudeDamping"], [0, 1, 1, "", "Hamiltonian"], [0, 1, 1, "", "HamiltonianTerm"], [0, 1, 1, "", "IfStatement"], [0, 1, 1, "", "Instruction"], [0, 1, 1, "", "Inverse"], [0, 1, 1, "", "Kraus"], [0, 1, 1, "", "LazyArg"], [0, 1, 1, "", "LazyExpr"], [0, 1, 1, "", "Measure"], [0, 1, 1, "", "MeasureReset"], [0, 1, 1, "", "MeasureResetX"], [0, 1, 1, "", "MeasureResetY"], [0, 1, 1, "", "MeasureResetZ"], [0, 1, 1, "", "MeasureX"], [0, 1, 1, "", "MeasureXX"], [0, 1, 1, "", "MeasureY"], [0, 1, 1, "", "MeasureYY"], [0, 1, 1, "", "MeasureZ"], [0, 1, 1, "", "MeasureZZ"], [0, 1, 1, "", "MimiqConnection"], [0, 1, 1, "", "MixedUnitary"], [0, 1, 1, "", "Multiply"], [0, 1, 1, "", "Not"], [0, 1, 1, "", "ObservableInclude"], [0, 1, 1, "", "Operation"], [0, 1, 1, "", "Operator"], [0, 1, 1, "", "Parallel"], [0, 1, 1, "", "PauliNoise"], [0, 1, 1, "", "PauliString"], [0, 1, 1, "", "PauliX"], [0, 1, 1, "", "PauliY"], [0, 1, 1, "", "PauliZ"], [0, 1, 1, "", "PhaseAmplitudeDamping"], [0, 1, 1, "", "PhaseGradient"], [0, 1, 1, "", "PolynomialOracle"], [0, 1, 1, "", "Pow"], [0, 1, 1, "", "Power"], [0, 1, 1, "", "ProjectiveNoise"], [0, 1, 1, "", "ProjectiveNoiseX"], [0, 1, 1, "", "ProjectiveNoiseY"], [0, 1, 1, "", "ProjectiveNoiseZ"], [0, 1, 1, "", "Projector0"], [0, 1, 1, "", "Projector00"], [0, 1, 1, "", "Projector01"], [0, 1, 1, "", "Projector1"], [0, 1, 1, "", "Projector10"], [0, 1, 1, "", "Projector11"], [0, 1, 1, "", "ProjectorX0"], [0, 1, 1, "", "ProjectorX1"], [0, 1, 1, "", "ProjectorY0"], [0, 1, 1, "", "ProjectorY1"], [0, 1, 1, "", "ProjectorZ0"], [0, 1, 1, "", "ProjectorZ1"], [0, 1, 1, "", "QCSResults"], [0, 1, 1, "", "QFT"], [0, 1, 1, "", "QubitCoordinates"], [0, 1, 1, "", "RPauli"], [0, 1, 1, "", "Repeat"], [0, 1, 1, "", "RescaledGate"], [0, 1, 1, "", "Reset"], [0, 1, 1, "", "ResetX"], [0, 1, 1, "", "ResetY"], [0, 1, 1, "", "ResetZ"], [0, 1, 1, "", "SchmidtRank"], [0, 1, 1, "", "ShiftCoordinates"], [0, 1, 1, "", "SigmaMinus"], [0, 1, 1, "", "SigmaPlus"], [0, 1, 1, "", "ThermalNoise"], [0, 1, 1, "", "Tick"], [0, 1, 1, "", "VonNeumannEntropy"], [0, 5, 1, "", "control"], [0, 5, 1, "", "gatedecl"], [0, 5, 1, "", "inverse"], [0, 1, 1, "", "krauschannel"], [0, 5, 1, "", "parallel"], [0, 5, 1, "", "power"], [0, 5, 1, "", "push_expval"], [0, 5, 1, "", "push_lietrotter"], [0, 5, 1, "", "push_suzukitrotter"], [0, 5, 1, "", "push_yoshidatrotter"], [0, 5, 1, "", "repeat"]], "mimiqcircuits.AbstractMeasurement": [[0, 2, 1, "", "iswrapper"]], "mimiqcircuits.AbstractOperator": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "isunitary"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "matrix"], [0, 2, 1, "", "opname"], [0, 2, 1, "", "power"], [0, 2, 1, "", "unwrappedmatrix"]], "mimiqcircuits.Add": [[0, 2, 1, "", "format_with_targets"], [0, 2, 1, "", "iswrapper"]], "mimiqcircuits.Amplitude": [[0, 2, 1, "", "inverse"], [0, 2, 1, "", "isunitary"], [0, 2, 1, "", "iswrapper"], [0, 3, 1, "", "zregsizes"]], "mimiqcircuits.AmplitudeDamping": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "krausmatrices"], [0, 2, 1, "", "krausoperators"], [0, 3, 1, "", "opname"], [0, 3, 1, "", "parnames"]], "mimiqcircuits.AsciiCanvas": [[0, 2, 1, "", "draw_box"], [0, 2, 1, "", "draw_double_hline"], [0, 2, 1, "", "draw_double_vline"], [0, 2, 1, "", "draw_empty"], [0, 2, 1, "", "draw_fill"], [0, 2, 1, "", "draw_hline"], [0, 2, 1, "", "draw_text"], [0, 2, 1, "", "draw_vline"], [0, 2, 1, "", "draw_vtext"], [0, 2, 1, "", "get_cols"], [0, 2, 1, "", "get_rows"], [0, 2, 1, "", "push_line"], [0, 2, 1, "", "reset"]], "mimiqcircuits.AsciiCircuit": [[0, 2, 1, "", "draw_barrier"], [0, 2, 1, "", "draw_control"], [0, 2, 1, "", "draw_ifstatement"], [0, 2, 1, "", "draw_instruction"], [0, 2, 1, "", "draw_operation"], [0, 2, 1, "", "draw_parallel"], [0, 2, 1, "", "draw_paulistring"], [0, 2, 1, "", "draw_reset"], [0, 2, 1, "", "draw_wires"], [0, 2, 1, "", "get_bit_row"], [0, 2, 1, "", "get_current_col"], [0, 2, 1, "", "get_qubit_row"], [0, 2, 1, "", "get_zvars_row"], [0, 2, 1, "", "reset"], [0, 2, 1, "", "set_current_col"]], "mimiqcircuits.Barrier": [[0, 2, 1, "", "asciiwidth"], [0, 2, 1, "", "control"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "isunitary"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "power"]], "mimiqcircuits.BitString": [[0, 3, 1, "", "bits"], [0, 2, 1, "", "fromfunction"], [0, 2, 1, "", "fromint"], [0, 2, 1, "", "fromnonzeros"], [0, 2, 1, "", "fromstring"], [0, 2, 1, "", "nonzeros"], [0, 2, 1, "", "num_qubits"], [0, 2, 1, "", "to01"], [0, 2, 1, "", "toindex"], [0, 2, 1, "", "tointeger"], [0, 2, 1, "", "zeros"]], "mimiqcircuits.Block": [[0, 2, 1, "", "blockid"], [0, 2, 1, "", "format_with_targets"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "push"]], "mimiqcircuits.BondDim": [[0, 2, 1, "", "control"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "isunitary"], [0, 2, 1, "", "iswrapper"], [0, 3, 1, "", "num_qubits"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "power"]], "mimiqcircuits.Circuit": [[0, 2, 1, "", "add_noise"], [0, 2, 1, "", "add_noise_to_gate_parallel"], [0, 2, 1, "", "add_noise_to_gate_single"], [0, 2, 1, "", "append"], [0, 2, 1, "", "copy"], [0, 2, 1, "", "decompose"], [0, 2, 1, "", "deepcopy"], [0, 2, 1, "", "depth"], [0, 2, 1, "", "draw"], [0, 2, 1, "", "emplace"], [0, 2, 1, "", "empty"], [0, 2, 1, "", "evaluate"], [0, 2, 1, "", "get_on_qubits"], [0, 2, 1, "", "getparams"], [0, 2, 1, "", "insert"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "is_symbolic"], [0, 2, 1, "", "listvars"], [0, 2, 1, "", "loadproto"], [0, 2, 1, "", "num_bits"], [0, 2, 1, "", "num_qubits"], [0, 2, 1, "", "num_zvars"], [0, 2, 1, "", "push"], [0, 2, 1, "", "push_expval"], [0, 2, 1, "", "push_lietrotter"], [0, 2, 1, "", "push_suzukitrotter"], [0, 2, 1, "", "push_yoshidatrotter"], [0, 2, 1, "", "remove"], [0, 2, 1, "", "sample_mixedunitaries"], [0, 2, 1, "", "saveproto"], [0, 2, 1, "", "specify_operations"]], "mimiqcircuits.Control": [[0, 2, 1, "", "control"], [0, 2, 1, "", "evaluate"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "getparams"], [0, 2, 1, "", "gettypekey"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 3, 1, "id0", "num_controls"], [0, 3, 1, "", "num_targets"], [0, 3, 1, "id1", "op"], [0, 2, 1, "", "parallel"], [0, 2, 1, "", "power"]], "mimiqcircuits.Delay": [[0, 2, 1, "", "inverse"], [0, 2, 1, "", "power"]], "mimiqcircuits.Depolarizing": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "ismixedunitary"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "krausmatrices"], [0, 2, 1, "", "krausoperators"], [0, 3, 1, "", "num_qubits"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "probabilities"], [0, 2, 1, "", "unitarygates"], [0, 2, 1, "", "unitarymatrices"]], "mimiqcircuits.Detector": [[0, 2, 1, "", "get_notes"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "opname"]], "mimiqcircuits.DiagonalOp": [[0, 2, 1, "", "opsquared"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "rescale"], [0, 2, 1, "", "rescale_inplace"]], "mimiqcircuits.Diffusion": [[0, 4, 1, "", "num_qubits"]], "mimiqcircuits.ExpectationValue": [[0, 2, 1, "", "asciiwidth"], [0, 3, 1, "", "cregsizes"], [0, 2, 1, "", "evaluate"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "getparams"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "isunitary"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "opname"], [0, 2, 1, "", "power"], [0, 3, 1, "", "qregsizes"], [0, 3, 1, "", "zregsizes"]], "mimiqcircuits.GATES": [[0, 2, 1, "", "list"]], "mimiqcircuits.Gate": [[0, 2, 1, "", "control"], [0, 2, 1, "", "evaluate"], [0, 2, 1, "", "gettypekey"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "isunitary"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "parallel"], [0, 2, 1, "", "power"], [0, 2, 1, "", "repeat"]], "mimiqcircuits.GateCall": [[0, 2, 1, "", "decompose"], [0, 2, 1, "", "evaluate"], [0, 2, 1, "", "matrix"]], "mimiqcircuits.GateCustom": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "is_unitary"], [0, 3, 1, "", "num_qubits"], [0, 2, 1, "", "pretty_print"]], "mimiqcircuits.GateDecl": [[0, 3, 1, "", "num_bits"], [0, 3, 1, "", "num_qubits"], [0, 3, 1, "", "num_zvars"]], "mimiqcircuits.GateECR": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateH": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateHXY": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateHYZ": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateID": [[0, 2, 1, "", "inverse"], [0, 2, 1, "", "isidentity"]], "mimiqcircuits.GateP": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateR": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateRNZ": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "matrix"], [0, 2, 1, "", "power"]], "mimiqcircuits.GateRX": [[0, 2, 1, "", "inverse"], [0, 2, 1, "", "isidentity"]], "mimiqcircuits.GateRXX": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateRY": [[0, 2, 1, "", "inverse"], [0, 2, 1, "", "isidentity"]], "mimiqcircuits.GateRYY": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateRZ": [[0, 2, 1, "", "inverse"], [0, 2, 1, "", "isidentity"]], "mimiqcircuits.GateRZX": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateRZZ": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateSWAP": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateSY": [[0, 2, 1, "", "inverse"], [0, 2, 1, "", "isopalias"]], "mimiqcircuits.GateSYDG": [[0, 2, 1, "", "inverse"], [0, 2, 1, "", "isopalias"]], "mimiqcircuits.GateU": [[0, 2, 1, "", "convert_to_numeric"], [0, 2, 1, "", "inverse"]], "mimiqcircuits.GateU1": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateU2": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateU3": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateX": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateXXminusYY": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateXXplusYY": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateY": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GateZ": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.GeneralizedAmplitudeDamping": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "krausmatrices"], [0, 2, 1, "", "krausoperators"], [0, 3, 1, "", "num_qubits"], [0, 3, 1, "", "parnames"]], "mimiqcircuits.Hamiltonian": [[0, 2, 1, "", "add_terms"], [0, 2, 1, "", "evaluate"], [0, 2, 1, "", "loadproto"], [0, 2, 1, "", "matrix"], [0, 2, 1, "", "num_qubits"], [0, 2, 1, "", "num_terms"], [0, 2, 1, "", "push"], [0, 2, 1, "", "saveproto"]], "mimiqcircuits.HamiltonianTerm": [[0, 2, 1, "", "get_coefficient"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "get_qubits"]], "mimiqcircuits.IfStatement": [[0, 2, 1, "", "asciiwidth"], [0, 3, 1, "", "bitstring"], [0, 2, 1, "", "control"], [0, 2, 1, "", "evaluate"], [0, 2, 1, "", "get_bitstring"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "getparams"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 3, 1, "", "op"], [0, 2, 1, "", "power"]], "mimiqcircuits.Instruction": [[0, 2, 1, "", "asciiwidth"], [0, 3, 1, "", "bits"], [0, 2, 1, "", "copy"], [0, 2, 1, "", "decompose"], [0, 2, 1, "", "deepcopy"], [0, 2, 1, "", "evaluate"], [0, 2, 1, "", "get_bits"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "get_qubits"], [0, 2, 1, "", "get_zvars"], [0, 2, 1, "", "getparams"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "listvars"], [0, 2, 1, "", "matrix"], [0, 2, 1, "", "num_bits"], [0, 2, 1, "", "num_qubits"], [0, 2, 1, "", "num_zvars"], [0, 3, 1, "", "operation"], [0, 3, 1, "", "qubits"], [0, 3, 1, "", "zvars"]], "mimiqcircuits.Inverse": [[0, 2, 1, "", "control"], [0, 2, 1, "", "evaluate"], [0, 2, 1, "", "getparams"], [0, 2, 1, "", "gettypekey"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "isopalias"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "parallel"], [0, 2, 1, "", "power"]], "mimiqcircuits.Kraus": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "krausoperators"], [0, 2, 1, "", "unwrappedkrausmatrices"]], "mimiqcircuits.LazyExpr": [[0, 2, 1, "", "control"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "parallel"], [0, 2, 1, "", "power"]], "mimiqcircuits.Measure": [[0, 2, 1, "", "control"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "power"]], "mimiqcircuits.MeasureReset": [[0, 2, 1, "", "control"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "power"]], "mimiqcircuits.MeasureResetX": [[0, 2, 1, "", "control"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "power"]], "mimiqcircuits.MeasureResetY": [[0, 2, 1, "", "control"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "power"]], "mimiqcircuits.MeasureX": [[0, 2, 1, "", "control"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "power"]], "mimiqcircuits.MeasureXX": [[0, 2, 1, "", "control"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "power"]], "mimiqcircuits.MeasureY": [[0, 2, 1, "", "control"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "power"]], "mimiqcircuits.MeasureYY": [[0, 2, 1, "", "control"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "power"]], "mimiqcircuits.MeasureZZ": [[0, 2, 1, "", "control"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "power"]], "mimiqcircuits.MixedUnitary": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "ismixedunitary"], [0, 2, 1, "", "krausmatrices"], [0, 2, 1, "", "krausoperators"], [0, 2, 1, "", "probabilities"], [0, 2, 1, "", "unitarygates"], [0, 2, 1, "", "unitarymatrices"], [0, 2, 1, "", "unwrappedkrausmatrices"]], "mimiqcircuits.Multiply": [[0, 2, 1, "", "format_with_targets"], [0, 2, 1, "", "iswrapper"]], "mimiqcircuits.Not": [[0, 2, 1, "", "get_operation"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"]], "mimiqcircuits.ObservableInclude": [[0, 2, 1, "", "get_notes"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "opname"]], "mimiqcircuits.Operation": [[0, 2, 1, "", "asciiwidth"], [0, 2, 1, "", "copy"], [0, 3, 1, "", "cregsizes"], [0, 2, 1, "", "decompose"], [0, 2, 1, "", "deepcopy"], [0, 2, 1, "", "evaluate"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "getparam"], [0, 2, 1, "", "getparams"], [0, 2, 1, "", "is_symbolic"], [0, 2, 1, "", "isidentity"], [0, 2, 1, "", "isopalias"], [0, 2, 1, "", "isunitary"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "listvars"], [0, 3, 1, "", "name"], [0, 3, 1, "", "num_bits"], [0, 3, 1, "", "num_cregs"], [0, 3, 1, "", "num_qregs"], [0, 3, 1, "", "num_qubits"], [0, 3, 1, "", "num_zvars"], [0, 2, 1, "", "numparams"], [0, 3, 1, "", "parnames"], [0, 3, 1, "", "qregsizes"], [0, 3, 1, "", "zregsizes"]], "mimiqcircuits.Operator": [[0, 2, 1, "", "is_valid_power_of_2"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "opname"], [0, 2, 1, "", "opsquared"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "pretty_print"], [0, 2, 1, "", "rescale"], [0, 2, 1, "", "rescale_inplace"], [0, 2, 1, "", "unwrappedmatrix"]], "mimiqcircuits.Parallel": [[0, 2, 1, "", "control"], [0, 2, 1, "", "evaluate"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "gettypekey"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 3, 1, "", "num_repeats"], [0, 3, 1, "", "op"], [0, 2, 1, "", "parallel"], [0, 2, 1, "", "power"]], "mimiqcircuits.PauliNoise": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "ismixedunitary"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "krausmatrices"], [0, 2, 1, "", "krausoperators"], [0, 3, 1, "", "num_qubits"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "probabilities"], [0, 2, 1, "", "unitarygates"], [0, 2, 1, "", "unitarymatrices"], [0, 2, 1, "", "unwrappedkrausmatrices"]], "mimiqcircuits.PauliString": [[0, 2, 1, "", "asciiwidth"], [0, 2, 1, "", "evaluate"], [0, 2, 1, "", "from_string"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "is_identity"], [0, 2, 1, "", "isidentity"], [0, 3, 1, "", "num_qubits"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "unwrapped_matrix"]], "mimiqcircuits.PauliX": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "ismixedunitary"], [0, 2, 1, "", "krausmatrices"], [0, 2, 1, "", "krausoperators"], [0, 2, 1, "", "probabilities"], [0, 2, 1, "", "unitarygates"], [0, 2, 1, "", "unitarymatrices"]], "mimiqcircuits.PauliY": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "ismixedunitary"], [0, 2, 1, "", "krausmatrices"], [0, 2, 1, "", "krausoperators"], [0, 2, 1, "", "probabilities"], [0, 2, 1, "", "unitarygates"], [0, 2, 1, "", "unitarymatrices"]], "mimiqcircuits.PauliZ": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "ismixedunitary"], [0, 2, 1, "", "krausmatrices"], [0, 2, 1, "", "krausoperators"], [0, 2, 1, "", "probabilities"], [0, 2, 1, "", "unitarygates"], [0, 2, 1, "", "unitarymatrices"]], "mimiqcircuits.PhaseAmplitudeDamping": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "krausmatrices"], [0, 2, 1, "", "krausoperators"], [0, 3, 1, "", "parnames"]], "mimiqcircuits.PhaseGradient": [[0, 4, 1, "", "name"], [0, 4, 1, "", "num_qubits"], [0, 4, 1, "", "qregsizes"]], "mimiqcircuits.PolynomialOracle": [[0, 2, 1, "", "inverse"]], "mimiqcircuits.Pow": [[0, 2, 1, "", "format_with_targets"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"]], "mimiqcircuits.Power": [[0, 2, 1, "", "control"], [0, 2, 1, "", "decompose"], [0, 2, 1, "", "evaluate"], [0, 3, 1, "", "exponent"], [0, 2, 1, "", "getparams"], [0, 2, 1, "", "gettypekey"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "isopalias"], [0, 2, 1, "", "iswrapper"], [0, 3, 1, "", "op"], [0, 2, 1, "", "parallel"], [0, 2, 1, "", "power"]], "mimiqcircuits.ProjectiveNoise": [[0, 2, 1, "", "krausmatrices"]], "mimiqcircuits.ProjectiveNoiseX": [[0, 2, 1, "", "krausoperators"], [0, 2, 1, "", "opname"]], "mimiqcircuits.ProjectiveNoiseY": [[0, 2, 1, "", "krausoperators"], [0, 2, 1, "", "opname"]], "mimiqcircuits.ProjectiveNoiseZ": [[0, 2, 1, "", "krausoperators"], [0, 2, 1, "", "opname"]], "mimiqcircuits.Projector0": [[0, 2, 1, "", "opsquared"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "rescale"], [0, 2, 1, "", "rescale_inplace"]], "mimiqcircuits.Projector00": [[0, 2, 1, "", "opsquared"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "rescale"], [0, 2, 1, "", "rescale_inplace"]], "mimiqcircuits.Projector01": [[0, 2, 1, "", "opsquared"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "rescale"], [0, 2, 1, "", "rescale_inplace"]], "mimiqcircuits.Projector1": [[0, 2, 1, "", "opsquared"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "rescale"], [0, 2, 1, "", "rescale_inplace"]], "mimiqcircuits.Projector10": [[0, 2, 1, "", "opsquared"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "rescale"], [0, 2, 1, "", "rescale_inplace"]], "mimiqcircuits.Projector11": [[0, 2, 1, "", "opsquared"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "rescale"], [0, 2, 1, "", "rescale_inplace"]], "mimiqcircuits.ProjectorX0": [[0, 2, 1, "", "opsquared"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "rescale"], [0, 2, 1, "", "rescale_inplace"]], "mimiqcircuits.ProjectorX1": [[0, 2, 1, "", "opsquared"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "rescale"], [0, 2, 1, "", "rescale_inplace"]], "mimiqcircuits.ProjectorY0": [[0, 2, 1, "", "opsquared"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "rescale"], [0, 2, 1, "", "rescale_inplace"]], "mimiqcircuits.ProjectorY1": [[0, 2, 1, "", "opsquared"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "rescale"], [0, 2, 1, "", "rescale_inplace"]], "mimiqcircuits.QCSResults": [[0, 2, 1, "", "histogram"], [0, 2, 1, "", "histzvars"], [0, 2, 1, "", "loadproto"], [0, 2, 1, "", "saveproto"]], "mimiqcircuits.QFT": [[0, 4, 1, "", "name"], [0, 4, 1, "", "num_qubits"], [0, 4, 1, "", "qregsizes"]], "mimiqcircuits.QubitCoordinates": [[0, 2, 1, "", "get_notes"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "opname"]], "mimiqcircuits.RPauli": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "isidentity"], [0, 2, 1, "", "isunitary"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "matrix"]], "mimiqcircuits.Repeat": [[0, 2, 1, "", "control"], [0, 2, 1, "", "copy"], [0, 2, 1, "", "deepcopy"], [0, 2, 1, "", "evaluate"], [0, 2, 1, "", "format_with_targets"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "getparam"], [0, 2, 1, "", "getparams"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "parallel"], [0, 2, 1, "", "power"]], "mimiqcircuits.RescaledGate": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "get_operation"], [0, 2, 1, "", "get_param"], [0, 2, 1, "", "get_scale"], [0, 2, 1, "", "rescale"], [0, 2, 1, "", "rescale_in_place"]], "mimiqcircuits.Reset": [[0, 2, 1, "", "asciiwidth"], [0, 2, 1, "", "control"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "krausoperators"], [0, 2, 1, "", "power"]], "mimiqcircuits.ResetX": [[0, 2, 1, "", "control"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "power"]], "mimiqcircuits.ResetY": [[0, 2, 1, "", "control"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "power"]], "mimiqcircuits.SchmidtRank": [[0, 2, 1, "", "control"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "isunitary"], [0, 2, 1, "", "iswrapper"], [0, 3, 1, "", "num_qubits"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "power"]], "mimiqcircuits.ShiftCoordinates": [[0, 2, 1, "", "get_notes"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "opname"]], "mimiqcircuits.SigmaMinus": [[0, 3, 1, "", "num_qubits"], [0, 2, 1, "", "opsquared"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "rescale"], [0, 2, 1, "", "rescale_inplace"]], "mimiqcircuits.SigmaPlus": [[0, 3, 1, "", "num_qubits"], [0, 2, 1, "", "opsquared"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "rescale"]], "mimiqcircuits.ThermalNoise": [[0, 2, 1, "", "evaluate"], [0, 2, 1, "", "krausmatrices"], [0, 2, 1, "", "krausoperators"], [0, 2, 1, "", "matrix"], [0, 3, 1, "", "parnames"]], "mimiqcircuits.Tick": [[0, 2, 1, "", "get_notes"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "opname"]], "mimiqcircuits.VonNeumannEntropy": [[0, 2, 1, "", "control"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "isunitary"], [0, 2, 1, "", "iswrapper"], [0, 3, 1, "", "num_qubits"], [0, 3, 1, "", "parnames"], [0, 2, 1, "", "power"]], "mimiqcircuits.krauschannel": [[0, 2, 1, "", "cumprobabilities"], [0, 2, 1, "", "inverse"], [0, 2, 1, "", "isCPTP"], [0, 2, 1, "", "ismixedunitary"], [0, 2, 1, "", "iswrapper"], [0, 2, 1, "", "krausmatrices"], [0, 2, 1, "", "krausoperators"], [0, 2, 1, "", "numparams"], [0, 2, 1, "", "power"], [0, 2, 1, "", "probabilities"], [0, 2, 1, "", "squaredkrausoperators"], [0, 2, 1, "", "unitarygates"], [0, 2, 1, "", "unitarymatrices"], [0, 2, 1, "", "unwrappedcumprobabilities"], [0, 2, 1, "", "unwrappedkrausmatrices"], [0, 2, 1, "", "unwrappedunitarymatrices"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "terms": {"": [0, 1, 2, 3, 4, 7, 10, 12, 13, 14, 15, 16, 19], "0": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19], "00": [0, 17], "000": 10, "0000": 0, "0000000000000000": 0, "0000000000010101": 0, "000111029": 10, "000115204": 10, "000127987": 10, "000170674": 10, "00019081399999999998": 0, "00019858": 10, "000307035": 10, "000376924": 10, "001": [10, 13], "00101": 0, "00101010": 13, "01": [0, 10, 12, 16, 19], "0100": 13, "01001": 0, "0101": 13, "01010": 0, "010101": 13, "0101010101010101": 0, "01011": 13, "0110": 13, "0111": 13, "01110": 19, "03e": 10, "05": [0, 3, 10, 19], "05e": 10, "06": [0, 10], "0625": 12, "07": 10, "08": 0, "0998334166468282": 0, "0th": 0, "1": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "10": [0, 2, 4, 8, 10, 12, 16, 19], "100": [10, 18], "1000": [0, 10, 18, 19], "10000": 0, "10001": 0, "101": [8, 14], "1010": 13, "10100": 0, "10100101": 13, "10101": 0, "101010": [0, 13], "1010100000000000": 0, "10101010": 13, "1010110101": 0, "1010111100": 0, "1011": 13, "11": [0, 2, 4, 7, 8, 16, 19], "1100": 13, "1101": 13, "111": [8, 12], "1110": 13, "11100": 0, "11101": 0, "12": 0, "12323399573677e": 0, "125": 12, "13": [0, 19], "14": [0, 3, 10, 17], "15": [0, 7, 12, 17], "1514e": 10, "16": [0, 3, 10, 11], "17": [0, 19], "18": [0, 2, 10], "180": 0, "19e": 10, "1_bit": 0, "1_qubit": 0, "1_zvar": 0, "1d": [3, 17], "1e": 0, "1j": [0, 16], "2": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19], "20": 7, "21": [0, 7, 13], "2118e": 10, "22": 0, "23": 0, "25": [7, 12], "2546e": 10, "256": [10, 11], "28": 11, "28173255684143": 16, "29": 11, "299e": 0, "2_qubit": 0, "2k": 0, "2n": [7, 11], "3": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19], "30": [7, 10], "308": 4, "31": 0, "31622776601683794": 8, "316227766016838": [0, 7], "32": [9, 11], "3254e": 10, "3333333333333333": 0, "3745e": 10, "4": [0, 1, 2, 3, 5, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19], "42": [0, 7, 13], "42e": 10, "447213595499958": 0, "451": 0, "470": 4, "480": 10, "487": 0, "48e": 10, "4p_k": 0, "5": [0, 2, 3, 7, 8, 10, 12, 13, 16, 17, 19], "50": 11, "513": 0, "520": 10, "530": 4, "539e": 10, "54030230586814": 0, "5707963267948966": 16, "575e": 0, "597": 0, "5e": 10, "6": [0, 2, 3, 4, 7, 8, 10, 12, 13, 16, 17, 19], "64": [0, 13], "65536": 10, "6682e": 0, "673900451aa1b0ea6ef1fd66": 10, "673900471aa1b0ea6ef1fd82": 10, "6822e": 10, "7": [0, 2, 3, 7, 8, 12, 16, 17], "707106781186547": 0, "707106781186548": 0, "7155e": 10, "7169": [0, 10], "75": 0, "8": [0, 2, 7, 8, 11, 12, 13, 16, 17], "80": 11, "841470984807897": 0, "866025403784439": 16, "8876e": 10, "894427190999916": 0, "8gb": 11, "9": [0, 2, 4, 6, 7, 8, 12, 16, 17, 19], "9246e": 10, "933333333333333": 0, "9486832980505138": 8, "948683298050514": [0, 7], "9552e": 0, "959492973614497": 16, "960x720": [4, 10, 19], "966666666666667": 0, "995004165278026": 0, "A": [0, 2, 3, 4, 7, 8, 9, 10, 12, 13, 14, 16, 17, 19], "AND": [0, 13], "As": [2, 8, 12, 14, 16, 19], "At": [8, 10, 13], "Be": [1, 2, 5, 16], "By": [0, 6, 10, 13, 15], "For": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 14, 16, 17, 19], "IF": [0, 8, 12, 13], "If": [0, 1, 2, 4, 5, 6, 7, 10, 11, 16, 18, 19], "In": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "Ising": [1, 5], "It": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 16, 19], "Its": 0, "NOT": [0, 13], "No": [0, 11], "Not": [0, 1, 2], "OR": [0, 13], "Of": [8, 14], "On": [2, 11, 14, 18], "One": [0, 7], "Such": 7, "The": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19], "Then": 16, "There": [0, 2, 7, 11, 12, 16, 19], "These": [0, 4, 9, 10, 12, 16], "To": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19], "Will": 4, "With": [0, 4, 6, 8, 10, 14, 18], "_": [0, 3, 4, 14, 17], "__name__": 12, "_b": [0, 14], "_i": 7, "_k": 7, "_matrix": 0, "_o": 7, "abc": 0, "abil": [10, 11], "abl": 10, "about": [0, 1, 2, 5, 6, 8, 9, 10, 14, 16, 18, 19], "abov": [0, 2, 7, 12, 14, 18], "absenc": 8, "abstract": 0, "abstractannot": [0, 1], "abstractmeasur": [0, 1], "abstractoper": [0, 1], "accept": [10, 19], "access": [0, 1, 2, 3, 4, 5, 9, 10, 11, 14, 18, 19], "accident": 0, "accompani": 2, "accomplish": 10, "accord": [0, 7, 12, 19], "account": [2, 19], "accumul": 0, "accur": 18, "accuraci": [0, 9, 18], "achiev": [0, 18, 19], "across": [0, 10, 12], "act": [0, 2, 3, 7, 14, 15, 19], "action": [0, 10], "activ": [1, 5, 10, 19], "actual": [4, 11], "ad": [0, 1, 5, 8, 10, 11, 14, 16, 17, 19], "add": [0, 1, 2, 4, 5, 8, 10, 12, 14, 16, 17], "add_nois": [0, 1, 7, 12, 19], "add_noise_to_gate_parallel": [0, 1], "add_noise_to_gate_singl": [0, 1], "add_term": [0, 1], "addit": [0, 6, 10], "addition": 17, "adjoint": [0, 16], "adjust": 0, "advanc": 18, "advantag": [1, 7, 11], "affect": [0, 11, 12, 15, 19], "after": [0, 4, 7, 10, 12, 19], "again": [0, 10, 11, 16], "against": [0, 8], "aid": 0, "algebra": 9, "algorithm": [0, 1, 2, 3, 4, 9, 10, 11, 12, 15, 18, 19], "alia": 0, "align": [0, 16], "all": [0, 1, 2, 4, 5, 8, 9, 11, 12, 14, 17, 19], "alloc": 10, "allow": [0, 1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19], "almost": 4, "along": [0, 2, 11], "alpha": [0, 7, 16], "alpha_i": [0, 14], "alpha_k": 7, "alreadi": [16, 17, 19], "also": [0, 2, 6, 7, 8, 9, 10, 11, 14, 18, 19], "altern": [0, 4, 11, 12, 13, 16, 18, 19], "alwai": [0, 2, 8, 11, 14, 19], "among": 11, "amount": 10, "amp": 14, "ampdamp": 8, "amplif": 12, "amplitud": [0, 1, 5, 8, 10, 12, 13, 16, 17, 18], "amplitudedamp": [0, 1, 7, 8, 19], "an": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19], "analysi": [0, 15], "analyz": 15, "ancilla": 12, "angl": 0, "ani": [0, 2, 4, 7, 8, 10, 12, 14, 16, 18, 19], "annot": 0, "anoth": [0, 2, 4, 16], "ansatz": [0, 12], "ans\u00e4tz": 0, "api": [0, 1, 18], "appear": [10, 11], "append": [0, 1, 5, 13, 19], "appli": [0, 2, 3, 7, 8, 9, 10, 11, 12, 16, 19], "applic": [11, 12, 18], "applicatoin": 16, "approach": [7, 11, 15], "appropri": [0, 10], "approx": 0, "approxim": [0, 3, 9, 11], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "arbitrari": [2, 12], "architectur": 4, "aren": 0, "arg": 0, "argument": [0, 2, 4, 8, 12, 14, 16, 19], "aris": 11, "arithmet": 17, "around": 0, "arrai": [0, 16], "art": 18, "articl": 11, "ascii": 0, "asciicanva": [0, 1], "asciicircuit": [0, 1], "asciiwidth": [0, 1], "ask": [14, 16], "assembli": 4, "assign": [4, 10], "associ": [0, 3], "attempt": [10, 16], "attribut": [0, 2], "authent": 10, "auto": [10, 19], "automat": 19, "avail": [1, 2, 5, 7, 10, 11, 14, 16, 18, 19], "averag": [0, 10], "avggateerror": [0, 10], "avoid": [0, 6, 10, 11, 16, 19], "awai": 0, "ax": [0, 4, 10, 19], "axi": 0, "b": [0, 10, 12, 13, 14, 17], "back": [0, 10], "backend": [1, 5, 9, 10, 12, 14], "background": [1, 5], "baker": 0, "bar": 18, "barrier": [0, 1, 4, 5], "base": [0, 7, 8, 9, 10, 11, 12, 13], "basi": [0, 7, 8, 9, 12, 14, 16], "basic": [0, 1, 2, 18], "batch": 10, "batch_run": 10, "becaus": [0, 3, 8, 9, 10, 11, 12], "becom": 16, "been": [18, 19], "befor": [0, 2, 7, 8, 10, 15, 17, 19], "begin": [0, 7, 10, 16, 19], "behav": [0, 4, 19], "behavior": 12, "behaviour": [1, 5], "behind": 4, "being": [0, 2, 4, 10], "belong": 10, "below": [2, 7, 10, 16], "benchmark": 3, "benefit": 11, "best": 19, "beta": 0, "beta_i": [0, 14], "better": [8, 10, 11], "between": [0, 1, 2, 5, 7, 10, 11, 12, 14, 19], "beyond": 1, "big": [0, 13], "bin": 6, "binari": [0, 13], "binary_str": 13, "bipartit": [0, 14], "bit": [0, 1, 2, 4, 5, 7, 8, 11, 12, 16, 17, 19], "bit_indic": 13, "bitarrai": 0, "bitstr": [0, 1, 5, 8, 9, 10, 12, 14, 17], "bitwis": [0, 1, 5], "blanklin": 0, "blob": 4, "block": [0, 1, 2, 4, 5, 7, 10], "block2": 12, "block3": 12, "blockid": [0, 1], "bodi": [3, 11], "bond": [0, 1, 5, 10, 11], "bonddim": [0, 1, 10, 11, 14], "bool": [0, 9], "boolean": [0, 2, 9, 10, 13, 19], "both": [0, 2, 8, 10, 11, 12, 16, 17], "bottom": 0, "bound": [9, 11, 13], "boundari": 0, "box": 10, "bra": [8, 12, 16], "braket": 16, "breakdown": 0, "broadli": 17, "browser": [10, 19], "bs1": [0, 13], "bs2": [0, 13], "buffer": 0, "build": [1, 2, 4, 5, 12, 16, 19], "built": [16, 18, 19], "button": 10, "byte": 0, "c": [0, 2, 3, 4, 6, 7, 8, 12, 13, 15, 17, 19], "c1": 10, "c2": 10, "c_": 16, "c_i": 16, "c_j": [0, 3], "cach": 0, "calcul": [0, 9, 19], "call": [0, 1, 5, 7, 9, 10, 16, 17], "campbel": 0, "can": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19], "cancel": [0, 10], "cannot": [0, 4, 8], "canva": 0, "capabl": [6, 9], "captur": [0, 11], "care": [2, 4, 16], "carrier": 2, "case": [0, 3, 7, 8, 9, 10, 11, 14], "categor": 0, "categori": [9, 16], "caus": 0, "cccccx": 16, "cdot": [0, 3, 12], "central": [3, 9], "certain": 19, "ch": [0, 16], "chain": 3, "challeng": 11, "chang": [0, 7, 9, 10, 11], "channel": [0, 1, 5, 8], "char": 0, "charact": 0, "check": [0, 1, 4, 5, 7, 8, 12, 13, 14, 16, 19], "chi_": 14, "chi_0": 0, "chi_1": [0, 14], "chi_2": [0, 14], "chi_3": 14, "chi_k": [0, 14], "chi_n": 0, "choic": [11, 16, 19], "choos": 11, "chosen": [9, 11], "chr": 0, "cid": 0, "circ": [1, 4, 12], "circuit": [0, 1, 3, 5, 8, 9, 10, 12, 14, 15, 16, 17, 18], "circuit1": 2, "circuit2": 2, "clarifi": 4, "class": [0, 2, 3, 10, 13, 18], "classic": [0, 1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 17, 19], "classical_target": 19, "classmethod": 0, "clean": 0, "click": [10, 18], "clifford": [0, 4], "cloaud": 11, "close": [11, 16], "cloud": [0, 1, 5, 9, 14, 18, 19], "cnois": 7, "cnot": 0, "co": 0, "code": [1, 2, 5, 6, 10], "coeffici": [0, 3], "coher": [0, 7], "col": 0, "collaps": [8, 14], "collect": [7, 12], "com": [1, 4, 6, 19], "combin": [0, 2, 7, 12, 13, 16], "come": 7, "command": [1, 2, 6, 16, 19], "common": [2, 4, 7, 8, 12, 16], "commonli": 4, "commut": [0, 3, 11], "compar": [8, 11], "compat": [6, 13], "complet": [0, 4, 6, 7, 10, 16, 19], "complex": [0, 2, 4, 9, 11, 12, 14, 16, 17, 19], "complexf64": 10, "compon": [0, 15, 16], "compos": [0, 2], "composit": [0, 1, 5, 9, 18], "comprehens": [2, 4, 10], "compress": [0, 9, 10, 11, 12, 18], "compris": 0, "comput": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "computation": 0, "concaten": [0, 1, 5], "concept": 9, "conclus": [1, 5], "concret": [3, 15], "condens": 3, "condit": [0, 1, 5, 7, 9, 12, 13, 16, 18], "configur": 10, "confirm": 6, "conflict": 6, "confus": [8, 16], "conjug": [0, 16], "conn": [0, 4, 10, 19], "connect": [0, 1, 5], "consecut": 0, "consid": [0, 4, 7, 11, 14], "consist": [0, 2, 3, 7, 8, 11], "constant": [0, 17], "constraint": 13, "construct": [0, 1, 3, 12, 13], "constructor": [1, 5, 12, 16], "contact": [10, 11, 18, 19], "contain": [0, 1, 3, 4, 7, 9, 10], "content": 5, "continu": 0, "contrari": [2, 8], "contribut": 0, "control": [0, 1, 2, 5, 8, 10, 12, 18, 19], "conveni": 4, "convent": [0, 12, 16, 19], "convers": [1, 5], "convert": [0, 4, 10, 13], "convert_to_numer": [0, 1], "cool": 3, "coordin": 0, "copi": [0, 1, 4, 10], "core": [13, 18], "correct": [0, 1, 5, 18], "correctli": 6, "corresond": 2, "correspond": [0, 4, 6, 7, 8, 9, 12, 15, 16], "cost": [3, 11], "could": [9, 16], "coupl": [2, 17], "cours": [8, 14], "cover": [6, 17, 18], "cp": [0, 12], "cptp": [0, 7], "cpu": 11, "creat": [0, 1, 4, 5, 7, 8, 13, 14, 15, 16], "credenti": [1, 5], "creg": 4, "cregsiz": [0, 1], "crucial": [0, 11], "crx": 0, "cry": 0, "crz": 0, "cstate": [0, 10], "cswap": 0, "csx": 0, "cu": [0, 11], "cumprob": [0, 1], "cumul": 0, "current": [0, 4, 7, 10, 11], "custom": [0, 1, 5, 7, 8, 9, 10], "custom_g": 16, "custom_matrix": 16, "customiz": 18, "cx": [0, 2, 4, 7, 12, 16, 17, 19], "cy": 0, "cz": 0, "c\u2082id": 0, "c\u2082p": 0, "c\u2082x": 0, "c\u2083id": 0, "c\u2083x": [0, 16], "c\u2085x": 16, "d": [0, 8, 12], "dagger": [0, 7, 16], "dai": 10, "damp": [0, 8], "dashboard": 10, "data": [10, 13], "dcx": 0, "de": 4, "decl": 0, "declar": [0, 1, 5, 9], "declari": 0, "decompos": [0, 1, 3, 5, 12], "decomposit": [0, 2, 3, 14], "decor": [0, 12], "deep": 0, "deepcopi": [0, 1], "deeper": 19, "def": [0, 12], "default": [0, 8, 10, 11, 13, 19], "defin": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 16, 19], "definit": [0, 1, 4, 5], "delai": [0, 1, 16], "delay_g": 0, "deleg": 0, "delet": [0, 10], "deliv": 11, "delta": 0, "demonstr": [0, 3], "denot": 2, "densiti": [0, 7, 14], "depend": [0, 6, 7, 9, 10, 11, 15, 16], "depict": 2, "depolar": [0, 1, 7, 12, 19], "depolarizing1": [0, 1, 7], "depolarizing2": [0, 1, 7, 12, 19], "depth": [0, 1, 2, 18], "describ": [4, 7, 8, 9, 11], "descript": 10, "design": [0, 2, 4, 11, 13, 18], "desir": [0, 3, 9], "detail": [0, 1, 2, 7, 9, 10, 11, 13, 15, 19], "detect": 0, "detector": [1, 4], "determin": [0, 7, 8], "determinist": 0, "deutsch": 4, "deutsch_n2": 4, "develop": [1, 4, 6, 11, 18], "deviat": 0, "diagnos": 10, "diagon": 0, "diagonalop": [0, 1, 8], "dict": [0, 10], "dictionari": [0, 15], "did": 19, "didn": 10, "differ": [0, 2, 4, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19], "diffus": [0, 1, 5, 16], "dimens": [0, 1, 5, 10, 11, 12], "direct": [0, 13], "directli": [0, 2, 4, 6, 7, 8, 10, 12, 16, 19], "disadvantag": 7, "discuss": [2, 9, 16], "disentangl": 0, "disrupt": 0, "distinct": [0, 2, 7], "disturb": [0, 18], "dive": 6, "diverg": 4, "divid": 17, "do": [0, 1, 2, 5, 8, 9, 10, 14, 15, 19], "docstr": 16, "doctest": 2, "document": [1, 2, 4, 7, 8, 14, 16, 19], "doe": [0, 2, 8, 11, 12], "doesn": 19, "don": [4, 16], "done": [10, 15], "dot": 0, "doubl": [0, 11], "double_cx": 16, "download": [6, 10], "draw": [0, 1, 2, 12, 16, 19], "draw_barri": [0, 1], "draw_box": [0, 1], "draw_control": [0, 1], "draw_double_hlin": [0, 1], "draw_double_vlin": [0, 1], "draw_empti": [0, 1], "draw_fil": [0, 1], "draw_hlin": [0, 1], "draw_ifstat": [0, 1], "draw_instruct": [0, 1], "draw_oper": [0, 1], "draw_parallel": [0, 1], "draw_paulistr": [0, 1], "draw_reset": [0, 1], "draw_text": [0, 1], "draw_vlin": [0, 1], "draw_vtext": [0, 1], "draw_wir": [0, 1], "drawn": 0, "due": 11, "dummi": [0, 14], "duplic": 0, "durat": 0, "dure": [0, 4, 10, 11, 15, 18], "dynam": [0, 3], "e": [0, 3, 7, 9, 10, 11, 12, 14, 18, 19], "e_": 0, "e_1": [0, 7], "e_2": 0, "e_3": 0, "e_4": 0, "e_i": 0, "e_j": 7, "e_k": [0, 7], "each": [0, 2, 3, 4, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19], "eas": 18, "easi": 13, "easier": 7, "easili": [2, 3, 12], "echo": 0, "ecr": 0, "effect": [0, 9, 10, 11, 12], "effici": [0, 3, 4, 9, 10, 11, 13, 18], "eigensolv": [3, 15], "eigenst": 0, "either": [0, 7, 9, 10], "elaps": 10, "element": [0, 2, 19], "email": 10, "emplac": [0, 1], "empti": [0, 1, 2, 12, 14, 19], "emul": 18, "enabl": 10, "encapsul": [0, 12], "encod": [0, 3], "encount": [10, 18], "end": [0, 4, 6, 8, 10, 11, 16], "endia": [0, 13], "endian": 13, "energi": [1, 5], "engin": [10, 19], "enhanc": 6, "enough": 11, "ensur": [0, 6, 10], "entangl": [0, 1, 5, 9, 10, 11, 18], "entdim": [10, 11], "enter": [2, 10], "entir": [0, 10, 11], "entri": 0, "entropi": [0, 1, 5], "environ": [0, 1, 5, 7, 9], "equal": [0, 11], "equilibrium": 0, "equip": 18, "equival": [0, 8, 10], "er": 2, "error": [0, 1, 5, 7, 10, 18], "error_detect": 12, "error_detection_block": 12, "especi": 11, "essenc": 2, "essenti": [2, 9, 10, 13], "establish": [10, 19], "estim": [0, 1, 3, 5, 9, 10, 12], "etc": [0, 2, 10, 12, 16, 18, 19], "euler": 0, "ev": [2, 8, 14], "evalu": [0, 1, 3, 12, 15], "evaluated_circuit": 15, "evaluated_op": 0, "even": [0, 2, 8, 11, 12, 13], "everi": [0, 2, 4, 7, 8, 10, 11, 14, 16, 18, 19], "everyth": 6, "evolut": [0, 1, 5], "evolv": [0, 3, 7, 11, 16], "ex": [2, 16], "exact": [2, 11], "exactli": [0, 9, 11, 14, 16], "examin": 0, "exampl": [0, 1, 2, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 18], "example_token": 10, "exce": 0, "exceed": 10, "excel": 11, "except": [0, 2, 7, 8, 10, 12], "excit": 0, "exclus": 10, "exectut": 4, "execut": [0, 1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 18], "execution_id": 10, "executon": 11, "exist": 12, "exp": [0, 16], "expand": [0, 16], "expans": [0, 3], "expect": [0, 1, 2, 3, 5, 8, 9, 10, 15, 16, 18, 19], "expectationvalu": [0, 1, 2, 8, 12, 14, 17, 19], "experi": [0, 6, 11, 12], "explain": [2, 3, 16], "explan": [2, 14, 18], "explicitli": [0, 4, 11], "explor": [1, 6, 15], "expon": [0, 1], "exponenti": 0, "export": [1, 5, 9, 10, 19], "express": [0, 3], "extend": [4, 13], "extens": 11, "extent": 4, "extract": [0, 1, 2, 5, 12, 14], "f": [0, 4, 13], "facilit": [10, 12, 18], "facto": 4, "factor": 0, "fals": [0, 7], "fashion": 2, "fast": [4, 18], "faster": 11, "favour": 11, "featur": [1, 4, 5, 8, 18], "fetch": 10, "few": 16, "fewer": [7, 18], "fid": 10, "fidel": [0, 1, 5, 9, 10, 18], "field": [3, 10, 11, 17], "figur": [4, 10, 19], "file": [0, 1, 5, 9, 10, 19], "filenam": 0, "fill": 0, "filter": 10, "final": [0, 8, 11, 18], "find": [2, 8, 10, 14], "fingertip": 18, "finish": [10, 19], "finit": 11, "first": [0, 2, 3, 4, 8, 10, 12, 14, 16, 18, 19], "first_sampl": 10, "firstzvar": 0, "fix": [0, 7, 19], "flexibl": [7, 13], "flip": [0, 7, 8], "float": 0, "float64": 10, "follow": [0, 1, 2, 4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 19], "form": [0, 12], "format": [0, 1, 4, 5, 9, 13], "format_with_target": [0, 1], "former": 10, "formula": [0, 12], "found": [7, 18], "four": 0, "fourier": [0, 1, 5], "fourth": 0, "frac": [0, 8, 12], "fraction": 0, "framework": [1, 3, 7, 9, 16, 18], "free": 11, "frequenc": 10, "frequent": 10, "from": [0, 1, 2, 3, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19], "from_str": [0, 1], "fromfunct": [0, 1, 13], "fromint": [0, 1], "fromnonzero": [0, 1], "fromstr": [0, 1], "frozenbitarrai": [4, 10, 19], "fulfil": [0, 7, 16], "full": [0, 7, 11, 18], "fullest": 9, "fulli": 0, "function": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 16, 18, 19], "functionn": 18, "fundament": [3, 11, 16, 19], "further": [0, 7, 10, 12], "futur": 4, "g": [0, 4, 7, 9, 10, 18], "gain": 4, "gamma": [0, 7, 8], "gamma_1": 0, "gamma_2": 0, "gate": [0, 1, 4, 5, 8, 9, 10, 11, 14, 15, 19], "gate1": 0, "gate2": 0, "gate_decl": 0, "gatec": [0, 1, 16], "gatec3x": [0, 1, 16], "gatecal": [0, 1, 12], "gateccp": [0, 1, 16], "gateccx": [0, 1, 16], "gatech": [0, 1, 16], "gateci": [0, 1, 16], "gatecp": [0, 1, 16], "gatecri": [0, 1, 16], "gatecrx": [0, 1, 16], "gatecrz": [0, 1, 16], "gatecsdg": [0, 1, 16], "gatecswap": [0, 1, 16], "gatecsx": [0, 1, 16], "gatecsxdg": [0, 1, 16], "gatecu": [0, 1, 16], "gatecustom": [0, 1, 11, 16], "gatecx": [0, 1, 2, 7, 12, 16, 17, 19], "gatecz": [0, 1, 16], "gatedcx": [0, 1, 16], "gatedecl": [0, 1, 12], "gateecr": [0, 1, 16], "gateh": [0, 1, 2, 7, 10, 12, 14, 16, 17, 19], "gatehxi": [0, 1], "gatehxz": [0, 1], "gatehyz": [0, 1], "gatei": [0, 1, 2, 12, 16], "gateid": [0, 1, 2, 16], "gateiswap": [0, 1, 16], "gateiswapdg": 0, "gatep": [0, 1, 12, 16], "gater": [0, 1, 16], "gateri": [0, 1, 15, 16], "gaternz": [0, 1], "gaterx": [0, 1, 12, 15, 16], "gaterxx": [0, 1, 16], "gateryi": [0, 1, 16], "gaterz": [0, 1, 16], "gaterzx": [0, 1, 16], "gaterzz": [0, 1, 16], "gatesdg": [0, 1, 16], "gatesi": [0, 1, 16], "gateswap": [0, 1, 16], "gatesx": [0, 1, 16], "gatesxdg": [0, 1, 16], "gatesydg": [0, 1, 16], "gatet": [0, 1, 16], "gatetdg": [0, 1, 16], "gateu": [0, 1, 16], "gateu1": [0, 1, 16], "gateu2": [0, 1, 16], "gateu3": [0, 1, 16], "gatex": [0, 1, 2, 8, 10, 11, 12, 13, 16, 17], "gatexxminusyi": [0, 1, 16], "gatexxplusyi": [0, 1, 16], "gatez": [0, 1, 2, 12, 14, 16], "gener": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 19], "generalizedamplitudedamp": [0, 1, 7], "geq": 0, "get": [0, 1, 4, 5, 6, 15, 16, 18, 19], "get_bit": [0, 1], "get_bit_row": [0, 1], "get_bitstr": [0, 1], "get_coeffici": [0, 1], "get_col": [0, 1], "get_current_col": [0, 1], "get_input": 10, "get_not": [0, 1], "get_on_qubit": [0, 1], "get_oper": [0, 1], "get_param": [0, 1], "get_qubit": [0, 1], "get_qubit_row": [0, 1], "get_result": [0, 4, 10, 19], "get_row": [0, 1], "get_scal": [0, 1], "get_zvar": [0, 1], "get_zvars_row": [0, 1], "getparam": [0, 1], "getresult": 19, "gettypekei": [0, 1], "ghz": [1, 2, 7], "git": [1, 6, 19], "github": [1, 4, 6, 19], "give": [0, 2, 4, 8, 9, 11, 14, 16, 18], "given": [0, 2, 7, 8, 10, 11, 12, 14, 16, 19], "global": 0, "go": 2, "goe": 10, "good": 11, "googl": 4, "gradient": [0, 1, 5], "greater": [0, 10, 18], "ground": [3, 4], "group": [0, 12], "grover": [0, 12], "grow": 18, "guid": 6, "h": [0, 2, 3, 4, 7, 10, 12, 14, 17, 19], "h_j": 0, "ha": [0, 3, 9, 10, 11, 14, 18, 19], "hadamard": [0, 2, 19], "halv": [0, 14], "hamiltonian": [0, 1, 5], "hamiltonianterm": [0, 1], "handl": [0, 18, 19], "happi": 6, "hardcod": [10, 19], "hardwar": [9, 10, 18], "hat": 0, "hausdorff": 0, "have": [0, 2, 4, 10, 11, 12, 15, 16, 19], "head": [2, 8, 18], "heart": 3, "height": 0, "help": [0, 2, 7, 9, 11, 16, 18], "helper": [0, 12], "here": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19], "hermitian": 0, "high": [1, 2, 9, 10, 11], "higher": 0, "highli": [11, 16, 18, 19], "hilbert": 16, "histogram": [0, 1, 4, 19], "histori": 10, "histzvar": [0, 1], "hold": 16, "holder": 19, "horizont": 2, "hover": 10, "how": [1, 2, 3, 5, 10, 11, 12, 15, 16, 19], "howev": [0, 8, 9, 10, 11, 14, 15, 19], "http": [0, 1, 4, 6, 10, 19], "hundr": 11, "hxy": 0, "hxz": 0, "hyz": 0, "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19], "i_": [0, 14], "i_0i_1": 0, "i_1": [0, 14], "i_1i_2": 14, "i_2": [0, 14], "i_3": [0, 14], "i_4": 14, "i_k": [0, 14], "i_n": 0, "id": [0, 2, 7, 10], "ideal": [0, 7, 11], "ident": [0, 12], "identifi": [0, 4, 10], "idl": 0, "if_stat": 13, "ifstat": [0, 1, 8, 11, 12, 13], "ignor": [2, 4], "iht": 3, "ii": [0, 7], "iii": 0, "ij": 7, "imaginari": 3, "impact": 16, "imperfect": 19, "implement": [0, 2, 4, 7, 8, 9, 11, 12, 16, 18], "impli": 2, "implic": 2, "import": [0, 1, 2, 5, 7, 9, 10, 11, 12, 15, 17, 19], "importantli": 8, "imposs": 11, "improv": [0, 4], "inc": 4, "includ": [0, 1, 5, 9, 10, 11, 12, 13, 15, 18, 19], "inconsist": 0, "incorrect": 0, "increas": 11, "increment": 0, "independ": [0, 7], "index": [0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 16, 19], "indexerror": 0, "indic": [0, 2, 3, 5, 8, 10, 11, 12, 13, 14, 16, 17, 19], "individu": [0, 12, 13], "induc": 0, "infer": 2, "inform": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 18], "infrastructur": 10, "initi": [0, 3, 10, 13], "inner": 16, "input": [0, 1, 5, 13, 17], "insert": [0, 1, 4, 5, 19], "insid": [9, 12, 17], "inspect": 0, "inst": 12, "instal": [1, 5, 18], "instanc": [0, 2, 4, 7, 8, 12, 14, 16, 17], "instanti": [0, 2, 12, 16], "instead": [0, 4, 7, 10, 11, 12, 16], "instruct": [0, 1, 3, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 19], "instructiuon": 0, "int": [0, 10], "integ": [0, 12, 13, 19], "integr": 18, "interact": [2, 3, 6, 7, 16, 18], "interest": [11, 16, 18], "interfac": [1, 9, 10, 18, 19], "intermedi": [1, 11], "intern": [0, 7, 10], "interpret": [4, 7, 8, 18], "interv": 10, "intricaci": 9, "introduc": [4, 9], "introduct": 11, "inv_h": 16, "invalid": 0, "invers": [0, 1, 5, 8], "invert": 0, "invit": 10, "invok": 18, "involv": [0, 17], "io": [0, 1, 6, 10, 11, 19], "ipykernel": 6, "is_ident": [0, 1], "is_symbol": [0, 1], "is_unitari": [0, 1], "is_valid_power_of_2": [0, 1], "iscptp": [0, 1], "isident": [0, 1], "isjobcancel": 10, "isjobdon": 10, "isjobfail": 10, "isjobstart": 10, "ismixedunitari": [0, 1, 7], "isopalia": [0, 1], "issu": [10, 18], "isunitari": [0, 1], "iswap": 0, "iswrapp": [0, 1], "item": 0, "iter": [0, 2, 7, 8, 12, 15, 19], "its": [0, 4, 9, 10, 11, 12, 13, 15, 16, 18], "itself": [0, 7], "ixi": 0, "ixix": 0, "ixxyz": 0, "ixyz": [0, 12], "j": [0, 3, 11, 12, 17], "jk": 12, "job": [0, 1, 4, 5, 18, 19], "job_batch": 10, "job_singl": 10, "john": 19, "join": 10, "joint": 0, "jonspassword": 19, "json": 10, "julia": [1, 2, 4], "jupyt": [1, 5], "just": [4, 7, 12, 16, 17, 19], "k": [0, 8, 12, 14, 16], "k1": 8, "k2": 8, "keep": [15, 19], "kei": [0, 2, 10, 11], "kernel": [1, 5], "ket": [0, 8, 12, 14, 16], "kind": 7, "kmatric": [0, 7], "know": [2, 16], "known": [0, 4], "krau": [0, 1, 5, 8, 9], "krauschannel": [0, 1], "krausmatric": [0, 1, 7], "krausoper": [0, 1, 7, 8], "kwarg": [0, 10], "label": [2, 10], "lambda": [0, 13], "landscap": 3, "langl": [0, 14, 19], "languag": [1, 4, 9], "laptop": 11, "larg": [1, 9, 11, 16, 18, 19], "larger": [11, 12, 18], "last": [0, 2, 8, 9, 10, 14, 16, 19], "later": [0, 6, 10], "latest": 6, "latter": [9, 10], "layer": 0, "layout": 0, "lazi": 0, "lazyarg": [0, 1], "lazyexpr": [0, 1], "lazyvalu": 0, "ldot": [0, 7, 12, 14], "lead": 11, "learn": [2, 6, 8, 10], "least": [10, 11], "leav": [4, 8], "left": [0, 2, 8, 13, 18], "len": [12, 19], "length": [0, 2, 12, 16, 19], "leq": [0, 7], "less": [0, 7, 11], "letter": [2, 17], "level": 11, "leverag": 15, "lh": 13, "libari": 0, "librari": [0, 15, 16], "lie": [0, 3], "lightweight": [4, 10], "like": [0, 3, 4, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19], "limit": [0, 1, 10, 11], "line": [2, 16], "linear": [7, 8, 9, 12], "link": [0, 1, 19], "linux": 6, "list": [0, 1, 2, 4, 5, 6, 7, 12, 16], "listvar": [0, 1], "littl": [0, 13], "ll": [6, 7], "lmbda": 0, "load": [0, 1, 5], "loadproto": [0, 1, 4, 10], "loadtoken": 10, "local": [10, 11, 19], "localhost": 10, "locat": [0, 13, 18], "log": 10, "log_2": [0, 14], "logic": [0, 1, 5, 9, 12, 13, 18], "long": [7, 10, 11], "longer": [2, 10, 11], "longitudin": 0, "look": [0, 10, 18, 19], "loop": 2, "lose": [10, 11], "loss": [0, 2, 16], "lower": 11, "m": [0, 2, 4, 6, 7, 8, 12, 19], "machin": 11, "machineri": 8, "maco": 6, "magnet": [3, 17], "mai": [0, 11], "main": [0, 12], "main_circuit": 12, "mainli": 2, "maintain": 10, "make": [2, 7, 8, 10, 13, 14, 19], "manag": [0, 1, 5, 15], "mani": [2, 3, 4, 7, 9, 10, 11, 12, 14, 16, 19], "manipul": [0, 1, 2, 4, 5, 12], "manual": [0, 1, 2, 9, 18], "map": [0, 12, 15], "mark": 10, "marker": 0, "master": 4, "mat": 0, "match": [10, 14], "materi": 3, "math": [8, 16], "mathcal": [0, 7, 14], "mathemat": [1, 5, 9, 19], "mathrm": [0, 7, 12, 14, 16], "matric": [0, 7, 9, 11, 17], "matrix": [0, 1, 5, 7, 8, 9, 14, 18, 19], "matrix_of_gatecu": 11, "matter": [3, 11], "max": 0, "maxim": [0, 11, 14], "maximum": [2, 10, 19], "md": 10, "mean": [0, 8, 11, 12, 14], "measur": [0, 1, 2, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 18], "measurei": [0, 1, 8], "measurereset": [0, 1, 8], "measurereseti": [0, 1, 8], "measureresetx": [0, 1, 8], "measureresetz": [0, 1, 8], "measurex": [0, 1, 8], "measurexx": [0, 1, 8], "measureyi": [0, 1, 8], "measurez": [0, 1, 8, 12], "measurezz": [0, 1, 8], "mechan": 16, "memori": [7, 11], "menu": 6, "messag": 10, "met": 0, "metadata": 0, "method": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 16, 19], "metric": [2, 18], "mid": [11, 18], "middl": 4, "might": [2, 4, 8], "mimiq": [0, 1, 3, 5, 9, 11, 12, 17], "mimiqcircuit": [1, 2, 4, 6, 7, 10, 17, 19], "mimiqcircuitsqcsresult": 19, "mimiqconnect": [0, 1, 10, 19], "mimiqlib": 4, "mimiqlink": 0, "min": 2, "minim": [2, 10], "minut": [0, 10], "mix": [0, 7, 8], "mixedunitari": [0, 1, 7], "mode": 10, "model": [0, 1, 5, 7, 8], "modifi": [0, 1, 2, 4, 5], "modul": [1, 19], "modulu": 11, "moment": 8, "monitor": [0, 10], "more": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19], "moreov": 11, "most": [0, 2, 4, 7, 10, 11, 18, 19], "mostli": 0, "mous": 10, "mp": [0, 1, 5, 9, 10, 12, 14, 19], "mr": [0, 8], "mrx": 0, "mry": 0, "much": 11, "multi": [0, 1, 5, 10], "multipl": [0, 2, 7, 8, 9, 10, 12, 16, 18, 19], "multipli": [0, 1, 17], "multiqubit": 10, "must": [0, 12, 15, 16], "mutabledensematrix": 0, "mutat": 0, "mx": 0, "mxx": 0, "my": 0, "my_circuit": 4, "my_gat": 12, "my_result": 4, "my_stim_circuit": 4, "myi": 0, "mystery_circuit": 14, "mzz": 0, "n": [0, 2, 3, 7, 8, 9, 11, 12, 14, 17], "n_e": 0, "name": [0, 1, 4, 6, 10, 12], "namedtemporaryfil": 0, "nativ": [0, 19], "natur": [11, 12], "ndarrai": 0, "ne": 0, "nearest": 3, "necessari": [0, 2, 6, 9, 10], "need": [0, 2, 4, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19], "neg": [0, 16], "neighbor": 3, "nest": 0, "neumann": [0, 1, 5], "new": [0, 10, 12, 13, 15, 16, 18], "new_circuit": 0, "newz": 17, "next": 7, "nisq": 1, "nois": [0, 1, 2, 5, 8, 9, 11, 12, 18], "noisechannel": 2, "noiseless": 0, "noisi": [0, 1, 5, 18], "non": [0, 1, 2, 3, 5, 9, 10, 11, 12, 13, 14, 16, 19], "none": [0, 14], "nonzero": [0, 1, 13], "norm": 9, "normal": [7, 16], "normaliz": 0, "not_op": 0, "notat": 0, "note": [0, 7, 8, 10, 12, 19], "notebook": 6, "notic": 14, "notimplementederror": 0, "nots": 0, "now": [4, 6, 7, 8, 12], "np": [0, 16], "nq": 0, "nsampl": [10, 11], "num": 0, "num_bit": [0, 1, 2, 16, 19], "num_control": [0, 1], "num_creg": [0, 1], "num_qreg": [0, 1], "num_qubit": [0, 1, 2, 16, 19], "num_repeat": [0, 1, 16], "num_target": [0, 1], "num_term": [0, 1], "num_zvar": [0, 1, 2, 16, 17, 19], "number": [0, 1, 2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 17, 19], "numbit": 13, "numer": [0, 9, 11, 15], "numparam": [0, 1], "numpi": 0, "numz_var": 2, "n\u2091": 0, "o": [0, 7, 14], "obj": 0, "object": [0, 4, 9, 10, 12, 13, 14, 19], "observ": [0, 3, 8, 17], "observableinclud": [0, 1], "obtain": [0, 7, 10, 11, 14, 19], "obviou": 11, "occurr": 0, "odd": 0, "offer": [9, 10, 11, 12, 16, 18], "offici": 6, "offset": 0, "often": 3, "oject": 16, "omit": [0, 16], "onc": [0, 2, 3, 7, 8, 10, 11, 15, 16, 19], "one": [0, 1, 2, 5, 8, 9, 10, 11, 12, 14, 16, 19], "ones": [0, 11], "onli": [0, 2, 4, 7, 8, 9, 10, 11, 12, 14, 16], "onto": 0, "op": [0, 1, 8, 12, 14, 19], "op_fil": 0, "opaqu": 4, "open": [0, 4, 7, 19], "openqasm": [1, 5, 9], "oper": [1, 2, 4, 5, 9, 10, 11, 16, 19], "operatornam": [0, 12], "opnam": [0, 1], "oppos": [7, 8], "opsquar": [0, 1], "optim": [0, 3, 11, 12, 15, 19], "option": [0, 1, 4, 5, 7, 10, 12, 14, 19], "oracl": [0, 1, 5, 9], "order": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 16, 19], "organ": [0, 10, 12, 19], "organiz": 10, "origin": [0, 11], "orthonorm": [0, 14, 16], "other": [0, 2, 4, 8, 9, 10, 11, 12, 13, 14, 16, 19], "otherwis": [0, 10], "otim": [0, 12, 14], "our": 11, "out": [0, 10, 19], "outcom": [0, 8], "output": [2, 10, 15], "over": [0, 2, 10, 12], "overlap": 11, "overrid": 0, "overridden": 0, "overview": [1, 5, 16], "overwrit": 19, "overwritten": [2, 19], "own": [4, 9, 12, 16], "p": [0, 7, 12], "p1": 0, "p2": 0, "p_0": 8, "p_1": [0, 8, 12], "p_2": [0, 12], "p_3": [0, 12], "p_i": [0, 12], "p_j": [0, 3], "p_k": [0, 7, 8], "p_n": [0, 12], "packag": [1, 6], "page": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19], "panel": 18, "parallel": [0, 1, 5, 7, 8, 18, 19], "paramet": [0, 7, 10, 11, 12, 15, 16, 19], "parameter": [12, 15], "parametr": [0, 1, 5, 15], "pariti": 0, "parnam": [0, 1], "pars": [0, 4, 10, 13], "parser": [4, 18], "part": [0, 4, 18], "partial": 0, "particular": [4, 16], "particularli": [0, 2, 10, 12], "pass": [0, 7, 8, 10, 12], "password": [10, 19], "path": [6, 10, 19], "pattern": 13, "pauli": [0, 1, 3, 5, 7, 17], "pauli_expr": 0, "paulii": [0, 1, 7], "paulinois": [0, 1, 7], "paulistr": [0, 1, 3, 12, 16, 17], "paulix": [0, 1, 7, 19], "pauliz": [0, 1, 7], "pb": [0, 4, 10], "peek": [10, 18], "peform": 16, "per": [0, 7, 11, 16], "perat": 13, "perfectli": 18, "perform": [0, 1, 2, 7, 8, 9, 10, 11, 16, 17], "performon": 9, "period": 10, "permiss": 10, "phase": [0, 1, 3, 5], "phaseamplitudedamp": [0, 1, 7], "phasegradi": [0, 1, 12, 16], "phi": [0, 15], "physic": [3, 9, 11], "pi": [0, 2, 12, 15, 16], "pip": [1, 6, 19], "pip3": 6, "place": [0, 7, 8], "placehold": [0, 15], "plai": [3, 11], "plan": [10, 11], "platform": 18, "pleas": [1, 19], "plot": [1, 4, 5, 19], "plothistogram": [4, 10, 19], "pmatrix": 0, "pn": 0, "pnnl": 4, "point": [0, 7, 8, 10, 14, 19], "polynomi": [0, 1, 5], "polynomialoracl": [0, 1, 12, 16], "posit": [0, 2, 7], "possibl": [0, 2, 8, 9, 10, 11, 12, 16], "possibli": 10, "potenti": [0, 11, 19], "pow": [0, 1, 17], "power": [0, 1, 5, 8, 17, 18], "practic": [2, 11, 17], "pre": [8, 16], "precis": [0, 8, 11, 12], "predict": 0, "prefer": 10, "premis": 11, "premium": 11, "prepar": [3, 7, 10, 19], "prerequisit": [1, 5], "presenc": 11, "present": 2, "preserv": [0, 7, 9, 16], "pretty_print": [0, 1], "prevent": [0, 12, 16], "previou": [4, 10, 12], "previous": 4, "principl": 8, "print": [0, 2, 3, 7, 10, 12], "prior": 10, "priovid": 16, "probabl": [0, 1, 5, 7, 8, 15], "problem": [3, 9, 10], "procedur": 19, "process": [0, 4, 10, 15, 18], "prod_": 0, "produc": [0, 7, 12], "product": [0, 1, 5, 9, 12, 14, 16, 18, 19], "profession": 18, "program": [1, 4], "programmat": 3, "progress": [4, 10], "project": [0, 8, 9], "projectivenois": [0, 1, 7], "projectivenoisei": [0, 1], "projectivenoisex": [0, 1], "projectivenoisez": [0, 1], "projector0": [0, 1, 8], "projector00": [0, 1, 8], "projector01": [0, 1, 8], "projector1": [0, 1, 8], "projector10": [0, 1, 8], "projector11": [0, 1, 8, 19], "projectorx0": [0, 1, 8], "projectorx1": [0, 1, 8], "projectory0": [0, 1, 8], "projectory1": [0, 1, 8], "projectorz0": [0, 1, 8], "projectorz1": [0, 1, 8], "properti": [0, 14, 18], "proport": [0, 7, 12], "protobuf": [0, 1, 5, 9, 10], "protocol": 0, "protocolbuff": 4, "provid": [0, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19], "ps1": 6, "psi": [0, 8, 14, 16], "psi_": [7, 16], "psi_i": 16, "publicli": 11, "pure": [0, 11, 14], "purpos": [0, 2, 13], "push": [0, 1, 3, 5, 7, 8, 10, 12, 14, 15, 16, 17, 19], "push_expv": [0, 1, 3], "push_lietrott": [0, 1, 3], "push_lin": [0, 1], "push_suzukitrott": [0, 1, 3], "push_yoshidatrott": [0, 1], "put": 7, "pwr": 0, "px\u2080": 0, "px\u2081": 0, "py": 1, "pyapi_v": 10, "python": [0, 1, 2, 4, 5, 6, 16, 18, 19], "python3": 6, "py\u2080": 0, "py\u2081": 0, "p\u2080": [0, 8], "p\u2080\u2080": 0, "p\u2080\u2081": 0, "p\u2081": 0, "p\u2081\u2080": 0, "p\u2081\u2081": [0, 19], "q": [0, 2, 3, 4, 7, 8, 10, 12, 14, 15, 16, 17, 19], "qantum": 2, "qaoa": [0, 3], "qasm": [4, 10], "qasmbench": 4, "qc": 0, "qcsresult": [0, 1, 4, 10], "qelib1": 4, "qft": [0, 1, 9, 12, 16], "qperfect": [0, 1, 6, 10, 11, 18, 19], "qperfect_cloud": 10, "qreg": 4, "qregsiz": [0, 1], "quad": 0, "quantiti": [3, 11], "quantum": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "quantum_oper": 19, "quantum_target": 19, "quatum": 2, "qubit": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19], "qubitcoordin": [0, 1], "queue": 10, "quick": 18, "quickli": 12, "quickstart": 10, "r": [0, 14], "r_y": 0, "radian": 0, "rais": [0, 16, 17], "ram": 11, "random": [0, 7, 10], "randomli": 7, "rang": [0, 2, 3, 8, 11, 12, 14, 16, 17, 19], "rangl": [0, 7, 14, 19], "rank": [0, 1, 5], "rapid": 6, "rate": 0, "rather": 0, "raw": 8, "re": [0, 4, 6, 8, 10, 12, 18, 19], "read": [2, 4, 10], "reader": 4, "readi": 6, "readili": 4, "real": [0, 3, 9, 10, 11, 14], "realist": 3, "realiz": [12, 16], "reason": [4, 8, 10, 11, 14], "recal": 8, "recommend": [6, 10, 12, 16, 18], "reconnect": 10, "reconstruct": 15, "record": 0, "recurs": 0, "redirect": 10, "reduc": [0, 8, 10, 11, 14], "refer": [0, 1, 2, 7, 8, 11], "reflect": [0, 16], "reg": 0, "regist": [0, 1, 3, 5, 8, 9, 10, 12, 13, 14, 16, 19], "relat": [0, 1, 5, 7, 11], "relationship": 0, "relax": 0, "remain": 0, "remark": 7, "rememb": 16, "remind": 4, "remot": [1, 4, 9, 10, 11, 18], "remoteconnect": 0, "remov": [0, 1], "reorder": 0, "repeat": [0, 1, 5, 13], "repetit": [0, 1, 5, 16], "repl": 18, "replac": [0, 4, 15], "report": [2, 11], "repositori": [4, 6], "repres": [0, 2, 3, 8, 9, 10, 11, 12, 13, 17], "represent": [0, 2, 7, 9, 11, 13, 16, 19], "request": [0, 10], "requir": [0, 2, 7, 8, 11, 12, 16, 19], "res_batch": 10, "res_batch_1": 10, "res_singl": 10, "rescal": [0, 1], "rescale_in_plac": [0, 1], "rescale_inplac": [0, 1], "rescaled_gate1": 0, "rescaled_gate2": 0, "rescaledg": [0, 1], "rescaleg": 0, "research": 18, "resembl": 8, "reset": [0, 1, 2, 4, 5, 7, 9, 11], "reseti": [0, 1, 8], "resetx": [0, 1, 8], "resetz": [0, 1, 8], "resourc": [9, 10, 12, 18], "respect": [0, 2, 7, 10, 11, 14, 16], "restor": 0, "restrict": [0, 12], "result": [0, 1, 2, 3, 4, 5, 8, 9, 12, 14, 17, 19], "retain": 4, "retriev": [0, 2, 7, 10, 13, 19], "retrun": 0, "return": [0, 10, 11, 12, 13, 14, 19], "reus": [0, 10, 12], "reusabl": [0, 12], "reveal": 0, "revers": 0, "review": 10, "rewritten": 7, "rg": 0, "rh": 13, "rho": [0, 7, 14], "rho_": 0, "rho_a": [0, 14], "rho_b": [0, 14], "rich": 18, "right": [0, 2, 7, 10, 13], "rng": [0, 7], "rnz": 0, "robust": 0, "role": [0, 3, 10, 11], "rot": 12, "rotat": [0, 12], "routin": 12, "row": 0, "rpauli": [0, 1], "rtol": 0, "rule": 8, "run": [0, 1, 2, 5, 6, 8, 9, 10, 11, 15], "runtim": [7, 11], "rx": [0, 3, 12, 15, 16], "rxx": [0, 16], "ry": [0, 15], "ryi": 0, "rz": 0, "rzx": 0, "rzz": [0, 3], "s_": 0, "s_1": [0, 14], "s_2": [0, 14], "s_3": [0, 14], "s_i": [0, 14], "s_n": [0, 14], "safer": 10, "sai": 16, "same": [0, 1, 2, 4, 5, 8, 10, 12, 13, 16, 19], "sampl": [0, 1, 2, 5, 7, 8, 10, 19], "sample_mixedunitari": [0, 1, 7], "satisfi": [0, 12, 16], "save": [0, 1, 4, 5], "saveproto": [0, 1, 4, 10], "savetoken": 10, "scalar": 0, "scale": [0, 1, 9, 11, 18, 19], "scenario": [11, 15], "schmidt": [0, 1, 5], "schmidtrank": [0, 1, 14], "screenshot": 10, "script": [6, 10], "search": [1, 10, 18], "second": [0, 2, 3, 4, 10, 14, 16, 19], "section": [2, 4, 6, 7, 8, 9, 10, 11, 15, 17, 18], "secur": 10, "see": [0, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19], "seealso": 0, "seed": 10, "seen": 8, "select": [0, 6, 7, 10, 19], "self": 0, "send": [1, 5, 19], "sens": 8, "sensit": 10, "sent": [10, 19], "separ": [0, 7, 9, 14], "sequenc": [0, 2, 4, 12, 19], "sequenti": [0, 2, 9, 11, 12], "seri": 19, "serial": 4, "server": [0, 1, 5, 9], "servic": [0, 1, 4, 5, 9, 11, 18], "session": [1, 2, 5, 16], "set": [0, 2, 3, 6, 7, 13, 18, 19], "set_current_col": [0, 1], "setup": [1, 5], "sever": [0, 7, 10, 12, 13, 15], "shallow": 0, "shift": [0, 12, 13], "shiftcoordin": [0, 1], "shor": 12, "short": [10, 11], "shorter": [10, 11], "shorthand": [0, 12], "should": [0, 2, 10, 11, 16], "show": 10, "shown": 12, "sigma": 17, "sigmaminu": [0, 1, 8], "sigmaplu": [0, 1, 8, 14], "sign": 10, "signal": [0, 14], "signific": 11, "sim": 2, "similar": [0, 2, 7, 10, 19], "similarli": [4, 8, 16, 17], "simpl": [0, 2, 4, 16, 18], "simplest": 7, "simpli": [2, 7, 10, 12, 13, 16, 19], "simplif": [0, 12, 16], "simplifi": [0, 4, 10, 12, 15], "simul": [0, 1, 2, 4, 5, 8, 9, 10, 12, 14], "sin": 0, "sinc": [2, 6, 7, 8, 11, 16, 19], "singl": [0, 1, 2, 5, 7, 10, 11, 12, 19], "single_run": 10, "size": [0, 4, 10, 11, 19], "small": [4, 9, 11, 18], "smaller": 2, "smith": 19, "so": [0, 4, 7, 8, 10, 16], "softwar": [10, 19], "solut": 11, "solv": 0, "some": [0, 2, 4, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19], "someth": 18, "sort": 8, "sourc": [0, 6], "space": [0, 16], "spatial": 0, "speak": 17, "special": [0, 1, 2, 5, 7, 8, 9, 16, 17, 19], "specif": [0, 1, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 18], "specifi": [0, 7, 8, 11, 12, 13, 16], "specify_oper": [0, 1], "speed": [4, 8, 11, 18], "speedup": 11, "spin": 3, "split": 0, "sqrt": [0, 7, 8, 12, 16], "squar": [0, 11, 16], "squaredkrausoper": [0, 1], "stabil": 4, "stage": 10, "stai": 10, "standard": [0, 12], "start": [0, 2, 4, 6, 7, 9, 10, 15, 18], "state": [0, 1, 2, 3, 5, 7, 8, 9, 10, 12, 13, 14, 17, 18, 19], "statement": [1, 5, 9, 11], "statevector": [0, 4, 10, 19], "static": 0, "statist": [1, 5, 8, 9, 10, 13, 16, 19], "statistical_op": 10, "statu": [0, 1, 5], "step": [0, 1, 2, 3, 5, 19], "still": 4, "stim": [1, 5, 9, 10], "store": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 14, 19], "str": 0, "strang": 0, "strength": [3, 17], "string": [0, 1, 3, 5, 7, 10, 13], "strongli": 11, "strore": 0, "structur": [0, 2, 4, 11, 15, 19], "subcircuit": 0, "subclass": 0, "submit": 10, "subroutin": 12, "subscript": [10, 19], "subsequ": [0, 10], "subset": [0, 3], "substanti": 11, "substitut": [0, 1, 5], "subsystem": [0, 14], "subterm": 0, "success": 10, "successfulli": 10, "suffic": 19, "suffix": 0, "sum": [0, 3, 14, 17], "sum_": [0, 3, 12, 14, 16, 17], "sum_j": [0, 3, 7], "sum_k": [0, 7], "summar": 0, "summari": [0, 1, 5], "superposit": 0, "supertyp": [0, 8], "supplement": 19, "suppli": 10, "support": [0, 4, 6, 7, 8, 9, 10, 13, 14, 19], "suppos": 3, "sure": 10, "suzuki": [0, 3], "suzukitrotter_2": [0, 3], "sv": 9, "swap": 0, "sx": 0, "sy": 0, "sydg": 0, "symbol": [0, 1, 2, 5, 12, 19], "symengin": [0, 7, 12, 15], "symmetr": 0, "sympi": 0, "syntax": [9, 19], "system": [0, 1, 3, 6, 7, 8, 9, 11, 14, 16, 19], "t": [0, 3, 4, 10, 16, 19], "t1": 0, "t2": 0, "t_1": 0, "t_2": 0, "tab": 10, "tag": 0, "take": [0, 7, 10], "taken": [4, 10, 19], "target": [0, 1, 2, 3, 5, 8, 9, 11, 12, 14, 19], "target_qubit": 0, "task": 13, "team": 10, "technic": 8, "techniqu": [0, 9, 18], "tempfil": 0, "templat": 3, "temporari": 0, "tensor": [0, 12], "term": [0, 1, 3, 5, 7, 14], "test": 18, "text": [0, 2, 4, 19], "textbook": 0, "th": [0, 17], "than": [0, 2, 8, 11, 12], "thank": 4, "thei": [0, 3, 4, 7, 8, 9, 10, 11, 12], "them": [0, 10, 15, 16, 17, 18], "therefor": [8, 16, 18], "therein": 11, "thermal": 0, "thermalnois": [0, 1, 7], "theta": [0, 12, 15], "thi": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "thing": 11, "third": [0, 14], "though": 8, "thought": 7, "three": [0, 2, 9, 11, 19], "through": [0, 6, 9, 10, 11, 14, 16, 19], "throughout": 19, "thu": [11, 16], "thumb": 8, "tick": [0, 1], "tild": 7, "time": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 18], "timelimit": 10, "tip": 11, "tmp": 4, "tmpfile": 0, "to01": [0, 1, 13], "todai": 1, "togeth": [4, 12], "toindex": [0, 1, 13], "tointeg": [0, 1, 13], "token": [1, 5], "tol": 0, "too": [8, 10, 16], "tool": [3, 9, 18, 19], "top": 0, "topic": [1, 5, 9, 19], "tot": 10, "total": [0, 3, 10, 14], "total_term": 17, "tr": [0, 7, 14], "trace": [0, 7], "track": [0, 10, 11, 19], "trajectori": [0, 7], "tranform": 8, "transform": [0, 1, 5, 8, 9], "translat": 11, "transpar": 18, "transpos": [0, 16], "transvers": [0, 3, 7, 11, 17], "treat": 8, "tree": 18, "trotter": [0, 3], "true": [0, 7, 8, 13, 16, 19], "try": [10, 12, 19], "tupl": [0, 2, 3], "tutori": 19, "two": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 17], "type": [0, 1, 2, 4, 5, 9, 10, 11, 12, 16, 17, 19], "typeerror": 0, "typic": [0, 2, 3, 11], "typical": 11, "t\u2081": 0, "t\u2082": 0, "u": [0, 2, 4, 7, 11, 16, 18, 19], "u1": 0, "u2": 0, "u3": 0, "u_": 7, "u_1": 0, "u_2": 0, "u_3": 0, "u_k": [0, 7], "umatric": 0, "unchang": 0, "under": [0, 10], "underli": 0, "understand": [1, 2, 5, 7, 10, 16, 18, 19], "undo": 0, "unevalu": 0, "unexpect": 0, "unifi": 10, "union": 0, "uniqu": [0, 4, 7, 10], "unit": [0, 12], "unitari": [0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 19], "unitaryg": [0, 1, 7], "unitarymatric": [0, 1, 7], "univers": 18, "unix": 6, "unless": 0, "unlik": 12, "unphys": 8, "unsur": 16, "until": [9, 10], "unwant": 7, "unwrap": 0, "unwrapped_matrix": [0, 1], "unwrappedcumprob": [0, 1], "unwrappedkrausmatric": [0, 1], "unwrappedmatrix": [0, 1], "unwrappedunitarymatric": [0, 1], "up": [0, 6, 9, 11, 16, 18], "updat": [0, 9, 10, 15], "upload": 19, "upon": [0, 10], "url": [0, 10], "us": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 14, 16, 19], "usag": [1, 4, 5, 12, 16], "user": [0, 1, 3, 4, 5, 6, 9, 11, 16, 17, 18, 19], "useremail": 10, "usernam": [10, 19], "usual": [0, 4, 7, 8, 9, 11, 16], "util": 1, "v": [1, 5, 10], "valid": [0, 7, 10], "valu": [0, 1, 2, 3, 5, 8, 9, 10, 11, 12, 13, 18, 19], "valuabl": 15, "valueerror": [0, 12], "vararg": 0, "vari": [2, 11], "variabl": [0, 12, 15, 16, 17], "variant": 0, "variat": [0, 3, 15, 18], "variou": [0, 10], "vector": [1, 2, 5, 7, 9, 10, 12, 13, 17, 18, 19], "vector1": 2, "vector2": 2, "venv": 6, "veri": [2, 4, 8, 12], "verifi": [1, 5], "versatil": [2, 12], "version": [0, 4, 6, 10, 16], "via": [0, 3, 10, 12, 19], "view": [7, 10], "virtual": [1, 5], "visual": [0, 1, 4, 5, 6, 10, 17, 19], "von": [0, 1, 5], "vonneumannentropi": [0, 1, 14], "vqe": [0, 3, 15], "w": 4, "w_": 12, "w_1": 0, "w_2": 0, "w_n": 12, "wa": 10, "wai": [0, 4, 7, 10, 11, 12, 13, 16, 19], "wait": 10, "walk": [6, 12, 19], "want": [3, 8, 10, 11, 12, 14], "we": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 19], "web": 10, "webpag": 19, "websit": [6, 10], "weight": [0, 3, 7], "welcom": 18, "well": [2, 4, 9, 13, 14, 18], "were": [4, 11], "what": [1, 5], "when": [0, 1, 2, 5, 7, 8, 10, 11, 14, 16, 17], "whenev": [8, 11, 16], "where": [0, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "wherea": [8, 9, 10], "whether": [0, 7, 10], "which": [0, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19], "while": [0, 2, 10], "whole": 12, "whose": 10, "why": 16, "wide": 3, "widespread": 4, "width": [0, 2], "wikipedia": 11, "window": 6, "wish": 12, "within": [0, 6, 8, 10, 12, 13, 19], "without": [0, 7, 10, 12, 14, 15, 16, 18, 19], "word": [0, 8, 10, 16], "work": [0, 1, 2, 5, 6, 7, 10, 16], "workflow": [3, 18], "workload": 10, "workspac": 19, "would": [0, 4, 7, 8, 10, 12], "wrap": 0, "wrapper": [0, 2, 12, 16], "write": [2, 4, 8, 14], "written": [0, 7, 9, 12, 14, 16], "x": [0, 2, 3, 4, 7, 8, 10, 12, 13, 16, 17, 19], "x_": 12, "x_gate_4": 16, "x_j": [3, 17], "xor": [0, 13], "xx": [0, 7, 17], "xxminusyi": 0, "xxplusyi": 0, "xy": [0, 12], "xyxi": 0, "xyz": [0, 3], "xz": 0, "y": [0, 2, 7, 12], "y0": 0, "y1": 0, "y_": 12, "yet": 10, "yield": 10, "yoshida": [0, 3], "yoshida_4": 0, "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19], "your": [0, 1, 2, 3, 4, 6, 8, 10, 12, 15, 16, 18, 19], "yxi": 0, "yy": [0, 7], "yz": 0, "z": [0, 1, 3, 5, 7, 8, 9, 10, 12, 14, 16, 19], "z0": 0, "z1": 0, "z_": [3, 17], "z_j": [3, 17], "z_target": 19, "zero": [0, 1, 10, 13], "ziz": 0, "zregsiz": [0, 1], "zstate": [0, 10, 14], "zvar": [0, 1, 2, 3], "zz": [0, 3, 7, 17], "zzzz": 0, "\u00b2": [0, 16], "\u00b3": [0, 12], "\u00b9\u2070": 0, "\u03b2": 0, "\u03b3": 0, "\u03b8": [0, 12], "\u03c0": [0, 15], "\u2074": 16, "\u2075": [0, 12]}, "titles": ["mimiqcircuits package", "Introduction", "Circuits", "Hamiltonians and Time Evolution", "Import and export circuits", "Manual", "Installation", "Noisy simulations on MIMIQ", "Non-unitary Operations", "Overview", "Execution on MIMIQ", "Simulating Circuits", "Special Operations", "Special Topics", "Statistical Operations", "Symbolic Operations in MIMIQ", "Unitary Gates", "Z-register Operations", "MIMIQ Documentation", "Quick Start"], "titleterms": {"": 18, "1": 6, "2": 6, "3": 6, "4": 6, "Be": 15, "If": 8, "Ising": [3, 17], "about": 12, "access": 13, "activ": 6, "ad": [2, 7], "add": [7, 19], "advantag": 18, "all": [7, 10], "amplitud": 14, "append": 2, "ar": 2, "avail": [0, 8], "backend": 11, "background": [7, 16], "barrier": 12, "basic": 19, "behaviour": 4, "between": 4, "bit": 13, "bitstr": 13, "bitwis": 13, "block": 12, "bond": 14, "build": [3, 7], "call": 12, "can": [15, 17], "channel": 7, "check": 10, "circuit": [2, 4, 6, 7, 11, 19], "classic": 2, "cloud": 10, "code": 12, "composit": [12, 16], "concaten": 13, "conclus": 6, "condit": 8, "connect": [10, 19], "construct": 19, "constructor": 13, "content": [1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19], "control": 16, "convers": 13, "correct": 12, "creat": [2, 6, 12], "credenti": 10, "custom": 16, "declar": 12, "decompos": 2, "defin": 15, "definit": [8, 14], "detail": [4, 16], "detector": 0, "diffus": 12, "dimens": 14, "do": 17, "document": 18, "energi": [3, 17], "entangl": 14, "entropi": 14, "environ": 6, "error": [11, 12], "estim": 11, "evolut": [3, 7], "exampl": [12, 17, 19], "execut": [4, 10, 19], "expect": [14, 17], "explor": 18, "export": 4, "extract": [16, 19], "featur": [6, 10], "fidel": 11, "file": 4, "format": 10, "fourier": 12, "from": 4, "function": 7, "gate": [2, 7, 12, 16], "gener": 16, "get": 10, "ghz": 19, "gradient": 12, "hamiltonian": [3, 17], "how": [7, 8, 18], "i": [2, 17, 18], "import": [4, 18], "includ": 4, "indic": [1, 4], "inform": [16, 17, 19], "input": 10, "insert": 2, "instal": [6, 19], "instruct": [2, 12], "introduct": 1, "invers": 16, "job": 10, "jupyt": 6, "kernel": 6, "krau": 7, "link": 18, "list": 10, "load": [10, 19], "logic": 8, "manag": 10, "manipul": [13, 17], "manual": 5, "mathemat": [7, 8, 14, 16], "matrix": [11, 16], "measur": [3, 8, 19], "method": [13, 18], "mimiq": [2, 4, 6, 7, 8, 10, 13, 14, 15, 16, 18, 19], "mimiqcircuit": 0, "model": 3, "modifi": 13, "more": 12, "mp": 11, "multi": 16, "neumann": 14, "nois": [7, 19], "noisi": 7, "non": 8, "number": 16, "one": 7, "openqasm": [4, 19], "oper": [0, 7, 8, 12, 13, 14, 15, 17], "option": 6, "oracl": 12, "overview": [9, 10], "packag": 0, "parallel": 16, "parametr": 16, "pauli": 12, "phase": 12, "plot": 10, "polynomi": 12, "power": 16, "prerequisit": 6, "probabl": 16, "product": 11, "protobuf": 4, "push": 2, "python": 10, "quantum": [2, 12], "qubit": 16, "quick": [1, 19], "rank": 14, "regist": [2, 4, 17], "relat": 4, "remot": 19, "repeat": 12, "repetit": 13, "reset": 8, "result": 10, "run": 7, "same": 7, "sampl": 11, "save": 10, "schmidt": 14, "send": 10, "server": 10, "servic": [10, 19], "session": 10, "setup": 6, "simul": [3, 7, 11, 18, 19], "singl": 16, "special": [12, 13], "specif": 2, "start": [1, 19], "state": [11, 16], "statement": 8, "statist": 14, "statu": 10, "step": 6, "stim": [4, 19], "store": 17, "string": 12, "substitut": 15, "summari": 7, "symbol": 15, "tabl": 1, "target": 16, "term": 10, "time": 3, "token": 10, "topic": 13, "transform": [12, 16], "two": 16, "type": 7, "understand": 11, "unitari": [8, 16], "us": [8, 10, 12, 13, 15, 18], "usag": 14, "user": 10, "v": 12, "valu": [14, 15, 17], "vector": [11, 16], "verifi": 6, "virtual": 6, "visual": 2, "von": 14, "what": [2, 17, 18], "when": [12, 15], "work": 12, "you": 17, "z": [2, 17]}})