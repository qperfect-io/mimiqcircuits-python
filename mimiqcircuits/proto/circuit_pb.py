# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: circuit.proto
# Protobuf Python Version: 4.25.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rcircuit.proto\"\x17\n\x06Symbol\x12\r\n\x05value\x18\x01 \x01(\t\"\xa6\x01\n\x03\x41rg\x12#\n\x0e\x61rgvalue_value\x18\x01 \x01(\x0b\x32\t.ArgValueH\x00\x12\x1f\n\x0csymbol_value\x18\x02 \x01(\x0b\x32\x07.SymbolH\x00\x12)\n\x11\x61rgfunction_value\x18\x03 \x01(\x0b\x32\x0c.ArgFunctionH\x00\x12\'\n\x10irrational_value\x18\x04 \x01(\x0e\x32\x0b.IrrationalH\x00\x42\x05\n\x03\x61rg\"H\n\x08\x41rgValue\x12\x17\n\rinteger_value\x18\x01 \x01(\x03H\x00\x12\x16\n\x0c\x64ouble_value\x18\x02 \x01(\x01H\x00\x42\x0b\n\targ_value\"F\n\x0b\x41rgFunction\x12#\n\x0c\x66unctiontype\x18\x01 \x01(\x0e\x32\r.FunctionType\x12\x12\n\x04\x61rgs\x18\x02 \x03(\x0b\x32\x04.Arg\"\xfc\x02\n\tOperation\x12\x15\n\x04gate\x18\x01 \x01(\x0b\x32\x05.GateH\x00\x12\x1b\n\x07\x63ontrol\x18\x02 \x01(\x0b\x32\x08.ControlH\x00\x12\x17\n\x05power\x18\x03 \x01(\x0b\x32\x06.PowerH\x00\x12\x1b\n\x07inverse\x18\x04 \x01(\x0b\x32\x08.InverseH\x00\x12\x1b\n\x07\x62\x61rrier\x18\x05 \x01(\x0b\x32\x08.BarrierH\x00\x12\x1b\n\x07measure\x18\x06 \x01(\x0b\x32\x08.MeasureH\x00\x12\x17\n\x05reset\x18\x07 \x01(\x0b\x32\x06.ResetH\x00\x12#\n\x0bifstatement\x18\x08 \x01(\x0b\x32\x0c.IfStatementH\x00\x12#\n\x0bgeneralized\x18\t \x01(\x0b\x32\x0c.GeneralizedH\x00\x12\x1d\n\x06\x63ustom\x18\n \x01(\x0b\x32\x0b.GateCustomH\x00\x12\x1d\n\x08gatecall\x18\x0b \x01(\x0b\x32\t.GateCallH\x00\x12\x1d\n\x08parallel\x18\x0c \x01(\x0b\x32\t.ParallelH\x00\x42\x0b\n\toperation\":\n\x04Gate\x12\x18\n\x05gtype\x18\x01 \x01(\x0e\x32\t.GateType\x12\x18\n\nparameters\x18\x02 \x03(\x0b\x32\x04.Arg\"A\n\x0bGeneralized\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\x04\x61rgs\x18\x02 \x03(\x0b\x32\x04.Arg\x12\x10\n\x08regsizes\x18\x03 \x03(\x03\"\t\n\x07Measure\"\x07\n\x05Reset\"=\n\x07\x43ontrol\x12\x1d\n\toperation\x18\x01 \x01(\x0b\x32\n.Operation\x12\x13\n\x0bnumcontrols\x18\x02 \x01(\x03\"=\n\x08Parallel\x12\x1d\n\toperation\x18\x01 \x01(\x0b\x32\n.Operation\x12\x12\n\nnumrepeats\x18\x02 \x01(\x03\"$\n\x08Rational\x12\x0b\n\x03num\x18\x01 \x01(\x03\x12\x0b\n\x03\x64\x65n\x18\x02 \x01(\x03\"{\n\x05Power\x12\x1d\n\toperation\x18\x01 \x01(\x0b\x32\n.Operation\x12\x14\n\ndouble_val\x18\x02 \x01(\x01H\x00\x12!\n\x0crational_val\x18\x03 \x01(\x0b\x32\t.RationalH\x00\x12\x11\n\x07int_val\x18\x04 \x01(\x03H\x00\x42\x07\n\x05power\"P\n\x0bIfStatement\x12\x1d\n\toperation\x18\x01 \x01(\x0b\x32\n.Operation\x12\x13\n\x05value\x18\x02 \x01(\x0b\x32\x04.Arg\x12\r\n\x05nbits\x18\x03 \x01(\x03\"(\n\x07Inverse\x12\x1d\n\toperation\x18\x01 \x01(\x0b\x32\n.Operation\"\x1c\n\x07\x42\x61rrier\x12\x11\n\tnumqubits\x18\x01 \x01(\x03\"4\n\nComplexArg\x12\x12\n\x04real\x18\x01 \x01(\x0b\x32\x04.Arg\x12\x12\n\x04imag\x18\x02 \x01(\x0b\x32\x04.Arg\":\n\nGateCustom\x12\x0f\n\x07nqubits\x18\x01 \x01(\x03\x12\x1b\n\x06matrix\x18\x02 \x03(\x0b\x32\x0b.ComplexArg\"7\n\x08GateCall\x12\x17\n\x04\x64\x65\x63l\x18\x01 \x01(\x0b\x32\t.GateDecl\x12\x12\n\x04\x61rgs\x18\x02 \x03(\x0b\x32\x04.Arg\"S\n\x08GateDecl\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x15\n\x04\x61rgs\x18\x02 \x03(\x0b\x32\x07.Symbol\x12\"\n\x0cinstructions\x18\x03 \x03(\x0b\x32\x0c.Instruction\"P\n\x0bInstruction\x12\x1d\n\toperation\x18\x01 \x01(\x0b\x32\n.Operation\x12\x10\n\x08qtargets\x18\x02 \x03(\x03\x12\x10\n\x08\x63targets\x18\x03 \x03(\x03\"-\n\x07\x43ircuit\x12\"\n\x0cinstructions\x18\x01 \x03(\x0b\x32\x0c.Instruction*\x1f\n\nIrrational\x12\x06\n\x02PI\x10\x00\x12\t\n\x05\x45ULER\x10\x01*m\n\x0c\x46unctionType\x12\x07\n\x03\x41\x44\x44\x10\x00\x12\x07\n\x03MUL\x10\x01\x12\x07\n\x03\x44IV\x10\x02\x12\x07\n\x03POW\x10\x03\x12\x07\n\x03SIN\x10\x05\x12\x07\n\x03\x43OS\x10\x06\x12\x07\n\x03TAN\x10\x07\x12\x07\n\x03\x45XP\x10\x08\x12\x07\n\x03LOG\x10\t\x12\x0c\n\x08IDENTITY\x10\n*\xe1\x02\n\x08GateType\x12\t\n\x05GateU\x10\x00\x12\n\n\x06GateID\x10\x01\x12\t\n\x05GateX\x10\x02\x12\t\n\x05GateY\x10\x03\x12\t\n\x05GateZ\x10\x04\x12\t\n\x05GateH\x10\x05\x12\t\n\x05GateS\x10\x06\x12\t\n\x05GateT\x10\x07\x12\t\n\x05GateP\x10\x08\x12\n\n\x06GateRX\x10\n\x12\n\n\x06GateRY\x10\x0b\x12\n\n\x06GateRZ\x10\x0c\x12\t\n\x05GateR\x10\r\x12\n\n\x06GateU1\x10\x0e\x12\n\n\x06GateU2\x10\x0f\x12\n\n\x06GateU3\x10\x10\x12\x0c\n\x08GateSWAP\x10\x11\x12\r\n\tGateISWAP\x10\x12\x12\x0b\n\x07GateECR\x10\x13\x12\x0b\n\x07GateDCX\x10\x14\x12\x0b\n\x07GateRXX\x10\x15\x12\x0b\n\x07GateRYY\x10\x16\x12\x0b\n\x07GateRZZ\x10\x17\x12\x0b\n\x07GateRZX\x10\x18\x12\x10\n\x0cGateXXplusYY\x10\x19\x12\x11\n\rGateXXminusYY\x10\x1a\x12\x0e\n\nGateUPhase\x10\x1b\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'circuit_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _globals['_IRRATIONAL']._serialized_start=1715
  _globals['_IRRATIONAL']._serialized_end=1746
  _globals['_FUNCTIONTYPE']._serialized_start=1748
  _globals['_FUNCTIONTYPE']._serialized_end=1857
  _globals['_GATETYPE']._serialized_start=1860
  _globals['_GATETYPE']._serialized_end=2213
  _globals['_SYMBOL']._serialized_start=17
  _globals['_SYMBOL']._serialized_end=40
  _globals['_ARG']._serialized_start=43
  _globals['_ARG']._serialized_end=209
  _globals['_ARGVALUE']._serialized_start=211
  _globals['_ARGVALUE']._serialized_end=283
  _globals['_ARGFUNCTION']._serialized_start=285
  _globals['_ARGFUNCTION']._serialized_end=355
  _globals['_OPERATION']._serialized_start=358
  _globals['_OPERATION']._serialized_end=738
  _globals['_GATE']._serialized_start=740
  _globals['_GATE']._serialized_end=798
  _globals['_GENERALIZED']._serialized_start=800
  _globals['_GENERALIZED']._serialized_end=865
  _globals['_MEASURE']._serialized_start=867
  _globals['_MEASURE']._serialized_end=876
  _globals['_RESET']._serialized_start=878
  _globals['_RESET']._serialized_end=885
  _globals['_CONTROL']._serialized_start=887
  _globals['_CONTROL']._serialized_end=948
  _globals['_PARALLEL']._serialized_start=950
  _globals['_PARALLEL']._serialized_end=1011
  _globals['_RATIONAL']._serialized_start=1013
  _globals['_RATIONAL']._serialized_end=1049
  _globals['_POWER']._serialized_start=1051
  _globals['_POWER']._serialized_end=1174
  _globals['_IFSTATEMENT']._serialized_start=1176
  _globals['_IFSTATEMENT']._serialized_end=1256
  _globals['_INVERSE']._serialized_start=1258
  _globals['_INVERSE']._serialized_end=1298
  _globals['_BARRIER']._serialized_start=1300
  _globals['_BARRIER']._serialized_end=1328
  _globals['_COMPLEXARG']._serialized_start=1330
  _globals['_COMPLEXARG']._serialized_end=1382
  _globals['_GATECUSTOM']._serialized_start=1384
  _globals['_GATECUSTOM']._serialized_end=1442
  _globals['_GATECALL']._serialized_start=1444
  _globals['_GATECALL']._serialized_end=1499
  _globals['_GATEDECL']._serialized_start=1501
  _globals['_GATEDECL']._serialized_end=1584
  _globals['_INSTRUCTION']._serialized_start=1586
  _globals['_INSTRUCTION']._serialized_end=1666
  _globals['_CIRCUIT']._serialized_start=1668
  _globals['_CIRCUIT']._serialized_end=1713
# @@protoc_insertion_point(module_scope)
